openapi: 3.0.1
info:
  title: CMS Data
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/traffic-data
paths:
  /authorities/getAll:
    get:
      tags:
      - Authorities
      summary: Authorities_Get
      operationId: Authorities_Get
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_List_AuthorityBaseData_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_List_AuthorityBaseData_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_List_AuthorityBaseData_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_List_AuthorityBaseData_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getAuthoritiesWithMovingOrders:
    get:
      tags:
      - Authorities
      summary: Authorities_GetAllAuthoritiesWithMovingOrder
      operationId: Authorities_GetAllAuthoritiesWithMovingOrder
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getAuthoritiesWithOrders:
    get:
      tags:
      - Authorities
      summary: Authorities_GetAuthoritiesWithOrders
      operationId: Authorities_GetAuthoritiesWithOrders
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getAuthoritiesWithStaticOrders:
    get:
      tags:
      - Authorities
      summary: Authorities_GetAllAuthoritiesWithStaticOrders
      operationId: Authorities_GetAllAuthoritiesWithStaticOrders
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityInfoArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getById:
    get:
      tags:
      - Authorities
      summary: Authorities_GetAuthorityById
      operationId: Authorities_GetAuthorityById
      parameters:
      - name: authorityId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getBySlug:
    get:
      tags:
      - Authorities
      summary: Authorities_GetAuthorityBySlug
      operationId: Authorities_GetAuthorityBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthorityDetail_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getFullById:
    get:
      tags:
      - Authorities
      summary: Authorities_GetFull
      operationId: Authorities_GetFull
      parameters:
      - name: authorityId
        in: query
        required: true
        schema:
          type: string
      - name: maxDate
        in: query
        description: Format - date-time (as date-time in RFC3339).
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /authorities/getPublicBySlug:
    get:
      tags:
      - Authorities
      summary: Authorities_GetPublicAuthorityBySlug
      operationId: Authorities_GetPublicAuthorityBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      - name: maxDate
        in: query
        description: Format - date-time (as date-time in RFC3339).
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_AuthoritySnapshotInfo_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /carparks/getAll:
    get:
      tags:
      - CarParks
      summary: CarParks_Get
      operationId: CarParks_Get
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkLight_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkLight_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkLight_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkLight_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /carparks/getById:
    get:
      tags:
      - CarParks
      summary: CarParks_GetCarparkById
      operationId: CarParks_GetCarparkById
      parameters:
      - name: carParkId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_CarParkCmsBlob_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_CarParkCmsBlob_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_CarParkCmsBlob_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_CarParkCmsBlob_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /carparks/searchCarparksByTerm:
    get:
      tags:
      - CarParks
      summary: CarParks_SearchByTerm
      operationId: CarParks_SearchByTerm
      parameters:
      - name: term
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkInfo_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkInfo_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkInfo_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_List_CarParkInfo_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /carparks/searchSmartCarparksByTerm:
    get:
      tags:
      - CarParks
      summary: CarParks_SearchSmartCarparkByTerm
      operationId: CarParks_SearchSmartCarparkByTerm
      parameters:
      - name: term
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_List_SmartCarParkInfo_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_List_SmartCarParkInfo_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_List_SmartCarParkInfo_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_List_SmartCarParkInfo_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /carparks/updateCarparkTariff:
    post:
      tags:
      - CarParks
      summary: CarParks_UpdateCarparkTariffs
      operationId: CarParks_UpdateCarparkTariffs
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarparkTariffsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CarparkTariffsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CarparkTariffsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CarparkTariffsRequest'
          application/x-www-form-urlencoded:
            schema:
              properties:
                parking_id:
                  type: integer
                operatinghours_text:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /carparks/updateSmartCarparkTariff:
    post:
      tags:
      - CarParks
      summary: CarParks_UpdateSmartCarparkTariffs
      operationId: CarParks_UpdateSmartCarparkTariffs
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartCarparkTariffsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SmartCarparkTariffsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SmartCarparkTariffsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SmartCarparkTariffsRequest'
          application/x-www-form-urlencoded:
            schema:
              properties:
                parking_id:
                  type: string
                operatinghours_text:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /movingOrders/data/bulkUpdate:
    post:
      tags:
      - MovingOrdersData
      summary: MovingOrdersData_BulkUpdate
      operationId: MovingOrdersData_BulkUpdate
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: changeSetId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingBulkUpdate'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingChangeSet_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingChangeSet_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingChangeSet_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingChangeSet_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/data/getMovingRestrictionsByAuthorityId:
    get:
      tags:
      - MovingOrdersData
      summary: MovingOrdersData_GetMovingRestrictionsByAuthorityId
      operationId: MovingOrdersData_GetMovingRestrictionsByAuthorityId
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/export/graph:
    get:
      tags:
      - MovingOrdersExport
      summary: MovingOrdersExport_ExportGraph
      operationId: MovingOrdersExport_ExportGraph
      parameters:
      - name: orderId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MFeatureCollection_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/export/pdf:
    get:
      tags:
      - MovingOrdersExport
      summary: MovingOrdersExport_ExportPdf
      operationId: MovingOrdersExport_ExportPdf
      parameters:
      - name: orderId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/export/template:
    post:
      tags:
      - MovingOrdersExport
      summary: MovingOrdersExport_ExportTemplate
      operationId: MovingOrdersExport_ExportTemplate
      parameters:
      - name: orderId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                orderId:
                  type: string
                publishDate:
                  type: string
                activationDate:
                  type: string
                summaryText:
                  type: string
                reasonText:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_String_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_String_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_String_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/manage/changeState:
    post:
      tags:
      - MovingOrdersManage
      summary: MovingOrdersManage_ChangeState
      operationId: MovingOrdersManage_ChangeState
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingStateChangeInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/MovingStateChangeInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/MovingStateChangeInfo'
          text/xml:
            schema:
              $ref: '#/components/schemas/MovingStateChangeInfo'
          application/x-www-form-urlencoded:
            schema:
              properties:
                newState:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                  - "6"
                  type: integer
                tiles:
                  type: array
                customMotivationPageHtml:
                  type: string
                reason:
                  type: string
                summary:
                  type: string
                activationDate:
                  type: string
                consultationEndDate:
                  type: string
                proposalDate:
                  type: string
                authorityId:
                  type: string
                orderId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/manage/create:
    post:
      tags:
      - MovingOrdersManage
      summary: MovingOrdersManage_CreateOrder
      operationId: MovingOrdersManage_CreateOrder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                orderType:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  type: integer
                reason:
                  type: string
                summary:
                  type: string
                authorityId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/manage/delete:
    post:
      tags:
      - MovingOrdersManage
      summary: MovingOrdersManage_DeleteOrder
      operationId: MovingOrdersManage_DeleteOrder
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorityId:
                  type: string
                orderId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/manage/update:
    post:
      tags:
      - MovingOrdersManage
      summary: MovingOrdersManage_UpdateOrder
      operationId: MovingOrdersManage_UpdateOrder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/MovingOrder'
          application/xml:
            schema:
              $ref: '#/components/schemas/MovingOrder'
          text/xml:
            schema:
              $ref: '#/components/schemas/MovingOrder'
          application/x-www-form-urlencoded:
            schema:
              properties:
                orderType:
                  enum:
                  - "0"
                  - "1"
                  type: integer
                orderId:
                  type: string
                name:
                  type: string
                authorityId:
                  type: string
                state:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                  - "6"
                  type: integer
                activationDate:
                  type: string
                consultationEndDate:
                  type: string
                summary:
                  type: string
                reason:
                  type: string
                history:
                  type: array
                changeSets:
                  type: array
                validationState:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  type: integer
                validationReason:
                  type: string
                lastModified:
                  type: string
                tiles:
                  type: array
                FeedbackState:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/query/getByAuthorityIdAndState:
    get:
      tags:
      - MovingOrdersQuery
      summary: MovingOrdersQuery_GetOrdersByAuthorityAndState
      operationId: MovingOrdersQuery_GetOrdersByAuthorityAndState
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: state
        in: query
        description: Format - int32.
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrderArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrderArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrderArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrderArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/query/getById:
    get:
      tags:
      - MovingOrdersQuery
      summary: MovingOrdersQuery_GetOrderById
      operationId: MovingOrdersQuery_GetOrderById
      parameters:
      - name: orderId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /movingOrders/query/getSparseOrderById:
    get:
      tags:
      - MovingOrdersQuery
      summary: MovingOrdersQuery_GetSparseOrderById
      operationId: MovingOrdersQuery_GetSparseOrderById
      parameters:
      - name: orderId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_MovingOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/data/bulkUpdate:
    post:
      tags:
      - OrdersData
      summary: OrdersData_BulkUpdateChangeSet
      operationId: OrdersData_BulkUpdateChangeSet
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_ChangeSet_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_ChangeSet_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_ChangeSet_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_ChangeSet_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/data/createAdditionFromFeature:
    post:
      tags:
      - OrdersData
      summary: OrdersData_PostAdditionFromFeature
      operationId: OrdersData_PostAdditionFromFeature
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromFeature'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromFeature'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromFeature'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromFeature'
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorityId:
                  type: string
                changeSetId:
                  type: string
                feature:
                  type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/data/createAdditionFromGeometry:
    post:
      tags:
      - OrdersData
      summary: OrdersData_PostAddition
      operationId: OrdersData_PostAddition
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromGeometry'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromGeometry'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromGeometry'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAdditionFromGeometry'
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorityId:
                  type: string
                changeSetId:
                  type: string
                geometry:
                  type: object
                restrictionTypeIds:
                  type: array
                bays:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Addition_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/export/graph:
    get:
      tags:
      - OrdersExport
      summary: OrdersExport_ExportOrderGraph
      operationId: OrdersExport_ExportOrderGraph
      parameters:
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: includeAllChangeSets
        in: query
        schema:
          type: boolean
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_OrderGraphSnapshot_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_OrderGraphSnapshot_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_OrderGraphSnapshot_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_OrderGraphSnapshot_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/export/pdf:
    get:
      tags:
      - OrdersExport
      summary: OrdersExport_DownloadOrderPdf
      operationId: OrdersExport_DownloadOrderPdf
      parameters:
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: Format - int32.
        required: true
        schema:
          enum:
          - 0
          - 1
          type: integer
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/export/template:
    post:
      tags:
      - OrdersExport
      summary: OrdersExport_GetExportTemplate
      operationId: OrdersExport_GetExportTemplate
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequestRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                orderId:
                  type: string
                publishDate:
                  type: string
                activationDate:
                  type: string
                summaryText:
                  type: string
                reasonText:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_String_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_String_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_String_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/export/text:
    get:
      tags:
      - OrdersExport
      summary: OrdersExport_ExportOrderText
      operationId: OrdersExport_ExportOrderText
      parameters:
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_FeatureCollection_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_FeatureCollection_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_FeatureCollection_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_FeatureCollection_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/manage/changeState:
    post:
      tags:
      - OrdersManage
      summary: OrdersManage_ChangeOrderState
      operationId: OrdersManage_ChangeOrderState
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateChangeInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/StateChangeInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/StateChangeInfo'
          text/xml:
            schema:
              $ref: '#/components/schemas/StateChangeInfo'
          application/x-www-form-urlencoded:
            schema:
              properties:
                newState:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                  - "6"
                  - "7"
                  type: integer
                tiles:
                  type: array
                customMotivationPageHtml:
                  type: string
                reason:
                  type: string
                summary:
                  type: string
                activationDate:
                  type: string
                consultationEndDate:
                  type: string
                proposalDate:
                  type: string
                authorityId:
                  type: string
                orderId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/manage/create:
    post:
      tags:
      - OrdersManage
      summary: OrdersManage_CreateNewOrder
      operationId: OrdersManage_CreateNewOrder
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/NewOrderRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                orderType:
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  type: integer
                reason:
                  type: string
                summary:
                  type: string
                authorityId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/manage/delete:
    post:
      tags:
      - OrdersManage
      summary: OrdersManage_DeleteOrderById
      operationId: OrdersManage_DeleteOrderById
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteOrderRequestRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorityId:
                  type: string
                orderId:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/manage/update:
    post:
      tags:
      - OrdersManage
      summary: OrdersManage_PatchOrder
      operationId: OrdersManage_PatchOrder
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderParameters'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateOrderParameters'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateOrderParameters'
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorityId:
                  type: string
                orderId:
                  type: string
                name:
                  type: string
                summary:
                  type: string
                reason:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/manage/validate:
    get:
      tags:
      - OrdersManage
      summary: OrdersManage_ValidateOrder
      operationId: OrdersManage_ValidateOrder
      parameters:
      - name: authorityId
        in: query
        required: true
        schema:
          type: string
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/query/getByAuthorityStateAndType:
    get:
      tags:
      - OrdersQuery
      summary: OrdersQuery_GetAllOrdersByAuthorityAndStateAndOrderType
      operationId: OrdersQuery_GetAllOrdersByAuthorityAndStateAndOrderType
      parameters:
      - name: authorityId
        in: query
        schema:
          type: string
      - name: state
        in: query
        description: Format - int32.
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
      - name: orderType
        in: query
        description: Format - int32.
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_OrderArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_OrderArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_OrderArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_OrderArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/query/getById:
    get:
      tags:
      - OrdersQuery
      summary: OrdersQuery_GetOrderById
      operationId: OrdersQuery_GetOrderById
      parameters:
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_FullOrder_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_FullOrder_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_FullOrder_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_FullOrder_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/query/getChangeSet:
    get:
      tags:
      - OrdersQuery
      summary: OrdersQuery_GetChangeSet
      operationId: OrdersQuery_GetChangeSet
      parameters:
      - name: changeSetId
        in: query
        description: Format - uuid.
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_FullChangeSet_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_FullChangeSet_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_FullChangeSet_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_FullChangeSet_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/query/getLatestMade:
    get:
      tags:
      - OrdersQuery
      summary: OrdersQuery_GetLatestMadeOrderByOspId
      operationId: OrdersQuery_GetLatestMadeOrderByOspId
      parameters:
      - name: ospId
        in: query
        required: true
        schema:
          type: string
      - name: maxDate
        in: query
        description: Format - date-time (as date-time in RFC3339).
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /orders/query/getSparseOrderById:
    get:
      tags:
      - OrdersQuery
      summary: OrdersQuery_GetSparseOrderById
      operationId: OrdersQuery_GetSparseOrderById
      parameters:
      - name: orderId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Order_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /suspensions/create:
    post:
      tags:
      - Suspensions
      summary: Suspensions_CreateSuspension
      operationId: Suspensions_CreateSuspension
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                suspensionId:
                  type: string
                authorityId:
                  type: string
                ExternalId:
                  type: string
                ExternalSource:
                  type: string
                name:
                  type: string
                reason:
                  type: string
                times:
                  type: array
                ospIds:
                  type: array
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /suspensions/delete:
    post:
      tags:
      - Suspensions
      summary: Suspensions_DeleteSuspension
      operationId: Suspensions_DeleteSuspension
      parameters:
      - name: suspensionId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
            text/json:
              schema:
                $ref: '#/components/schemas/Result'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /suspensions/getByAuthorityId:
    get:
      tags:
      - Suspensions
      summary: Suspensions_GetAllSuspensionsByAuthority
      operationId: Suspensions_GetAllSuspensionsByAuthority
      parameters:
      - name: authorityId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_SuspensionArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_SuspensionArray_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_SuspensionArray_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_SuspensionArray_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /suspensions/getById:
    get:
      tags:
      - Suspensions
      summary: Suspensions_GetSuspensionById
      operationId: Suspensions_GetSuspensionById
      parameters:
      - name: suspensionId
        in: query
        required: true
        schema:
          type: string
      - name: API-KEY
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
  /suspensions/update:
    post:
      tags:
      - Suspensions
      summary: Suspensions_UpdateSuspension
      operationId: Suspensions_UpdateSuspension
      parameters:
      - name: API-KEY
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          application/xml:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          text/xml:
            schema:
              $ref: '#/components/schemas/SuspensionRequest-xml-1'
          application/x-www-form-urlencoded:
            schema:
              properties:
                suspensionId:
                  type: string
                authorityId:
                  type: string
                ExternalId:
                  type: string
                ExternalSource:
                  type: string
                name:
                  type: string
                reason:
                  type: string
                times:
                  type: array
                ospIds:
                  type: array
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/json:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Result_Suspension_'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
components:
  schemas:
    AuthoritySnapshotInfo:
      type: object
      properties:
        authorityUrl:
          type: string
        zonesUrl:
          type: string
        ospsUrl:
          type: string
        date:
          type: string
          format: date-time
        dataUpdateId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    ErrorResult:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        error:
          type: string
    AuthorityDetail:
      type: object
      properties:
        centroid:
          $ref: '#/components/schemas/LatLng'
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        privacyPolicyUrl:
          type: string
        osLicenceText:
          type: string
        osKey:
          type: string
        osVersion:
          enum:
          - 1
          - 2
          type: integer
          format: int32
        authorityId:
          type: string
        authoritySlugs:
          type: array
          items:
            type: string
        name:
          type: string
    LatLng:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    BoundingBox:
      type: object
      properties:
        topLeft:
          $ref: '#/components/schemas/LatLng'
        bottomRight:
          $ref: '#/components/schemas/LatLng'
    AuthorityBaseData:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        regionId:
          type: string
        countryId:
          type: string
        authoritySlugs:
          type: array
          items:
            type: string
        isPubliclyViewable:
          type: boolean
        osKey:
          type: string
        osVersion:
          enum:
          - 1
          - 2
          type: integer
          format: int32
    AuthorityInfo:
      type: object
      properties:
        made:
          type: integer
          format: int32
        published:
          type: integer
          format: int32
        proposal:
          type: integer
          format: int32
        editingProposal:
          type: integer
          format: int32
        editingDraft:
          type: integer
          format: int32
        draft:
          type: integer
          format: int32
        authorityId:
          type: string
        authoritySlugs:
          type: array
          items:
            type: string
        name:
          type: string
    CarParkLight:
      type: object
      properties:
        name:
          type: string
        eTag:
          type: string
        carParkId:
          type: string
        dataOriginId:
          type: string
    CarParkCmsBlob:
      type: object
      properties:
        carParkId:
          type: string
        dataOriginId:
          type: string
        name:
          type: string
        subTitle:
          type: string
        description:
          type: string
        otherInformation:
          type: string
        telephone:
          type: string
        website:
          type: string
        paymentTelephone:
          type: string
        paymentUrl:
          type: string
        type:
          type: integer
          format: int32
        locationDetails:
          $ref: '#/components/schemas/LocationDetailsCms'
        locationProvider:
          type: integer
          format: int32
        openHours:
          type: array
          items:
            $ref: '#/components/schemas/RuleTimeCms'
        timesOfOperation:
          type: array
          items:
            $ref: '#/components/schemas/CarParkTimesOfOperationCms'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ReviewCms'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteCms'
        bays:
          type: integer
          format: int32
        disabledSpaces:
          type: integer
          format: int32
        chargingPoints:
          type: integer
          format: int32
        motorcycleBays:
          type: integer
          format: int32
        isFree:
          type: boolean
        isFreeMotorcycle:
          type: boolean
        hasLifts:
          type: boolean
        isManned:
          type: boolean
        cardsAccepted:
          type: boolean
        canPayByMobile:
          type: boolean
        hasToilets:
          type: boolean
        heightRestriction:
          type: string
        seasonTicket:
          type: string
        timeType:
          type: integer
          format: int32
        sourceTag:
          type: string
        partition:
          type: string
        layout:
          type: array
          items:
            $ref: '#/components/schemas/SmartCarparkFloorCms'
        ownerId:
          type: string
        authorityId:
          type: string
        locationNumber:
          type: string
        counterType:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
        surfaceType:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        timezoneSystemId:
          type: string
        hasBlePayment:
          type: boolean
        hasCarpool:
          type: boolean
        hasBleTag:
          type: boolean
        maxStay:
          type: integer
          format: int32
        gracePeriod:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        ParentId:
          type: string
          readOnly: true
        registrationEnabled:
          type: boolean
    LocationDetailsCms:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        shape:
          $ref: '#/components/schemas/Geometry'
        address:
          $ref: '#/components/schemas/AddressCms'
        line:
          $ref: '#/components/schemas/Geometry'
    RuleTimeCms:
      type: object
      properties:
        months:
          type: array
          items:
            type: integer
            format: int32
        days:
          type: array
          items:
            type: integer
            format: int32
          description: Applicable Days
        weekNumbers:
          type: array
          items:
            type: integer
            format: int32
          description: Week number to apply Days
        hours:
          type: array
          items:
            $ref: '#/components/schemas/HoursCms'
        firstDate:
          $ref: '#/components/schemas/MonthAndDayCms'
        lastDate:
          $ref: '#/components/schemas/MonthAndDayCms'
    CarParkTimesOfOperationCms:
      type: object
      properties:
        type:
          type: integer
          format: int32
        time:
          type: array
          items:
            $ref: '#/components/schemas/RuleTimeCms'
        tariffs:
          type: array
          items:
            $ref: '#/components/schemas/TariffForTimesAndDatesCms'
        maxStay:
          type: integer
          description: Maximum stay duration in minutes.
          format: int32
        minStay:
          type: integer
          description: Min stay duration in minutes.
          format: int32
        noReturn:
          type: integer
          description: No return duration in minutes.
          format: int32
    ReviewCms:
      type: object
      properties:
        username:
          type: string
        rating:
          type: number
          format: double
        dateAndTime:
          type: string
          format: date-time
        description:
          type: string
    NoteCms:
      type: object
      properties:
        noteVisibilityTypeId:
          type: integer
          description: See {!:BundleCmsBlob.NoteVisibilityTypes} for more information on types of visibilities for notes
          format: int32
        appliesToRestrictionTypeIds:
          type: array
          items:
            type: integer
            format: int32
        priority:
          type: integer
          format: int32
        title:
          type: string
        message:
          type: string
        url:
          type: string
        telephone:
          type: string
    SmartCarparkFloorCms:
      type: object
      properties:
        floorId:
          type: string
        shape:
          $ref: '#/components/schemas/Geometry'
        name:
          type: string
        floorOrder:
          type: integer
          format: int32
        bayCounts:
          type: array
          items:
            $ref: '#/components/schemas/SmartCarparkBayCountCms'
          description: Represents bay counts for bays not represented
        bays:
          type: array
          items:
            $ref: '#/components/schemas/SmartCarparkBayCms'
          description: Represents all individually declared bays for a given carpark
        enterSensors:
          type: array
          items:
            type: string
        exitSensors:
          type: array
          items:
            type: string
    Geometry:
      type: object
      properties:
        type:
          type: string
        crs:
          $ref: '#/components/schemas/Crs'
    AddressCms:
      type: object
      properties:
        street:
          type: string
        postcode:
          type: string
        city:
          type: string
        country:
          type: string
    HoursCms:
      type: object
      properties:
        start:
          type: object
        end:
          type: object
    MonthAndDayCms:
      type: object
      properties:
        month:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
    TariffForTimesAndDatesCms:
      type: object
      properties:
        parkingEntitlementTypeIds:
          type: array
          items:
            type: integer
            format: int32
          description: The payment types for which these tariff details apply.
        details:
          type: array
          items:
            $ref: '#/components/schemas/TariffDetailCms'
          description: |-
            The details of the tariff that applies for the entitlement types
            and dates indicated by this entry.
        timeFrom:
          type: object
          description: |-
            For tariffs that vary by time of day, this indicates the
            (inclusive) start time from which these particular tariff details
            apply.
        timeTo:
          type: object
          description: |-
            For tariffs that vary by time of day, this indicates the
            (exclusive) end time to which these particular tariff details
            apply.
        firstDate:
          $ref: '#/components/schemas/MonthAndDayCms'
        lastDate:
          $ref: '#/components/schemas/MonthAndDayCms'
        months:
          type: array
          items:
            type: integer
            format: int32
          description: The months of the year on which these details apply.
        days:
          type: array
          items:
            type: integer
            format: int32
          description: |-
            The days of the week (1 = Mon, 7 = Sun) on which these details
            apply.
        timeType:
          type: integer
          description: Indicates the Type of Tariff
          format: int32
      description: |-
        Contains tariff details applicable to a particular set of dates and
        times, and for a particular set of entitlement types.
    SmartCarparkBayCountCms:
      type: object
      properties:
        count:
          type: integer
          format: int32
        type:
          type: string
    SmartCarparkBayCms:
      type: object
      properties:
        bayId:
          type: string
        shape:
          $ref: '#/components/schemas/Geometry'
        sensorIds:
          type: array
          items:
            type: string
        bayType:
          type: string
        maxStay:
          type: integer
          format: int32
        gracePeriod:
          type: integer
          format: int32
        name:
          type: string
        bayFloorOrder:
          type: integer
          format: int32
    Crs:
      type: object
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/CrsProperties'
    TariffDetailCms:
      type: object
      properties:
        price:
          type: integer
          description: |-
            The price in pence charged for parking for the indicated
            {Ylp.Cms.BlobEntities.TariffDetailCms.Duration}.
          format: int32
        surcharge:
          type: integer
          description: No longer Used - Needs to be Removed
          format: int32
        surchargeDetail:
          $ref: '#/components/schemas/TariffDetailSurchargeCms'
        duration:
          type: integer
          description: |-
            The duration in minutes for which you can park if you pay
            {Ylp.Cms.BlobEntities.TariffDetailCms.Price}. Null if there is a fixed charge regardless
            of duration.
          format: int32
        minimumPriceIncrement:
          type: integer
          description: |-
            The smallest unit by which the price can increment. If null, then
            the minimum increment will be the same as {Ylp.Cms.BlobEntities.TariffDetailCms.Price}.
          format: int32
        singlePaymentCanCrossMidnight:
          type: boolean
          description: |-
            Indicates whether a payment of one minimum increment is allowed
            to cross over midnight.
        from:
          type: integer
          description: |-
            The offset in minutes into a parking session from which this rate
            applies.
          format: int32
        upTo:
          type: integer
          description: |-
            Set on variable rate tariffs to indicate the maximum stay length
            for which this entry applies.
          format: int32
      description: |-
        One entry in the tariff details in a
        {Ylp.Cms.BlobEntities.TariffForTimesAndDatesCms}.
    CrsProperties:
      type: object
      properties:
        name:
          type: string
    TariffDetailSurchargeCms:
      type: object
      properties:
        surchargeType:
          type: integer
          description: Required property that determines how surcharge is calculated
          format: int32
        value:
          type: integer
          description: ""
          format: int32
        notes:
          type: string
          description: Additional of Surcharge including Rules
        ruleType:
          type: integer
          format: int32
    CarParkInfo:
      type: object
      properties:
        parking_id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        operatinghours_text:
          type: string
    CarparkTariffsRequest:
      type: object
      properties:
        parking_id:
          type: integer
          format: int32
        operatinghours_text:
          type: string
    Result:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
    SmartCarParkInfo:
      type: object
      properties:
        parking_id:
          type: string
        name:
          type: string
        address:
          type: string
        operatinghours_text:
          type: string
    SmartCarparkTariffsRequest:
      type: object
      properties:
        parking_id:
          type: string
        operatinghours_text:
          type: string
    MovingChangeSet:
      type: object
      properties:
        changeSetId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        creationDate:
          type: string
          format: date-time
        closedDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        additions:
          type: array
          items:
            $ref: '#/components/schemas/MovingAddition'
        revocations:
          type: array
          items:
            $ref: '#/components/schemas/MovingRevocation'
        modifications:
          type: array
          items:
            $ref: '#/components/schemas/MovingModification'
    MovingAddition:
      type: object
      properties:
        additionId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        feature:
          $ref: '#/components/schemas/MFeature'
        changeSetId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        date:
          type: string
          format: date-time
    MovingRevocation:
      type: object
      properties:
        revocationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        feature:
          $ref: '#/components/schemas/MFeature'
        changeSetId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        date:
          type: string
          format: date-time
    MovingModification:
      type: object
      properties:
        modificationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        oldFeature:
          $ref: '#/components/schemas/MFeature'
        newFeature:
          $ref: '#/components/schemas/MFeature'
        changeSetId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        date:
          type: string
          format: date-time
    MFeature:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    MovingBulkUpdate:
      type: object
      properties:
        additions:
          $ref: '#/components/schemas/MovingBulkUpdate_Bulk_MovingAddition_'
        modifications:
          $ref: '#/components/schemas/MovingBulkUpdate_Bulk_MovingModification_'
        revocations:
          $ref: '#/components/schemas/MovingBulkUpdate_Bulk_MovingRevocation_'
    MFeatureCollection:
      type: object
      properties:
        type:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/MFeature'
        properties:
          type: object
    ExportTemplateRequest:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        publishDate:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        summaryText:
          type: string
        reasonText:
          type: string
    DeleteOrderRequest:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    NewOrder:
      type: object
      properties:
        name:
          type: string
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        reason:
          type: string
        summary:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    MovingOrder:
      type: object
      properties:
        orderType:
          enum:
          - 0
          - 1
          type: integer
          format: int32
          readOnly: true
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        state:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
          format: int32
        activationDate:
          type: string
          format: date-time
        consultationEndDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/MovingStateChange'
        changeSets:
          type: array
          items:
            $ref: '#/components/schemas/MovingChangeSet'
        validationState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
        validationReason:
          type: string
        lastModified:
          type: string
          format: date-time
          readOnly: true
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/BoundingBox'
        FeedbackState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
          readOnly: true
    MovingStateChange:
      type: object
      properties:
        stateChangeId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        previousState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
          format: int32
        newState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        changeSetId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/MovingOrderDocument'
    MovingOrderDocument:
      type: object
      properties:
        DocumentId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        StateChangeId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        CreationDate:
          type: string
          format: date-time
    MovingStateChangeInfo:
      type: object
      properties:
        newState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
          format: int32
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/BoundingBox'
        customMotivationPageHtml:
          type: string
        reason:
          type: string
        summary:
          type: string
        activationDate:
          type: string
          format: date-time
        consultationEndDate:
          type: string
          format: date-time
        proposalDate:
          type: string
          format: date-time
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    CreateAdditionFromFeature:
      type: object
      properties:
        authorityId:
          type: string
        changeSetId:
          type: string
        feature:
          $ref: '#/components/schemas/Feature_Geometry_Osp_'
    Osp:
      type: object
      properties:
        onStreetParkingId:
          type: string
          description: GUID of the OSP
        zoneId:
          type: string
          description: GUID of the zone this OSP belongs to
        authorityId:
          type: string
          description: GUID of the authority this OSP belongs to
        address:
          $ref: '#/components/schemas/AddressCms'
        length:
          type: number
          description: Length in meters of the OSP. Can be null
          format: double
        bays:
          type: integer
          description: Number of bays that are in this OSP
          format: int32
        restrictionTypeDetails:
          type: array
          items:
            $ref: '#/components/schemas/SetRestrictionDetail'
          description: Information about which set of restrictions apply to this OSP
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteCms'
          description: List of free text information about this OSP
        electricPoint:
          $ref: '#/components/schemas/ElectricPointCms'
        venueId:
          type: string
          description: The venue to which this OSP is linked to. This determines when an OSP should follow the event day restriction instead of standard operating hours
        sourceTag:
          type: string
          description: Internal tracking ID
        sensorIds:
          type: array
          items:
            type: string
          description: List of sensors that are linked to the OSP (obsolete)
        metaData:
          type: object
          additionalProperties:
            type: string
          description: Internal tracking ID
        centroid:
          $ref: '#/components/schemas/LatLng'
        tags:
          type: array
          items:
            type: string
        linkedOspIds:
          type: array
          items:
            type: string
          description: |-
            IDs of any OSPs that are 'linked' to this one. When calculating parking availability and cost, the restrictions of any linked OSPs should
            be taken into account as well as the restrictions of this OSP. Used for scenarios where multiple OSPs apply to the same section of kerb.
    SetRestrictionDetail:
      type: object
      properties:
        restrictionTypeId:
          type: integer
          description: Type of the bay this restriction applies to {!:BundleCmsBlob.RestrictionTypes}
          format: int32
        locationNumber:
          type: string
          description: Used in conjunction with the payment provider on the authority to determine how the charge the user
        operatingHoursSet:
          type: array
          items:
            $ref: '#/components/schemas/LinkedEntitlementSet'
          description: Indicates the hours of operation when the restriction is in effect.
        exemptionsSet:
          $ref: '#/components/schemas/LinkedSet'
        exceptionsSet:
          $ref: '#/components/schemas/LinkedSet'
        tariffsSet:
          type: array
          items:
            $ref: '#/components/schemas/LinkedEntitlementSet'
          description: Indicates the applicable tariffs in the case of restrictions that can have a tariff
    ElectricPointCms:
      type: object
      properties:
        manufacturer:
          type: string
        manufacturerContactNumber:
          type: string
        chargeFee:
          type: string
        website:
          type: string
        connections:
          type: array
          items:
            $ref: '#/components/schemas/ElectricConnectionCms'
    LinkedEntitlementSet:
      type: object
      properties:
        parkingEntitlementTypeIds:
          type: array
          items:
            type: integer
            format: int32
          description: The entitlement ID's to which this set applies. See {!:BundleCmsBlob.ParkingEntitlementTypes}
        setId:
          type: string
          description: GUID of the applicable set. The set can be found in the {Ylp.Cms.BlobEntities.Authority}
    LinkedSet:
      type: object
      properties:
        setId:
          type: string
          description: GUID of the applicable set. The set can be found in the {Ylp.Cms.BlobEntities.Authority}
    ElectricConnectionCms:
      type: object
      properties:
        type:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          format: int32
    Addition:
      type: object
      properties:
        additionId:
          type: string
        osp:
          $ref: '#/components/schemas/Feature'
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    Feature:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
    CreateAdditionFromGeometry:
      type: object
      properties:
        authorityId:
          type: string
        changeSetId:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        restrictionTypeIds:
          type: array
          items:
            type: integer
            format: int32
        bays:
          type: integer
          format: int32
    ChangeSet:
      type: object
      properties:
        changeSetId:
          type: string
        orderId:
          type: string
        creationDate:
          type: string
          format: date-time
        closedDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        changeSetState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
    BulkUpdateRequest:
      type: object
      properties:
        authorityId:
          type: string
        changeSetId:
          type: string
        bulkUpdate:
          $ref: '#/components/schemas/BulkUpdate'
    BulkUpdate:
      type: object
      properties:
        additions:
          $ref: '#/components/schemas/BulkUpdate_Bulk_Addition_'
        modifications:
          $ref: '#/components/schemas/BulkUpdate_Bulk_Modification_'
        revocations:
          $ref: '#/components/schemas/BulkUpdate_Bulk_Revocation_'
        setAdditions:
          $ref: '#/components/schemas/BulkUpdate_Bulk_SetAddition_'
        setModifications:
          $ref: '#/components/schemas/BulkUpdate_Bulk_SetModification_'
        setRevocations:
          $ref: '#/components/schemas/BulkUpdate_Bulk_SetRevocation_'
        zoneAdditions:
          $ref: '#/components/schemas/BulkUpdate_Bulk_ZoneAddition_'
        zoneModifications:
          $ref: '#/components/schemas/BulkUpdate_Bulk_ZoneModification_'
        zoneRevocations:
          $ref: '#/components/schemas/BulkUpdate_Bulk_ZoneRevocation_'
        authorityModifications:
          $ref: '#/components/schemas/BulkUpdate_Bulk_AuthorityModification_'
    Modification:
      type: object
      properties:
        modificationid:
          type: string
        changeType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          type: integer
          format: int32
        ospIds:
          type: array
          items:
            type: string
        restrictionTypeId:
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    Revocation:
      type: object
      properties:
        revocationid:
          type: string
        osp:
          $ref: '#/components/schemas/Feature'
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    SetAddition:
      type: object
      properties:
        setAdditionId:
          type: string
        set:
          $ref: '#/components/schemas/SetBase'
        setType:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    SetModification:
      type: object
      properties:
        setModificationId:
          type: string
        oldSet:
          $ref: '#/components/schemas/SetBase'
        newSet:
          $ref: '#/components/schemas/SetBase'
        setType:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    SetRevocation:
      type: object
      properties:
        setRevocationid:
          type: string
        set:
          $ref: '#/components/schemas/SetBase'
        setType:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    ZoneAddition:
      type: object
      properties:
        zoneAdditionId:
          type: string
        zone:
          $ref: '#/components/schemas/Feature'
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    ZoneModification:
      type: object
      properties:
        zoneModificationId:
          type: string
        zoneChangeType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          type: integer
          format: int32
        zoneIds:
          type: array
          items:
            type: string
        restrictionTypeId:
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    ZoneRevocation:
      type: object
      properties:
        zoneRevocationid:
          type: string
        zone:
          $ref: '#/components/schemas/Feature'
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    AuthorityModification:
      type: object
      properties:
        authorityModificationId:
          type: string
        authorityChangeType:
          enum:
          - 0
          type: integer
          format: int32
        changeSetId:
          type: string
        date:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    SetBase:
      type: object
      properties:
        setId:
          type: string
        name:
          type: string
        FormattedName:
          type: string
          readOnly: true
    OrderGraphSnapshot:
      type: object
      properties:
        orderId:
          type: string
        hash:
          type: string
        message:
          type: string
        fullSnapshotName:
          type: string
          readOnly: true
    FeatureCollection:
      type: object
      properties:
        type:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        properties:
          type: object
    Order:
      type: object
      properties:
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        orderId:
          type: string
        name:
          type: string
        authorityId:
          type: string
        state:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        activationDate:
          type: string
          format: date-time
        consultationEndDate:
          type: string
          format: date-time
        proposalDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/StateChange'
        changeSets:
          type: array
          items:
            $ref: '#/components/schemas/ChangeSet'
        validationState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
        validationReason:
          type: string
        lastModified:
          type: string
          format: date-time
          readOnly: true
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/BoundingBox'
        FeedbackState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
          readOnly: true
    StateChange:
      type: object
      properties:
        stateChangeId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
        previousState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        newState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        changeSetId:
          type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/StaticOrderDocument'
    StaticOrderDocument:
      type: object
      properties:
        DocumentId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        StateChangeId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        CreationDate:
          type: string
          format: date-time
        Type:
          enum:
          - 0
          - 1
          type: integer
          format: int32
    UpdateOrderParameters:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
        name:
          type: string
        summary:
          type: string
        reason:
          type: string
    StateChangeInfo:
      type: object
      properties:
        newState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/BoundingBox'
        customMotivationPageHtml:
          type: string
        reason:
          type: string
        summary:
          type: string
        activationDate:
          type: string
          format: date-time
        consultationEndDate:
          type: string
          format: date-time
        proposalDate:
          type: string
          format: date-time
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    FullOrder:
      type: object
      properties:
        changeSets:
          type: array
          items:
            $ref: '#/components/schemas/FullChangeSet'
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        orderId:
          type: string
        name:
          type: string
        authorityId:
          type: string
        state:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          format: int32
        activationDate:
          type: string
          format: date-time
        consultationEndDate:
          type: string
          format: date-time
        proposalDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/StateChange'
        validationState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
        validationReason:
          type: string
        lastModified:
          type: string
          format: date-time
          readOnly: true
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/BoundingBox'
        FeedbackState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
          readOnly: true
    FullChangeSet:
      type: object
      properties:
        modifications:
          type: array
          items:
            $ref: '#/components/schemas/Modification'
        additions:
          type: array
          items:
            $ref: '#/components/schemas/Addition'
        revocations:
          type: array
          items:
            $ref: '#/components/schemas/Revocation'
        setAdditions:
          type: array
          items:
            $ref: '#/components/schemas/SetAddition'
        setModifications:
          type: array
          items:
            $ref: '#/components/schemas/SetModification'
        setRevocations:
          type: array
          items:
            $ref: '#/components/schemas/SetRevocation'
        zoneAdditions:
          type: array
          items:
            $ref: '#/components/schemas/ZoneAddition'
        zoneModifications:
          type: array
          items:
            $ref: '#/components/schemas/ZoneModification'
        zoneRevocations:
          type: array
          items:
            $ref: '#/components/schemas/ZoneRevocation'
        authorityModifications:
          type: array
          items:
            $ref: '#/components/schemas/AuthorityModification'
        changeSetId:
          type: string
        orderId:
          type: string
        creationDate:
          type: string
          format: date-time
        closedDate:
          type: string
          format: date-time
        summary:
          type: string
        reason:
          type: string
        changeSetState:
          enum:
          - 0
          - 1
          - 2
          type: integer
          format: int32
    Suspension:
      type: object
      properties:
        suspensionId:
          type: string
        authorityId:
          type: string
        ExternalId:
          type: string
        ExternalSource:
          type: string
        name:
          type: string
        reason:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionTime'
        ospIds:
          type: array
          items:
            type: string
    SuspensionTime:
      type: object
      properties:
        days:
          type: array
          items:
            type: integer
            format: int32
          description: Dates of the week when the suspension is active
        hours:
          type: array
          items:
            $ref: '#/components/schemas/HoursCms'
          description: Hours of the day when the suspension is active (only on {Ylp.Cms.Core.Suspensions.Model.SuspensionTime.Days})
        startDate:
          type: string
          description: First date when the suspension is active (inclusive)
          format: date-time
        endDate:
          type: string
          description: Last date when the suspension is active (inclusive)
          format: date-time
    Result_AuthoritySnapshotInfo_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/AuthoritySnapshotInfo'
    Result_AuthorityDetail_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/AuthorityDetail'
    Result_List_AuthorityBaseData_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/AuthorityBaseData'
    Result_AuthorityInfoArray_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/AuthorityInfo'
    Result_List_CarParkLight_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CarParkLight'
    Result_CarParkCmsBlob_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/CarParkCmsBlob'
    Result_List_CarParkInfo_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CarParkInfo'
    Result_List_SmartCarParkInfo_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/SmartCarParkInfo'
    Result_MovingChangeSet_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/MovingChangeSet'
    MovingBulkUpdate_Bulk_MovingAddition_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/MovingAddition'
        update:
          type: array
          items:
            $ref: '#/components/schemas/MovingAddition'
        delete:
          type: array
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
    MovingBulkUpdate_Bulk_MovingModification_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/MovingModification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/MovingModification'
        delete:
          type: array
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
    MovingBulkUpdate_Bulk_MovingRevocation_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/MovingRevocation'
        update:
          type: array
          items:
            $ref: '#/components/schemas/MovingRevocation'
        delete:
          type: array
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
    Result_MFeatureCollection_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/MFeatureCollection'
    Result_String_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: string
    Result_MovingOrder_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/MovingOrder'
    Result_MovingOrderArray_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/MovingOrder'
    Feature_Geometry_Osp_:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/Osp'
        geometry:
          $ref: '#/components/schemas/Geometry'
        type:
          type: string
        id:
          type: string
    Result_Addition_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/Addition'
    Result_ChangeSet_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/ChangeSet'
    BulkUpdate_Bulk_Addition_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/Addition'
        update:
          type: array
          items:
            $ref: '#/components/schemas/Addition'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_Modification_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/Modification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/Modification'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_Revocation_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/Revocation'
        update:
          type: array
          items:
            $ref: '#/components/schemas/Revocation'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_SetAddition_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/SetAddition'
        update:
          type: array
          items:
            $ref: '#/components/schemas/SetAddition'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_SetModification_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/SetModification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/SetModification'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_SetRevocation_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/SetRevocation'
        update:
          type: array
          items:
            $ref: '#/components/schemas/SetRevocation'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_ZoneAddition_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/ZoneAddition'
        update:
          type: array
          items:
            $ref: '#/components/schemas/ZoneAddition'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_ZoneModification_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/ZoneModification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/ZoneModification'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_ZoneRevocation_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/ZoneRevocation'
        update:
          type: array
          items:
            $ref: '#/components/schemas/ZoneRevocation'
        delete:
          type: array
          items:
            type: string
    BulkUpdate_Bulk_AuthorityModification_:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/AuthorityModification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/AuthorityModification'
        delete:
          type: array
          items:
            type: string
    Result_OrderGraphSnapshot_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/OrderGraphSnapshot'
    Result_FeatureCollection_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/FeatureCollection'
    Result_Order_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/Order'
    Result_OrderArray_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Result_FullOrder_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/FullOrder'
    Result_FullChangeSet_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/FullChangeSet'
    Result_SuspensionArray_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionRequest-xml-1'
    Result_Suspension_:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        data:
          $ref: '#/components/schemas/SuspensionRequest-xml-1'
    DeleteOrderRequestRequest-json:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    DeleteOrderRequestRequest-json-1:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    DeleteOrderRequestRequest-xml:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    DeleteOrderRequestRequest-xml-1:
      type: object
      properties:
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    NewOrderRequest-json:
      type: object
      properties:
        name:
          type: string
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        reason:
          type: string
        summary:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    NewOrderRequest-json-1:
      type: object
      properties:
        name:
          type: string
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        reason:
          type: string
        summary:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    NewOrderRequest-xml:
      type: object
      properties:
        name:
          type: string
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        reason:
          type: string
        summary:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    NewOrderRequest-xml-1:
      type: object
      properties:
        name:
          type: string
        orderType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          format: int32
        reason:
          type: string
        summary:
          type: string
        authorityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    ExportTemplateRequestRequest-json:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        publishDate:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        summaryText:
          type: string
        reasonText:
          type: string
    ExportTemplateRequestRequest-json-1:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        publishDate:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        summaryText:
          type: string
        reasonText:
          type: string
    ExportTemplateRequestRequest-xml:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        publishDate:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        summaryText:
          type: string
        reasonText:
          type: string
    ExportTemplateRequestRequest-xml-1:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        publishDate:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        summaryText:
          type: string
        reasonText:
          type: string
    SuspensionRequest-json:
      type: object
      properties:
        suspensionId:
          type: string
        authorityId:
          type: string
        ExternalId:
          type: string
        ExternalSource:
          type: string
        name:
          type: string
        reason:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionTime'
        ospIds:
          type: array
          items:
            type: string
    SuspensionRequest-json-1:
      type: object
      properties:
        suspensionId:
          type: string
        authorityId:
          type: string
        ExternalId:
          type: string
        ExternalSource:
          type: string
        name:
          type: string
        reason:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionTime'
        ospIds:
          type: array
          items:
            type: string
    SuspensionRequest-xml:
      type: object
      properties:
        suspensionId:
          type: string
        authorityId:
          type: string
        ExternalId:
          type: string
        ExternalSource:
          type: string
        name:
          type: string
        reason:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionTime'
        ospIds:
          type: array
          items:
            type: string
    SuspensionRequest-xml-1:
      type: object
      properties:
        suspensionId:
          type: string
        authorityId:
          type: string
        ExternalId:
          type: string
        ExternalSource:
          type: string
        name:
          type: string
        reason:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/SuspensionTime'
        ospIds:
          type: array
          items:
            type: string
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

