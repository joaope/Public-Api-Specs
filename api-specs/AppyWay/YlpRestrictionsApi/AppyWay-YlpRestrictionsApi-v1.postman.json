{
  "item": [
    {
      "id": "ae45734a-8375-4ae7-99aa-c06b6c78b4d6",
      "name": "/fetchAuthorityBySlug - POST",
      "request": {
        "name": "/fetchAuthorityBySlug - POST",
        "description": {},
        "url": {
          "path": [
            "fetchAuthorityBySlug"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "15d09552-7dd3-4d94-83c8-f0fcfbebd26c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"osps\": [\n   {\n    \"type\": \"amet officia cupidatat quis conseq\",\n    \"features\": [\n     {\n      \"type\": \"aliqua\",\n      \"id\": \"qui volu\"\n     },\n     {\n      \"type\": \"ipsum in proident\",\n      \"id\": \"id proident sunt consectetur in\"\n     }\n    ],\n    \"properties\": \"in voluptate laboris mollit\"\n   },\n   {\n    \"type\": \"ad ut nisi non\",\n    \"features\": [\n     {\n      \"type\": \"sit minim sint\",\n      \"id\": \"qui ad officia mollit cillum\"\n     },\n     {\n      \"type\": \"commodo deserunt\",\n      \"id\": \"Ut nostrud velit\"\n     }\n    ],\n    \"properties\": \"Lorem est exercitation\"\n   }\n  ],\n  \"zones\": {\n   \"type\": \"velit ullamco aute magna\",\n   \"features\": [\n    {\n     \"type\": \"nulla elit veniam mollit\",\n     \"id\": \"labore t\"\n    },\n    {\n     \"type\": \"fugiat nostrud veniam\",\n     \"id\": \"ea tempor\"\n    }\n   ],\n   \"properties\": \"nisi eiusmod non\"\n  },\n  \"authority\": {\n   \"authorityId\": \"ut sit Excepteur enim\",\n   \"name\": \"sit mollit sint ali\",\n   \"shape\": {\n    \"coordinates\": [\n     [\n      [\n       -14729208.164009571,\n       -46659838.07562264\n      ],\n      [\n       -1626577.8344149292,\n       -36994528.87682448\n      ]\n     ],\n     [\n      [\n       -37335137.86572642,\n       47354754.8226116\n      ],\n      [\n       -90347882.69024804,\n       -51894873.65806937\n      ]\n     ]\n    ],\n    \"type\": \"id nulla\",\n    \"crs\": {\n     \"type\": \"enim occaecat eu est non\",\n     \"properties\": {\n      \"name\": \"dolor reprehenderit occaecat\"\n     }\n    }\n   },\n   \"sets\": {\n    \"operatingHoursSets\": [\n     {\n      \"operatingHours\": {\n       \"standardDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -64820256,\n           65569197\n          ],\n          \"days\": [\n           11937885,\n           -21891523\n          ],\n          \"weekNumbers\": [\n           54008305,\n           95438972\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -51170667,\n           \"day\": -2208848\n          },\n          \"lastDate\": {\n           \"month\": -42639486,\n           \"day\": -38333801\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          94558203,\n          -61854662\n         ],\n         \"maxStay\": -9914212,\n         \"minStay\": -40274684,\n         \"noReturn\": -90097783,\n         \"noReturnUntil\": {\n          \"hour\": 38155911,\n          \"clockHourOfHalfDay\": 74669512,\n          \"minute\": 42606841,\n          \"second\": -26117109,\n          \"millisecond\": -79203251,\n          \"tickOfSecond\": 99713532,\n          \"tickOfDay\": -24081259,\n          \"nanosecondOfSecond\": -45978481,\n          \"nanosecondOfDay\": -68925459\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           5912671,\n           61363174\n          ],\n          \"days\": [\n           94843627,\n           79061518\n          ],\n          \"weekNumbers\": [\n           75275810,\n           -95125631\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -62281660,\n           \"day\": -66241957\n          },\n          \"lastDate\": {\n           \"month\": -38043664,\n           \"day\": -58841782\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          31890364,\n          -61185971\n         ],\n         \"maxStay\": 44684573,\n         \"minStay\": -9120731,\n         \"noReturn\": 58644113,\n         \"noReturnUntil\": {\n          \"hour\": -92906577,\n          \"clockHourOfHalfDay\": -31116313,\n          \"minute\": -87396094,\n          \"second\": 58833619,\n          \"millisecond\": 84496740,\n          \"tickOfSecond\": 69303124,\n          \"tickOfDay\": -74988982,\n          \"nanosecondOfSecond\": -80781373,\n          \"nanosecondOfDay\": -37533492\n         }\n        }\n       ],\n       \"eventDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -347519,\n           13254699\n          ],\n          \"days\": [\n           5329019,\n           -18826984\n          ],\n          \"weekNumbers\": [\n           -91998609,\n           75245443\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": 406735,\n           \"day\": 9081025\n          },\n          \"lastDate\": {\n           \"month\": 97734710,\n           \"day\": -21214989\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          25329585,\n          89068598\n         ],\n         \"maxStay\": 24813513,\n         \"minStay\": 26811141,\n         \"noReturn\": -69150889,\n         \"noReturnUntil\": {\n          \"hour\": 94383520,\n          \"clockHourOfHalfDay\": -14793201,\n          \"minute\": 18517068,\n          \"second\": 86805938,\n          \"millisecond\": -98266250,\n          \"tickOfSecond\": -47685858,\n          \"tickOfDay\": -35448986,\n          \"nanosecondOfSecond\": 629178,\n          \"nanosecondOfDay\": -89607036\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -27809836,\n           12817019\n          ],\n          \"days\": [\n           -83597677,\n           82312634\n          ],\n          \"weekNumbers\": [\n           -51608137,\n           -99230577\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -19712347,\n           \"day\": -93797266\n          },\n          \"lastDate\": {\n           \"month\": -83157384,\n           \"day\": 54058958\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -56024111,\n          71678050\n         ],\n         \"maxStay\": -68407460,\n         \"minStay\": -47455066,\n         \"noReturn\": 83119943,\n         \"noReturnUntil\": {\n          \"hour\": -48733035,\n          \"clockHourOfHalfDay\": -74578090,\n          \"minute\": -76677501,\n          \"second\": -58904343,\n          \"millisecond\": 57096490,\n          \"tickOfSecond\": -33892061,\n          \"tickOfDay\": 78327867,\n          \"nanosecondOfSecond\": -30639397,\n          \"nanosecondOfDay\": -66446018\n         }\n        }\n       ]\n      },\n      \"setId\": \"culpa\",\n      \"name\": \"laboris aliquip\"\n     },\n     {\n      \"operatingHours\": {\n       \"standardDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           38914015,\n           -69283649\n          ],\n          \"days\": [\n           26993899,\n           -4868002\n          ],\n          \"weekNumbers\": [\n           69855250,\n           -61578368\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -69927356,\n           \"day\": 22925701\n          },\n          \"lastDate\": {\n           \"month\": -89144438,\n           \"day\": -58704919\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -84592997,\n          50528948\n         ],\n         \"maxStay\": -72672497,\n         \"minStay\": 25210446,\n         \"noReturn\": 19233944,\n         \"noReturnUntil\": {\n          \"hour\": -56412166,\n          \"clockHourOfHalfDay\": -94147164,\n          \"minute\": 12888590,\n          \"second\": -51620232,\n          \"millisecond\": 66729129,\n          \"tickOfSecond\": -47052864,\n          \"tickOfDay\": -56556896,\n          \"nanosecondOfSecond\": -36258586,\n          \"nanosecondOfDay\": -49376901\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           56897764,\n           87543830\n          ],\n          \"days\": [\n           -42864971,\n           97802212\n          ],\n          \"weekNumbers\": [\n           -61182168,\n           44856610\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -93270663,\n           \"day\": -45537447\n          },\n          \"lastDate\": {\n           \"month\": -63405731,\n           \"day\": 5195273\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          63805450,\n          -29478329\n         ],\n         \"maxStay\": 21800335,\n         \"minStay\": -43382208,\n         \"noReturn\": -83843255,\n         \"noReturnUntil\": {\n          \"hour\": -70003286,\n          \"clockHourOfHalfDay\": 23456135,\n          \"minute\": 92634947,\n          \"second\": 59826033,\n          \"millisecond\": -11976892,\n          \"tickOfSecond\": 95188279,\n          \"tickOfDay\": 43013902,\n          \"nanosecondOfSecond\": -15563876,\n          \"nanosecondOfDay\": 38604889\n         }\n        }\n       ],\n       \"eventDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -26802779,\n           43797773\n          ],\n          \"days\": [\n           16897371,\n           -27554136\n          ],\n          \"weekNumbers\": [\n           67900956,\n           -32210128\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -38511424,\n           \"day\": 77355052\n          },\n          \"lastDate\": {\n           \"month\": 87587096,\n           \"day\": -61379643\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -81221673,\n          -97058511\n         ],\n         \"maxStay\": 99364002,\n         \"minStay\": -86019367,\n         \"noReturn\": -4671663,\n         \"noReturnUntil\": {\n          \"hour\": 77733102,\n          \"clockHourOfHalfDay\": -90359603,\n          \"minute\": -8003491,\n          \"second\": -85948613,\n          \"millisecond\": -34550805,\n          \"tickOfSecond\": 51853673,\n          \"tickOfDay\": -44296964,\n          \"nanosecondOfSecond\": -42089489,\n          \"nanosecondOfDay\": 19586101\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           51772449,\n           38622178\n          ],\n          \"days\": [\n           -47631796,\n           68792234\n          ],\n          \"weekNumbers\": [\n           19009097,\n           -69202679\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -44701371,\n           \"day\": 11625259\n          },\n          \"lastDate\": {\n           \"month\": -65683132,\n           \"day\": -49335731\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -66210251,\n          99780778\n         ],\n         \"maxStay\": 18296401,\n         \"minStay\": 89516540,\n         \"noReturn\": -13865250,\n         \"noReturnUntil\": {\n          \"hour\": -65649677,\n          \"clockHourOfHalfDay\": -86525754,\n          \"minute\": -77105513,\n          \"second\": 87353419,\n          \"millisecond\": -21156543,\n          \"tickOfSecond\": 27372257,\n          \"tickOfDay\": 66884216,\n          \"nanosecondOfSecond\": 5211647,\n          \"nanosecondOfDay\": -62419445\n         }\n        }\n       ]\n      },\n      \"setId\": \"dolore dolor\",\n      \"name\": \"aliqua sit\"\n     }\n    ],\n    \"tariffSets\": [\n     {\n      \"tariffs\": [\n       {\n        \"parkingEntitlementTypeIds\": [\n         -10399970,\n         -71158524\n        ],\n        \"details\": [\n         {\n          \"price\": -20602363,\n          \"surcharge\": -48620425,\n          \"surchargeDetail\": {\n           \"surchargeType\": -73055908,\n           \"value\": 85784684,\n           \"notes\": \"eu ullamco minim ex\",\n           \"ruleType\": 35703377\n          },\n          \"duration\": -12902255,\n          \"minimumPriceIncrement\": 23140841,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": 96701584,\n          \"upTo\": 24258492\n         },\n         {\n          \"price\": 81040596,\n          \"surcharge\": -51415515,\n          \"surchargeDetail\": {\n           \"surchargeType\": 91288106,\n           \"value\": 20002503,\n           \"notes\": \"fugiat dolore proident\",\n           \"ruleType\": 59856499\n          },\n          \"duration\": -96267822,\n          \"minimumPriceIncrement\": -83280929,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": 92946920,\n          \"upTo\": 58477273\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -55949604,\n         \"clockHourOfHalfDay\": 33280496,\n         \"minute\": 49326325,\n         \"second\": -48409334,\n         \"millisecond\": -29444813,\n         \"tickOfSecond\": 38843426,\n         \"tickOfDay\": -75021806,\n         \"nanosecondOfSecond\": -98107072,\n         \"nanosecondOfDay\": -93529261\n        },\n        \"timeTo\": {\n         \"hour\": 77038770,\n         \"clockHourOfHalfDay\": -57604176,\n         \"minute\": -9122474,\n         \"second\": -81509639,\n         \"millisecond\": 43572490,\n         \"tickOfSecond\": -48494948,\n         \"tickOfDay\": -79255406,\n         \"nanosecondOfSecond\": -69877340,\n         \"nanosecondOfDay\": -36039144\n        },\n        \"firstDate\": {\n         \"month\": 4323586,\n         \"day\": 94066639\n        },\n        \"lastDate\": {\n         \"month\": 36506755,\n         \"day\": 594544\n        },\n        \"months\": [\n         -12626832,\n         22031295\n        ],\n        \"days\": [\n         77939818,\n         -750410\n        ],\n        \"timeType\": -21077067\n       },\n       {\n        \"parkingEntitlementTypeIds\": [\n         -23710044,\n         -95786777\n        ],\n        \"details\": [\n         {\n          \"price\": -57715022,\n          \"surcharge\": 15578140,\n          \"surchargeDetail\": {\n           \"surchargeType\": -9754243,\n           \"value\": -67134641,\n           \"notes\": \"occaecat i\",\n           \"ruleType\": -15170436\n          },\n          \"duration\": -95790984,\n          \"minimumPriceIncrement\": 93732875,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": 81158967,\n          \"upTo\": -26465284\n         },\n         {\n          \"price\": -32818240,\n          \"surcharge\": -80787316,\n          \"surchargeDetail\": {\n           \"surchargeType\": 15727500,\n           \"value\": -93187226,\n           \"notes\": \"est nisi t\",\n           \"ruleType\": -1376534\n          },\n          \"duration\": 40275027,\n          \"minimumPriceIncrement\": 39192888,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": 34165886,\n          \"upTo\": -18525112\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -41299996,\n         \"clockHourOfHalfDay\": 79982138,\n         \"minute\": 48742045,\n         \"second\": 77928630,\n         \"millisecond\": -15465111,\n         \"tickOfSecond\": 7044790,\n         \"tickOfDay\": 98606181,\n         \"nanosecondOfSecond\": -74941179,\n         \"nanosecondOfDay\": 53662522\n        },\n        \"timeTo\": {\n         \"hour\": -61775850,\n         \"clockHourOfHalfDay\": 68685983,\n         \"minute\": 35286957,\n         \"second\": 45317344,\n         \"millisecond\": -41985534,\n         \"tickOfSecond\": 54966580,\n         \"tickOfDay\": -91045828,\n         \"nanosecondOfSecond\": -26124654,\n         \"nanosecondOfDay\": 56133008\n        },\n        \"firstDate\": {\n         \"month\": -4665464,\n         \"day\": -5981270\n        },\n        \"lastDate\": {\n         \"month\": 42330130,\n         \"day\": -45591422\n        },\n        \"months\": [\n         78885726,\n         -46031891\n        ],\n        \"days\": [\n         16570338,\n         99529023\n        ],\n        \"timeType\": 68799001\n       }\n      ],\n      \"setId\": \"occaecat qui minim elit\",\n      \"name\": \"mollit et pariatur elit magna\"\n     },\n     {\n      \"tariffs\": [\n       {\n        \"parkingEntitlementTypeIds\": [\n         -27698603,\n         -27764035\n        ],\n        \"details\": [\n         {\n          \"price\": -76708051,\n          \"surcharge\": 93826946,\n          \"surchargeDetail\": {\n           \"surchargeType\": -96815617,\n           \"value\": 35324881,\n           \"notes\": \"cillum Lorem minim mollit\",\n           \"ruleType\": 70962418\n          },\n          \"duration\": -68730988,\n          \"minimumPriceIncrement\": -39183254,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": 69477300,\n          \"upTo\": -85974844\n         },\n         {\n          \"price\": -77376506,\n          \"surcharge\": -29162853,\n          \"surchargeDetail\": {\n           \"surchargeType\": 26436319,\n           \"value\": 75014046,\n           \"notes\": \"labore velit nisi Excepteur\",\n           \"ruleType\": -84113407\n          },\n          \"duration\": -54317111,\n          \"minimumPriceIncrement\": 94321973,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": 30221247,\n          \"upTo\": -59288549\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -40827722,\n         \"clockHourOfHalfDay\": 3296420,\n         \"minute\": 83321208,\n         \"second\": 83173573,\n         \"millisecond\": -5566684,\n         \"tickOfSecond\": -50666629,\n         \"tickOfDay\": -25244134,\n         \"nanosecondOfSecond\": -91973695,\n         \"nanosecondOfDay\": 64198092\n        },\n        \"timeTo\": {\n         \"hour\": 3228202,\n         \"clockHourOfHalfDay\": 53010463,\n         \"minute\": 93799011,\n         \"second\": -16278919,\n         \"millisecond\": -55013102,\n         \"tickOfSecond\": 53591352,\n         \"tickOfDay\": 30819985,\n         \"nanosecondOfSecond\": 15966782,\n         \"nanosecondOfDay\": -40915413\n        },\n        \"firstDate\": {\n         \"month\": -30340949,\n         \"day\": -20726287\n        },\n        \"lastDate\": {\n         \"month\": -23321139,\n         \"day\": 57090410\n        },\n        \"months\": [\n         -94157394,\n         -73103570\n        ],\n        \"days\": [\n         68600065,\n         76230727\n        ],\n        \"timeType\": 18066518\n       },\n       {\n        \"parkingEntitlementTypeIds\": [\n         2278813,\n         -59189228\n        ],\n        \"details\": [\n         {\n          \"price\": -30185580,\n          \"surcharge\": -50754158,\n          \"surchargeDetail\": {\n           \"surchargeType\": -5458264,\n           \"value\": 68069665,\n           \"notes\": \"non do sint\",\n           \"ruleType\": -32954025\n          },\n          \"duration\": -55755098,\n          \"minimumPriceIncrement\": 49843641,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": -98252840,\n          \"upTo\": 16014932\n         },\n         {\n          \"price\": -23146772,\n          \"surcharge\": -64281448,\n          \"surchargeDetail\": {\n           \"surchargeType\": -71198385,\n           \"value\": -91292626,\n           \"notes\": \"elit nost\",\n           \"ruleType\": -91733113\n          },\n          \"duration\": -51742151,\n          \"minimumPriceIncrement\": -6151473,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": 60831072,\n          \"upTo\": -59398932\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -60356648,\n         \"clockHourOfHalfDay\": 45197463,\n         \"minute\": 82910836,\n         \"second\": -38340712,\n         \"millisecond\": -57948075,\n         \"tickOfSecond\": -84388063,\n         \"tickOfDay\": -6500477,\n         \"nanosecondOfSecond\": -22543280,\n         \"nanosecondOfDay\": -24417582\n        },\n        \"timeTo\": {\n         \"hour\": 4460916,\n         \"clockHourOfHalfDay\": -3326405,\n         \"minute\": -24683936,\n         \"second\": 97789805,\n         \"millisecond\": -26934151,\n         \"tickOfSecond\": -19907611,\n         \"tickOfDay\": -76083806,\n         \"nanosecondOfSecond\": 3020076,\n         \"nanosecondOfDay\": -60503194\n        },\n        \"firstDate\": {\n         \"month\": -54012336,\n         \"day\": 94641467\n        },\n        \"lastDate\": {\n         \"month\": -1288705,\n         \"day\": 48394676\n        },\n        \"months\": [\n         24507881,\n         33443716\n        ],\n        \"days\": [\n         -95350153,\n         -74262974\n        ],\n        \"timeType\": -55356621\n       }\n      ],\n      \"setId\": \"consectetur\",\n      \"name\": \"qui proident eiusmod\"\n     }\n    ]\n   }\n  }\n },\n \"eTag\": \"proident reprehenderit nisi\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "99e714b8-bbad-4e4f-9ee6-46710e055e8c",
          "name": "Not Modified",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Not Modified",
          "code": 304,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"incididunt anim sunt mollit\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f722330e-98f8-4ee9-b313-ca123aa825b2",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"qui ut est\",\n \"errors\": [\n  {\n   \"property\": \"elit consectetur culpa\",\n   \"code\": \"proident ipsum non voluptate\",\n   \"message\": \"eiusmod dolore aute eu\"\n  },\n  {\n   \"property\": \"dolore do\",\n   \"code\": \"eiusmod elit anim voluptate magna\",\n   \"message\": \"dolor aliqua la\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9e5dd059-7b64-4aa5-8ae9-9d2ec2f69172",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "af1a7b37-6f7e-49dc-a513-d230edf0e634",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "94b87c68-7e91-45d0-9963-40395e13a974",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c52bb62a-4324-4777-873f-ca8138879cdf",
      "name": "/fetchLatestMadeOrderByOspId - POST",
      "request": {
        "name": "/fetchLatestMadeOrderByOspId - POST",
        "description": {},
        "url": {
          "path": [
            "fetchLatestMadeOrderByOspId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ospId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "a09ed32f-8e61-452a-bd3e-1698ad8a930e",
          "name": "Not Modified",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Not Modified",
          "code": 304,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"incididunt anim sunt mollit\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "50429bb1-6253-486c-a3b6-91a41a7e0d41",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"laboris eu id\",\n \"errors\": [\n  {\n   \"property\": \"sunt\",\n   \"code\": \"pariatur enim in\",\n   \"message\": \"sunt\"\n  },\n  {\n   \"property\": \"mollit voluptate\",\n   \"code\": \"sunt\",\n   \"message\": \"aute\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "54578add-7e8d-46d3-8d3f-636e1ec8acc6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c94b37c7-d2cb-4d46-8831-1c312751c000",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6b8781c4-23ec-4aca-9cbe-64b6ea0ad294",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "10feb25b-fb94-4128-9924-e8b0d7724755",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "065112e6-6181-4fe0-bd23-cb7fb6749707",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3a28b662-7df6-458a-911a-0b856d822270",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a6856251-59de-4b78-9257-1be1921e0854",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ab5d6231-bf18-451d-aad0-cd533bcbc09e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/restrictions"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "306af336-7fb2-4e28-8c39-a7a0ed4484ac",
    "name": "Restrictions API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
