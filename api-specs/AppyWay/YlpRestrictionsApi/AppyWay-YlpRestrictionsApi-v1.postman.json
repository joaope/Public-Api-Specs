{
  "item": [
    {
      "id": "159e450d-70e9-44ad-a000-f05b16d4b641",
      "name": "/fetchAuthorityBySlug - POST",
      "request": {
        "name": "/fetchAuthorityBySlug - POST",
        "description": {},
        "url": {
          "path": [
            "fetchAuthorityBySlug"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "9804362f-61c6-49de-854d-ae6c68e9063b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"osps\": [\n   {\n    \"type\": \"\",\n    \"features\": [\n     {\n      \"type\": \"aliqua \",\n      \"id\": \"non quis in\"\n     },\n     {\n      \"type\": \"proident culpa est aliquip\",\n      \"id\": \"id in ex\"\n     }\n    ],\n    \"properties\": \"deserunt aliquip veniam quis adipisicing\"\n   },\n   {\n    \"type\": \"qui ea\",\n    \"features\": [\n     {\n      \"type\": \"culpa in\",\n      \"id\": \"magna ex cupidatat dolore\"\n     },\n     {\n      \"type\": \"Ut commodo\",\n      \"id\": \"commodo\"\n     }\n    ],\n    \"properties\": \"laborum nisi veniam Excepteur\"\n   }\n  ],\n  \"zones\": {\n   \"type\": \"ut ex commodo\",\n   \"features\": [\n    {\n     \"type\": \"sit exercitation ut officia\",\n     \"id\": \"sed fugiat dolore a\"\n    },\n    {\n     \"type\": \"consectetur laborum\",\n     \"id\": \"sint Lorem\"\n    }\n   ],\n   \"properties\": \"enim in\"\n  },\n  \"authority\": {\n   \"authorityId\": \"sed minim culpa\",\n   \"name\": \"cupidatat\",\n   \"shape\": {\n    \"coordinates\": [\n     [\n      [\n       -63191996.63255617,\n       -61173498.590209045\n      ],\n      [\n       -46507193.92679497,\n       32795010.329956844\n      ]\n     ],\n     [\n      [\n       447970.19153124094,\n       -59581591.34664402\n      ],\n      [\n       17221179.56265104,\n       36490061.54248312\n      ]\n     ]\n    ],\n    \"type\": \"irure adipisicing dolore\",\n    \"crs\": {\n     \"type\": \"laborum\",\n     \"properties\": {\n      \"name\": \"pariatu\"\n     }\n    }\n   },\n   \"sets\": {\n    \"operatingHoursSets\": [\n     {\n      \"operatingHours\": {\n       \"standardDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -25725923,\n           -28693507\n          ],\n          \"days\": [\n           43693794,\n           -78356416\n          ],\n          \"weekNumbers\": [\n           27082431,\n           -88279403\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": 91064192,\n           \"day\": 7903001\n          },\n          \"lastDate\": {\n           \"month\": -24138905,\n           \"day\": -34381524\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          66914490,\n          -86887440\n         ],\n         \"maxStay\": 59223282,\n         \"minStay\": -75098315,\n         \"noReturn\": 47900807,\n         \"noReturnUntil\": {\n          \"hour\": 64113178,\n          \"clockHourOfHalfDay\": 85911602,\n          \"minute\": -55916709,\n          \"second\": -61246093,\n          \"millisecond\": 70574826,\n          \"tickOfSecond\": 70321349,\n          \"tickOfDay\": 55420069,\n          \"nanosecondOfSecond\": 34097321,\n          \"nanosecondOfDay\": 56135398\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           9280690,\n           88260766\n          ],\n          \"days\": [\n           32978286,\n           86831125\n          ],\n          \"weekNumbers\": [\n           -99653577,\n           -98118822\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": 61534868,\n           \"day\": 5012300\n          },\n          \"lastDate\": {\n           \"month\": 7343376,\n           \"day\": 67143905\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          37652754,\n          -47918855\n         ],\n         \"maxStay\": 53105973,\n         \"minStay\": -4291592,\n         \"noReturn\": 84269676,\n         \"noReturnUntil\": {\n          \"hour\": 47861405,\n          \"clockHourOfHalfDay\": 50759888,\n          \"minute\": -9636199,\n          \"second\": -20948357,\n          \"millisecond\": -9163978,\n          \"tickOfSecond\": 58969986,\n          \"tickOfDay\": -93222103,\n          \"nanosecondOfSecond\": -54349790,\n          \"nanosecondOfDay\": -83381181\n         }\n        }\n       ],\n       \"eventDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           65279268,\n           81444662\n          ],\n          \"days\": [\n           62130457,\n           80771438\n          ],\n          \"weekNumbers\": [\n           -66260640,\n           -84865096\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -9501397,\n           \"day\": 71960185\n          },\n          \"lastDate\": {\n           \"month\": -54091745,\n           \"day\": -30849642\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -13190279,\n          -44457067\n         ],\n         \"maxStay\": -6038586,\n         \"minStay\": -247027,\n         \"noReturn\": 38627925,\n         \"noReturnUntil\": {\n          \"hour\": 16486953,\n          \"clockHourOfHalfDay\": -80967487,\n          \"minute\": 11732918,\n          \"second\": -72552987,\n          \"millisecond\": 93972463,\n          \"tickOfSecond\": 16578784,\n          \"tickOfDay\": 23424354,\n          \"nanosecondOfSecond\": -6712581,\n          \"nanosecondOfDay\": -73960341\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           -61895353,\n           26528881\n          ],\n          \"days\": [\n           53646340,\n           86384328\n          ],\n          \"weekNumbers\": [\n           -7786299,\n           -81233017\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -96857180,\n           \"day\": 65300065\n          },\n          \"lastDate\": {\n           \"month\": 71473777,\n           \"day\": -59708529\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -66213402,\n          43820209\n         ],\n         \"maxStay\": 14548386,\n         \"minStay\": 27441435,\n         \"noReturn\": 86507579,\n         \"noReturnUntil\": {\n          \"hour\": 46870001,\n          \"clockHourOfHalfDay\": -96815305,\n          \"minute\": -25765395,\n          \"second\": 46924100,\n          \"millisecond\": 69528850,\n          \"tickOfSecond\": 75522066,\n          \"tickOfDay\": -95086760,\n          \"nanosecondOfSecond\": -31370369,\n          \"nanosecondOfDay\": 49704837\n         }\n        }\n       ]\n      },\n      \"setId\": \"ad ut deserunt sunt\",\n      \"name\": \"enim\"\n     },\n     {\n      \"operatingHours\": {\n       \"standardDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           13329194,\n           -63419630\n          ],\n          \"days\": [\n           -97578962,\n           -9670817\n          ],\n          \"weekNumbers\": [\n           15455181,\n           -75203477\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": 33763706,\n           \"day\": 34328527\n          },\n          \"lastDate\": {\n           \"month\": 61769057,\n           \"day\": 44022267\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          74873243,\n          97674727\n         ],\n         \"maxStay\": -92917547,\n         \"minStay\": -27223397,\n         \"noReturn\": 32851052,\n         \"noReturnUntil\": {\n          \"hour\": 98222937,\n          \"clockHourOfHalfDay\": 85469486,\n          \"minute\": -81074244,\n          \"second\": -79192658,\n          \"millisecond\": -36292840,\n          \"tickOfSecond\": 33994240,\n          \"tickOfDay\": 97494319,\n          \"nanosecondOfSecond\": -59869053,\n          \"nanosecondOfDay\": 51390011\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           97366754,\n           -90386936\n          ],\n          \"days\": [\n           1186564,\n           -76335762\n          ],\n          \"weekNumbers\": [\n           -95202512,\n           63424936\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -57649543,\n           \"day\": 13494651\n          },\n          \"lastDate\": {\n           \"month\": -25706158,\n           \"day\": 1729382\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          48617746,\n          39886384\n         ],\n         \"maxStay\": -18885760,\n         \"minStay\": -64410806,\n         \"noReturn\": -77554435,\n         \"noReturnUntil\": {\n          \"hour\": -7758703,\n          \"clockHourOfHalfDay\": 69140026,\n          \"minute\": 26853930,\n          \"second\": 1199928,\n          \"millisecond\": -35506779,\n          \"tickOfSecond\": -48473998,\n          \"tickOfDay\": -12315872,\n          \"nanosecondOfSecond\": -8330375,\n          \"nanosecondOfDay\": -82945367\n         }\n        }\n       ],\n       \"eventDays\": [\n        {\n         \"ruleTime\": {\n          \"months\": [\n           55686738,\n           74104881\n          ],\n          \"days\": [\n           -80648093,\n           86405263\n          ],\n          \"weekNumbers\": [\n           8510781,\n           40602684\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": -80596482,\n           \"day\": 32461217\n          },\n          \"lastDate\": {\n           \"month\": 1632692,\n           \"day\": 61943804\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          73758846,\n          80614820\n         ],\n         \"maxStay\": -42437668,\n         \"minStay\": 23470547,\n         \"noReturn\": 23229915,\n         \"noReturnUntil\": {\n          \"hour\": -58773793,\n          \"clockHourOfHalfDay\": 15775182,\n          \"minute\": 56089891,\n          \"second\": -68910514,\n          \"millisecond\": 26943313,\n          \"tickOfSecond\": -66197580,\n          \"tickOfDay\": 49536440,\n          \"nanosecondOfSecond\": -24704349,\n          \"nanosecondOfDay\": -63364188\n         }\n        },\n        {\n         \"ruleTime\": {\n          \"months\": [\n           5326975,\n           90096862\n          ],\n          \"days\": [\n           -63926193,\n           40416373\n          ],\n          \"weekNumbers\": [\n           33400501,\n           -64507152\n          ],\n          \"hours\": [\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           },\n           {\n            \"start\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end\": {\n             \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n           }\n          ],\n          \"firstDate\": {\n           \"month\": 93013366,\n           \"day\": -20561611\n          },\n          \"lastDate\": {\n           \"month\": 37901560,\n           \"day\": 28361812\n          }\n         },\n         \"parkingEntitlementTypeIds\": [\n          -92390622,\n          -94249930\n         ],\n         \"maxStay\": 78404797,\n         \"minStay\": -23345280,\n         \"noReturn\": -40406894,\n         \"noReturnUntil\": {\n          \"hour\": -65137877,\n          \"clockHourOfHalfDay\": 15927316,\n          \"minute\": -73078101,\n          \"second\": 47154687,\n          \"millisecond\": -72138363,\n          \"tickOfSecond\": 49964077,\n          \"tickOfDay\": -10955651,\n          \"nanosecondOfSecond\": -96410598,\n          \"nanosecondOfDay\": 23061275\n         }\n        }\n       ]\n      },\n      \"setId\": \"velit non\",\n      \"name\": \"in aute sint\"\n     }\n    ],\n    \"tariffSets\": [\n     {\n      \"tariffs\": [\n       {\n        \"parkingEntitlementTypeIds\": [\n         64805728,\n         -86456812\n        ],\n        \"details\": [\n         {\n          \"price\": -62665128,\n          \"surcharge\": -39676948,\n          \"surchargeDetail\": {\n           \"surchargeType\": 59157385,\n           \"value\": -41517211,\n           \"notes\": \"labore laborum ex\",\n           \"ruleType\": -69754857\n          },\n          \"duration\": -54421699,\n          \"minimumPriceIncrement\": -51690771,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": 65111228,\n          \"upTo\": 15331187\n         },\n         {\n          \"price\": 85216597,\n          \"surcharge\": -24478319,\n          \"surchargeDetail\": {\n           \"surchargeType\": -68009463,\n           \"value\": -65912661,\n           \"notes\": \"minim sit irure\",\n           \"ruleType\": -20895110\n          },\n          \"duration\": 9045554,\n          \"minimumPriceIncrement\": 11674505,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": -18288943,\n          \"upTo\": -33035205\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -62965526,\n         \"clockHourOfHalfDay\": -33476212,\n         \"minute\": 47353915,\n         \"second\": -44518193,\n         \"millisecond\": 46462711,\n         \"tickOfSecond\": 85396910,\n         \"tickOfDay\": 79961035,\n         \"nanosecondOfSecond\": -58385588,\n         \"nanosecondOfDay\": 38056865\n        },\n        \"timeTo\": {\n         \"hour\": -8265849,\n         \"clockHourOfHalfDay\": -50929811,\n         \"minute\": 86992271,\n         \"second\": 25239018,\n         \"millisecond\": -93381077,\n         \"tickOfSecond\": -16902711,\n         \"tickOfDay\": 56754220,\n         \"nanosecondOfSecond\": -87644860,\n         \"nanosecondOfDay\": 7967470\n        },\n        \"firstDate\": {\n         \"month\": 36757937,\n         \"day\": -52663150\n        },\n        \"lastDate\": {\n         \"month\": -31697761,\n         \"day\": -61001422\n        },\n        \"months\": [\n         -92374071,\n         5113793\n        ],\n        \"days\": [\n         85508141,\n         -61758700\n        ],\n        \"timeType\": 21407712\n       },\n       {\n        \"parkingEntitlementTypeIds\": [\n         -71117445,\n         11599336\n        ],\n        \"details\": [\n         {\n          \"price\": -39247301,\n          \"surcharge\": -47960048,\n          \"surchargeDetail\": {\n           \"surchargeType\": 79629011,\n           \"value\": 96503730,\n           \"notes\": \"culpa in eiusmod est\",\n           \"ruleType\": 16430418\n          },\n          \"duration\": 79062143,\n          \"minimumPriceIncrement\": 78895132,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": 18757753,\n          \"upTo\": -18626004\n         },\n         {\n          \"price\": -20055662,\n          \"surcharge\": 71570893,\n          \"surchargeDetail\": {\n           \"surchargeType\": 27463423,\n           \"value\": 87704736,\n           \"notes\": \"cill\",\n           \"ruleType\": 21051374\n          },\n          \"duration\": 84409582,\n          \"minimumPriceIncrement\": -12950257,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": -24610864,\n          \"upTo\": -65434919\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": -38753113,\n         \"clockHourOfHalfDay\": -50894342,\n         \"minute\": -35262861,\n         \"second\": -11780594,\n         \"millisecond\": -7155121,\n         \"tickOfSecond\": 30903895,\n         \"tickOfDay\": 39105715,\n         \"nanosecondOfSecond\": -38716305,\n         \"nanosecondOfDay\": 81394941\n        },\n        \"timeTo\": {\n         \"hour\": -45238538,\n         \"clockHourOfHalfDay\": 90112056,\n         \"minute\": -42408557,\n         \"second\": 6842172,\n         \"millisecond\": 75081979,\n         \"tickOfSecond\": 76055410,\n         \"tickOfDay\": 60938285,\n         \"nanosecondOfSecond\": -59162028,\n         \"nanosecondOfDay\": 38505790\n        },\n        \"firstDate\": {\n         \"month\": 8971975,\n         \"day\": 91278236\n        },\n        \"lastDate\": {\n         \"month\": -72322080,\n         \"day\": -14484952\n        },\n        \"months\": [\n         -32461467,\n         72272757\n        ],\n        \"days\": [\n         17577954,\n         69507906\n        ],\n        \"timeType\": 99026988\n       }\n      ],\n      \"setId\": \"ullamco ipsum amet\",\n      \"name\": \"sunt\"\n     },\n     {\n      \"tariffs\": [\n       {\n        \"parkingEntitlementTypeIds\": [\n         -96304303,\n         -43440958\n        ],\n        \"details\": [\n         {\n          \"price\": -25666725,\n          \"surcharge\": -78680233,\n          \"surchargeDetail\": {\n           \"surchargeType\": -14752322,\n           \"value\": -37245051,\n           \"notes\": \"ea consectetur dolor occaecat tempor\",\n           \"ruleType\": -27765992\n          },\n          \"duration\": -96014503,\n          \"minimumPriceIncrement\": -86176386,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": -69286133,\n          \"upTo\": -16590825\n         },\n         {\n          \"price\": 99899371,\n          \"surcharge\": -32111096,\n          \"surchargeDetail\": {\n           \"surchargeType\": 54209653,\n           \"value\": -18678915,\n           \"notes\": \"Duis exercitation\",\n           \"ruleType\": 19635886\n          },\n          \"duration\": -37998204,\n          \"minimumPriceIncrement\": -87254833,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": -90732631,\n          \"upTo\": 33068675\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": 73677438,\n         \"clockHourOfHalfDay\": 68501043,\n         \"minute\": -16859823,\n         \"second\": 27789823,\n         \"millisecond\": 85629090,\n         \"tickOfSecond\": 94426538,\n         \"tickOfDay\": 24842804,\n         \"nanosecondOfSecond\": 43425218,\n         \"nanosecondOfDay\": -71178529\n        },\n        \"timeTo\": {\n         \"hour\": 18806333,\n         \"clockHourOfHalfDay\": 37156127,\n         \"minute\": -10501046,\n         \"second\": -91799414,\n         \"millisecond\": 64481626,\n         \"tickOfSecond\": 41448796,\n         \"tickOfDay\": 84627237,\n         \"nanosecondOfSecond\": 62015966,\n         \"nanosecondOfDay\": -85944875\n        },\n        \"firstDate\": {\n         \"month\": 11811251,\n         \"day\": 91709073\n        },\n        \"lastDate\": {\n         \"month\": 6681298,\n         \"day\": 35806867\n        },\n        \"months\": [\n         12935177,\n         28957353\n        ],\n        \"days\": [\n         17065033,\n         -12894281\n        ],\n        \"timeType\": -78952372\n       },\n       {\n        \"parkingEntitlementTypeIds\": [\n         -71461824,\n         -91850586\n        ],\n        \"details\": [\n         {\n          \"price\": -76862873,\n          \"surcharge\": -45907181,\n          \"surchargeDetail\": {\n           \"surchargeType\": 54647450,\n           \"value\": -64152689,\n           \"notes\": \"incididunt\",\n           \"ruleType\": -42408031\n          },\n          \"duration\": -87400607,\n          \"minimumPriceIncrement\": -53601311,\n          \"singlePaymentCanCrossMidnight\": true,\n          \"from\": -92493022,\n          \"upTo\": -76018125\n         },\n         {\n          \"price\": 68931363,\n          \"surcharge\": 16570483,\n          \"surchargeDetail\": {\n           \"surchargeType\": -55100049,\n           \"value\": 59947601,\n           \"notes\": \"proident\",\n           \"ruleType\": -37307155\n          },\n          \"duration\": -93398581,\n          \"minimumPriceIncrement\": 59006945,\n          \"singlePaymentCanCrossMidnight\": false,\n          \"from\": -16259892,\n          \"upTo\": -96145998\n         }\n        ],\n        \"timeFrom\": {\n         \"hour\": 29543225,\n         \"clockHourOfHalfDay\": -50584113,\n         \"minute\": 25095945,\n         \"second\": 14525615,\n         \"millisecond\": 5234559,\n         \"tickOfSecond\": -49455808,\n         \"tickOfDay\": -10762282,\n         \"nanosecondOfSecond\": -65784347,\n         \"nanosecondOfDay\": 60425473\n        },\n        \"timeTo\": {\n         \"hour\": -71201360,\n         \"clockHourOfHalfDay\": -45343080,\n         \"minute\": 80154197,\n         \"second\": -58680823,\n         \"millisecond\": 23790587,\n         \"tickOfSecond\": -5977615,\n         \"tickOfDay\": 6705801,\n         \"nanosecondOfSecond\": -57176724,\n         \"nanosecondOfDay\": -6846090\n        },\n        \"firstDate\": {\n         \"month\": -7187450,\n         \"day\": 84053358\n        },\n        \"lastDate\": {\n         \"month\": -95229546,\n         \"day\": 79059729\n        },\n        \"months\": [\n         -96224041,\n         32708979\n        ],\n        \"days\": [\n         23454825,\n         -48314730\n        ],\n        \"timeType\": 17539506\n       }\n      ],\n      \"setId\": \"id ut reprehenderit ex\",\n      \"name\": \"id\"\n     }\n    ]\n   }\n  }\n },\n \"eTag\": \"Duis sint\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7b08c5b0-3c18-408a-9153-556f3e0b2a03",
          "name": "Not Modified",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Not Modified",
          "code": 304,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "91ba0249-1e38-4376-87d4-6b73f2606884",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"esse mollit culpa\",\n \"errors\": [\n  {\n   \"property\": \"ipsum \",\n   \"code\": \"ullamco qui culpa\",\n   \"message\": \"commodo re\"\n  },\n  {\n   \"property\": \"do ad aliquip\",\n   \"code\": \"et ipsum in laborum ex\",\n   \"message\": \"laborum amet commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "eeb186f7-641e-41ae-8dcd-464b1d54516a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f25b2a16-3371-4d28-b067-5c68a4866d1a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "31c7a28c-2d64-42b0-a360-e2af280422d5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityBySlug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authoritySlug\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b64b0d98-5d63-4a3f-8939-b14a09cccc3f",
      "name": "/fetchLatestMadeOrderByOspId - POST",
      "request": {
        "name": "/fetchLatestMadeOrderByOspId - POST",
        "description": {},
        "url": {
          "path": [
            "fetchLatestMadeOrderByOspId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ospId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "b724adff-8bf8-4c6b-9463-03d398a505e8",
          "name": "Not Modified",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Not Modified",
          "code": 304,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1ca2a260-63e5-44b6-8712-8a4ebf4b71fe",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"exercitation sed\",\n \"errors\": [\n  {\n   \"property\": \"quis tempor\",\n   \"code\": \"enim irure quis ullamco ex\",\n   \"message\": \"minim labore\"\n  },\n  {\n   \"property\": \"ut occaecat veniam\",\n   \"code\": \"pariatur sunt exercitation\",\n   \"message\": \"cupidatat minim\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5e7cfcca-093b-4726-9ca9-d17f63ef4d96",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b3388471-102c-46c6-832b-9cab98133e31",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "abedbece-6629-4208-a150-ce5f832e3f32",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchLatestMadeOrderByOspId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ospId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "585f6076-968d-47e5-b069-06aced256f0f",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "ab69a26f-7843-4a29-bb5a-afe62603b939",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cf7d78dc-c35b-4845-809f-a9c54fb70da1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ae672c9b-383a-4530-b0a5-b27ee1219252",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f9ce1818-8523-4568-a094-367a260d9427",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/restrictions"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "fa8b90da-170e-42d0-876f-7b358051c2ae",
    "name": "Restrictions API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
