{
  "item": [
    {
      "id": "0a9a0230-c570-4a9f-bea1-e2ca9f5ff987",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "53573afd-c980-400d-a661-3e3ea41dd668",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"sed commodo ullamco\"\n   },\n   {\n    \"message\": \"Ut ut\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"deser\",\n    \"cardPaymentsExternalUrl\": \"ea sunt amet tempor eu\",\n    \"paymentsTelephone\": \"deserunt occaecat culpa\"\n   },\n   {\n    \"name\": \"anim dolor laboris ut\",\n    \"cardPaymentsExternalUrl\": \"cillum\",\n    \"paymentsTelephone\": \"ex Excepteur consectetur officia\"\n   }\n  ],\n  \"entityType\": 3,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"anim in\",\n     \"crs\": {\n      \"type\": \"minim ut\",\n      \"properties\": {\n       \"name\": \"Excepteur mollit qui\"\n      }\n     }\n    },\n    {\n     \"type\": \"aliqua est veniam\",\n     \"crs\": {\n      \"type\": \"dolor sed\",\n      \"properties\": {\n       \"name\": \"culpa Excepteur volupt\"\n      }\n     }\n    }\n   ],\n   \"type\": \"id sit ut\",\n   \"crs\": {\n    \"type\": \"laborum ipsum mollit ex\",\n    \"properties\": {\n     \"name\": \"laborum Lorem\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"ea do labore sed irure\",\n  \"name\": \"al\",\n  \"eTag\": \"pariatur in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "670c0c6e-4581-45a6-a548-4ee658a28da0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9c002b69-5710-4411-b6cb-a94de75329fa",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a4d8f671-72f3-499b-be7a-404fb1e9c581",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9a51fa69-6279-4e87-a12a-2f382a56836c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ed2f3354-ac22-47d9-aab6-db48dec92a74",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "f233c99a-4900-42f4-9d03-80f035e74522",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"reprehenderit dolor\",\n     \"city\": \"veniam nulla sed\",\n     \"country\": \"\",\n     \"postcode\": \"nisi ea irure commodo deserunt\"\n    },\n    \"locationCode\": \"laborum quis dolore dolore cillum\",\n    \"totalCapacity\": 3365790,\n    \"zoneId\": \"mollit ut enim est\",\n    \"authorityId\": \"do occaecat adipisicing in dolore\",\n    \"features\": {\n     \"type\": \"ut\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"consectetur\",\n          \"crs\": {\n           \"type\": \"consectetur\",\n           \"properties\": {\n            \"name\": \"culpa Lorem proident\"\n           }\n          }\n         },\n         {\n          \"type\": \"consectetur enim\",\n          \"crs\": {\n           \"type\": \"aute\",\n           \"properties\": {\n            \"name\": \"mollit anim cillum\"\n           }\n          }\n         }\n        ],\n        \"type\": \"mollit eiusmod aute proident\",\n        \"crs\": {\n         \"type\": \"dolor est\",\n         \"properties\": {\n          \"name\": \"eiusmod sed reprehenderit commodo non\"\n         }\n        }\n       },\n       \"type\": \"fugiat laboris\",\n       \"id\": \"nisi aute\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"v\",\n          \"crs\": {\n           \"type\": \"ullamco cupidatat\",\n           \"properties\": {\n            \"name\": \"et commodo sint Duis\"\n           }\n          }\n         },\n         {\n          \"type\": \"culpa id minim aliqua ad\",\n          \"crs\": {\n           \"type\": \"in ad ea est culpa\",\n           \"properties\": {\n            \"name\": \"e\"\n           }\n          }\n         }\n        ],\n        \"type\": \"irure exercitation pariatur labore\",\n        \"crs\": {\n         \"type\": \"sed adipisicing Excepteur\",\n         \"properties\": {\n          \"name\": \"velit non exercitat\"\n         }\n        }\n       },\n       \"type\": \"adipisicing et sunt\",\n       \"id\": \"sint ali\"\n      }\n     ],\n     \"properties\": \"elit nisi\"\n    },\n    \"paymentMethodIds\": [\n     8769964,\n     -75262650\n    ],\n    \"entityId\": \"et consequat\",\n    \"entityType\": 3,\n    \"name\": \"aliquip officia Duis et\",\n    \"eTag\": \"ullamco est nulla ad in\",\n    \"operator\": {\n     \"telephone\": \"nulla laboris\",\n     \"website\": \"ea eu\",\n     \"name\": \"anim laborum\",\n     \"cardPaymentsExternalUrl\": \"amet officia Excepteur\",\n     \"paymentsTelephone\": \"occaec\"\n    },\n    \"onStreetParkingTypeIds\": [\n     3,\n     15\n    ],\n    \"facilityTypeIds\": [\n     -55488694,\n     20137658\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"consequat\",\n     \"city\": \"in veniam ut ve\",\n     \"country\": \"consectetur dolore nisi amet irure\",\n     \"postcode\": \"veniam dolor\"\n    },\n    \"locationCode\": \"aliqua\",\n    \"totalCapacity\": 19445543,\n    \"zoneId\": \"sed irure ad esse enim\",\n    \"authorityId\": \"minim dolore est\",\n    \"features\": {\n     \"type\": \"consectetu\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"quis\",\n          \"crs\": {\n           \"type\": \"voluptate consequat te\",\n           \"properties\": {\n            \"name\": \"deserunt velit dolor commodo Ut\"\n           }\n          }\n         },\n         {\n          \"type\": \"reprehenderit dolor\",\n          \"crs\": {\n           \"type\": \"minim adipisicing Duis aliquip\",\n           \"properties\": {\n            \"name\": \"eu Lorem\"\n           }\n          }\n         }\n        ],\n        \"type\": \"pariatur\",\n        \"crs\": {\n         \"type\": \"amet\",\n         \"properties\": {\n          \"name\": \"esse\"\n         }\n        }\n       },\n       \"type\": \"est deserunt ipsum eu quis\",\n       \"id\": \"fugiat sint ipsum\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"magna sunt exercitation\",\n          \"crs\": {\n           \"type\": \"incididunt Ut commodo\",\n           \"properties\": {\n            \"name\": \"irure laborum nisi\"\n           }\n          }\n         },\n         {\n          \"type\": \"consectetur cillum ex\",\n          \"crs\": {\n           \"type\": \"Lorem nostrud minim Ut\",\n           \"properties\": {\n            \"name\": \"labore sunt velit dolore\"\n           }\n          }\n         }\n        ],\n        \"type\": \"eu ea\",\n        \"crs\": {\n         \"type\": \"est enim dolore p\",\n         \"properties\": {\n          \"name\": \"aute do\"\n         }\n        }\n       },\n       \"type\": \"aliqua enim Excepteur Duis\",\n       \"id\": \"exe\"\n      }\n     ],\n     \"properties\": \"labore ut voluptate\"\n    },\n    \"paymentMethodIds\": [\n     10141020,\n     -29380495\n    ],\n    \"entityId\": \"ad nulla voluptate\",\n    \"entityType\": 1,\n    \"name\": \"sed adipisicing minim\",\n    \"eTag\": \"exercitation ipsum e\",\n    \"operator\": {\n     \"telephone\": \"mollit e\",\n     \"website\": \"id irure cillum\",\n     \"name\": \"ut dolore moll\",\n     \"cardPaymentsExternalUrl\": \"non occaecat aliquip proident\",\n     \"paymentsTelephone\": \"est aliqua commodo\"\n    },\n    \"onStreetParkingTypeIds\": [\n     6,\n     4\n    ],\n    \"facilityTypeIds\": [\n     5202950,\n     11148464\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"est dolor irure\",\n       \"crs\": {\n        \"type\": \"in minim\",\n        \"properties\": {\n         \"name\": \"officia eu dolore qui\"\n        }\n       }\n      },\n      {\n       \"type\": \"par\",\n       \"crs\": {\n        \"type\": \"et consectetur esse\",\n        \"properties\": {\n         \"name\": \"elit cillum do anim\"\n        }\n       }\n      }\n     ],\n     \"type\": \"fugiat\",\n     \"crs\": {\n      \"type\": \"laborum\",\n      \"properties\": {\n       \"name\": \"minim sed\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"Duis ut\"\n     },\n     {\n      \"message\": \"laborum\"\n     }\n    ],\n    \"authorityId\": \"mollit consequat dolore\",\n    \"zoneType\": 3,\n    \"entityType\": 1,\n    \"entityId\": \"labore cupidatat Ut incididunt ullamco\",\n    \"name\": \"Ut laboris proident\",\n    \"eTag\": \"officia Ut sunt\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"in ut proi\",\n       \"crs\": {\n        \"type\": \"elit qui adipisicing\",\n        \"properties\": {\n         \"name\": \"anim laboris cillum aute\"\n        }\n       }\n      },\n      {\n       \"type\": \"consequat proident mollit aliqua\",\n       \"crs\": {\n        \"type\": \"dolore Lorem ullamco \",\n        \"properties\": {\n         \"name\": \"adipisicing laborum fugiat nostrud ut\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Duis\",\n     \"crs\": {\n      \"type\": \"proident cillum Duis\",\n      \"properties\": {\n       \"name\": \"et magna\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"non aute exercitation\"\n     },\n     {\n      \"message\": \"minim Duis tempor elit proident\"\n     }\n    ],\n    \"authorityId\": \"eu ad officia fugiat\",\n    \"zoneType\": 7,\n    \"entityType\": 1,\n    \"entityId\": \"in minim est sit\",\n    \"name\": \"culpa veniam\",\n    \"eTag\": \"elit\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"non Duis veniam\"\n     },\n     {\n      \"message\": \"dolore in\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"labore ex adipisicing\",\n      \"cardPaymentsExternalUrl\": \"eu aute sit reprehenderit\",\n      \"paymentsTelephone\": \"laborum est in velit\"\n     },\n     {\n      \"name\": \"et dolore adipisicing aliquip\",\n      \"cardPaymentsExternalUrl\": \"consequat sunt do\",\n      \"paymentsTelephone\": \"aute ex\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"proi\",\n       \"crs\": {\n        \"type\": \"cupidatat ipsum fugiat\",\n        \"properties\": {\n         \"name\": \"sint veniam in\"\n        }\n       }\n      },\n      {\n       \"type\": \"officia eiusmod\",\n       \"crs\": {\n        \"type\": \"voluptate culpa\",\n        \"properties\": {\n         \"name\": \"cillum laboris\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ex officia consectetur\",\n     \"crs\": {\n      \"type\": \"culpa nulla eu magna\",\n      \"properties\": {\n       \"name\": \"est voluptate\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"dolor ut\",\n    \"name\": \"sint nulla\",\n    \"eTag\": \"irure exercitation elit id\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"exercitation Ut officia\"\n     },\n     {\n      \"message\": \"minim dolore dolor\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"deserunt adipi\",\n      \"cardPaymentsExternalUrl\": \"non deserunt eiusmod nulla\",\n      \"paymentsTelephone\": \"Lorem ex officia in\"\n     },\n     {\n      \"name\": \"magna\",\n      \"cardPaymentsExternalUrl\": \"nulla dolor est\",\n      \"paymentsTelephone\": \"ut eu ex pariatur dolore\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"cillum fugiat \",\n       \"crs\": {\n        \"type\": \"labore\",\n        \"properties\": {\n         \"name\": \"irure ullamco amet\"\n        }\n       }\n      },\n      {\n       \"type\": \"esse dolore cupidatat laboris\",\n       \"crs\": {\n        \"type\": \"commodo tempor proid\",\n        \"properties\": {\n         \"name\": \"dolore adipisicing in\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Lorem consequat non in\",\n     \"crs\": {\n      \"type\": \"mollit magna nisi deserunt\",\n      \"properties\": {\n       \"name\": \"nulla eiusmod\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"sit ex Ut in laboris\",\n    \"name\": \"qui aliquip et enim\",\n    \"eTag\": \"aute occaecat\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "eab62f5d-511f-443e-8ce1-0be44c36d40f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur Duis eu in sint\",\n \"errors\": [\n  {\n   \"property\": \"velit consequat dolor in nostrud\",\n   \"code\": \"Excepteur ex non\",\n   \"message\": \"velit reprehenderit nulla\"\n  },\n  {\n   \"property\": \"ad esse\",\n   \"code\": \"voluptat\",\n   \"message\": \"aliqua pariatur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "482394a3-2da0-4949-8b8a-e082983ba152",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c951d0da-4ded-474d-b3c9-dea550ab75fc",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "79a3ec0f-e44e-4eca-bc1c-fca39149cd34",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6acf5f34-1f70-4c2e-bbf8-951ce0e78008",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "2820073f-dc2b-440f-9288-fb911fe25a0e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"et irure deserunt magna\",\n  \"entityType\": 3,\n  \"entityETag\": \"aliquip eiusmod consectetur cupidatat sed\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -58844696,\n     -74758905\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     -77895147,\n     6799106\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2fa6d503-325a-4f7f-bd03-fd0882544515",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0c1aa6e1-35da-4af6-8eb3-f894397184da",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5ea9a405-c2bb-405b-9e41-5e572ea216b2",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ea916b3a-86db-4033-858c-6953d425d755",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b1407994-9eb1-4e89-b98a-552f73eb7749",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "972ee806-a375-4a1c-bcdf-21f43569fad2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"incididunt dolore aliquip ipsum deserunt\",\n   \"city\": \"qui labore laboris fugiat\",\n   \"country\": \"quis\",\n   \"postcode\": \"irure\"\n  },\n  \"locationCode\": \"non velit officia eu\",\n  \"totalCapacity\": 96290270,\n  \"zoneId\": \"ut ess\",\n  \"authorityId\": \"in amet nisi sint\",\n  \"features\": {\n   \"type\": \"veniam do ea l\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"ullamco ea\",\n        \"crs\": {\n         \"type\": \"ut\",\n         \"properties\": {\n          \"name\": \"ullamco eiusmod cillum consequat\"\n         }\n        }\n       },\n       {\n        \"type\": \"aliqua fugiat dolor\",\n        \"crs\": {\n         \"type\": \"quis non ut aute\",\n         \"properties\": {\n          \"name\": \"dolor cil\"\n         }\n        }\n       }\n      ],\n      \"type\": \"cillum\",\n      \"crs\": {\n       \"type\": \"Lorem non veniam\",\n       \"properties\": {\n        \"name\": \"\"\n       }\n      }\n     },\n     \"type\": \"velit veniam qui amet\",\n     \"id\": \"esse cillum mollit ea ipsum\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"Duis enim quis ea\",\n        \"crs\": {\n         \"type\": \"Duis dol\",\n         \"properties\": {\n          \"name\": \"nulla est mollit\"\n         }\n        }\n       },\n       {\n        \"type\": \"voluptate Lorem paria\",\n        \"crs\": {\n         \"type\": \"ipsum do fugiat\",\n         \"properties\": {\n          \"name\": \"fugiat nisi\"\n         }\n        }\n       }\n      ],\n      \"type\": \"dolore aliqua est\",\n      \"crs\": {\n       \"type\": \"dolore\",\n       \"properties\": {\n        \"name\": \"dolor cupidatat eli\"\n       }\n      }\n     },\n     \"type\": \"nulla culpa\",\n     \"id\": \"et Ut sed eu\"\n    }\n   ],\n   \"properties\": \"est ut aliqua nulla eiusmod\"\n  },\n  \"paymentMethodIds\": [\n   27445212,\n   35934180\n  ],\n  \"entityId\": \"repr\",\n  \"entityType\": 3,\n  \"name\": \"nisi esse\",\n  \"eTag\": \"aute ad cupidatat quis dolore\",\n  \"operator\": {\n   \"telephone\": \"dolore ut dolor ad reprehenderit\",\n   \"website\": \"ex dolor id\",\n   \"name\": \"mollit voluptate\",\n   \"cardPaymentsExternalUrl\": \"Duis dolor veniam laborum\",\n   \"paymentsTelephone\": \"amet dolore ex offic\"\n  },\n  \"onStreetParkingTypeIds\": [\n   10,\n   5\n  ],\n  \"facilityTypeIds\": [\n   25291518,\n   -20056715\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1e3fce93-cd73-4293-9e53-d6ed66848844",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "873137f7-019f-485c-b0ff-bc18f4ad28c1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6fbacd5e-5afc-44ed-b34e-805fc59cd1f1",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9e425270-214a-4164-8160-a7a0503c474c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8370abdd-5ed8-4525-bd03-07ced54bf72e",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2338cb5c-ea18-4632-90ae-47c17608f89c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"do nostrud dolor incididunt\",\n  \"entityType\": 4,\n  \"quotes\": [\n   {\n    \"cost\": -80026106.60558389,\n    \"currency\": \"ad occaecat dolor\",\n    \"minCost\": -528215.4040759951,\n    \"minStayUntil\": \"ullamco Excepteur aliquip\",\n    \"canExtendUntil\": \"eu aliqua\",\n    \"pricedUntil\": \"dolor quis e\",\n    \"noReturnUntil\": \"eu cillum\",\n    \"freeUntil\": \"reprehenderit fugiat adipisicing aliqua\",\n    \"becomesFreeAt\": \"exercitation Duis pariatur\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -51073887,\n     29832759\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"fugia\",\n    \"surcharge\": {\n     \"value\": 36426244.3645412,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 1968978\n     }\n    }\n   },\n   {\n    \"cost\": 39072638.2891784,\n    \"currency\": \"in dolore nisi\",\n    \"minCost\": -16539684.16803138,\n    \"minStayUntil\": \"ad fugiat Lorem eiusmod sunt\",\n    \"canExtendUntil\": \"ex culpa laborum\",\n    \"pricedUntil\": \"eu voluptate ut amet officia\",\n    \"noReturnUntil\": \"non commodo sunt magna ut\",\n    \"freeUntil\": \"aliqua cupidatat\",\n    \"becomesFreeAt\": \"occaecat laboris aliqua fugiat\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -18355326,\n     4474197\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ullamco Duis laborum\",\n    \"surcharge\": {\n     \"value\": 4112417.514998153,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -24378797\n     }\n    }\n   }\n  ],\n  \"distance\": 58785793.29009944,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 2,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -86467923,\n    45091231\n   ]\n  },\n  \"entityETag\": \"anim\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6f4036c6-69b6-48ea-b722-b73ed3039815",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "60eeb68b-4494-4d53-9223-29cc52e2ce60",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2d22842f-2d1a-4161-aab6-caac904cbad1",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5bdad245-1004-4ec0-8d6a-6f6718ee07ea",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d2ba1128-ae3f-40ea-950c-a68ec80b9ef7",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1df1dab0-c100-4f1d-bdc3-2e43212c1741",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"ea dolor deserunt\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"enim nisi dolor exercitation\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -19348309.666400135,\n      \"currency\": \"Excepteur aliqua nostrud\",\n      \"minCost\": 3968420.072729513,\n      \"minStayUntil\": \"magna Ut voluptate eu dolor\",\n      \"canExtendUntil\": \"qui eu Duis nisi\",\n      \"pricedUntil\": \"exercitation reprehenderit est\",\n      \"noReturnUntil\": \"voluptate eiusmod ut dolore\",\n      \"freeUntil\": \"occaecat ipsum elit est\",\n      \"becomesFreeAt\": \"consequat sint pariatur velit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -87126481,\n       38844452\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris consectetur voluptate\",\n      \"surcharge\": {\n       \"value\": -6833389.460051537,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 7870268\n       }\n      }\n     },\n     {\n      \"cost\": -71905024.3116527,\n      \"currency\": \"ut ullamco ipsum fugiat\",\n      \"minCost\": -73950898.60473773,\n      \"minStayUntil\": \"incididunt\",\n      \"canExtendUntil\": \"eiusmod in est\",\n      \"pricedUntil\": \"magna velit esse\",\n      \"noReturnUntil\": \"labor\",\n      \"freeUntil\": \"proiden\",\n      \"becomesFreeAt\": \"pariatur magna nulla\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -41716612,\n       77481266\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"pariatur aliquip\",\n      \"surcharge\": {\n       \"value\": -2257596.081875637,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -64996643\n       }\n      }\n     }\n    ],\n    \"distance\": -98137614.26022407,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -70974128,\n      -69727741\n     ]\n    },\n    \"entityETag\": \"consectetur adipisicing elit dolore\"\n   },\n   {\n    \"entityId\": \"sit eu\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -60534172.204726785,\n      \"currency\": \"in reprehenderit elit\",\n      \"minCost\": 10218731.862198904,\n      \"minStayUntil\": \"veniam non e\",\n      \"canExtendUntil\": \"occaecat irure\",\n      \"pricedUntil\": \"irure laboris sint eiusmod est\",\n      \"noReturnUntil\": \"mollit officia veniam elit\",\n      \"freeUntil\": \"enim deserunt consectetur commodo\",\n      \"becomesFreeAt\": \"sit commodo\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       52766893,\n       -8991944\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aliquip aliqua esse sunt\",\n      \"surcharge\": {\n       \"value\": 56393827.018184215,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -50682067\n       }\n      }\n     },\n     {\n      \"cost\": 59494623.663320035,\n      \"currency\": \"qui sit tempor\",\n      \"minCost\": -44853754.77582703,\n      \"minStayUntil\": \"pariatur\",\n      \"canExtendUntil\": \"occaec\",\n      \"pricedUntil\": \"dolo\",\n      \"noReturnUntil\": \"dolore laborum\",\n      \"freeUntil\": \"aute reprehenderit\",\n      \"becomesFreeAt\": \"elit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -50025028,\n       33618509\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat ad cillum elit\",\n      \"surcharge\": {\n       \"value\": -703038.838975355,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -38110455\n       }\n      }\n     }\n    ],\n    \"distance\": 97071813.98891032,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -10441358,\n      60237767\n     ]\n    },\n    \"entityETag\": \"occaecat culpa ullamco in pariatur\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "606fa7b7-5169-4946-8217-cf87241bffde",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d7c4295f-31bc-4226-9597-c406f7f81354",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5ea88fa6-444a-472f-be7a-1b7ccda17635",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "3ab17beb-04b1-4745-ba95-4f841ba8e59e",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "81736f3e-9c17-4ec5-be7a-ee73ab36404f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"quis sit anim\",\n    \"cardPaymentsExternalUrl\": \"Duis cillum\",\n    \"paymentsTelephone\": \"commodo nostrud dolor cillum\"\n   },\n   {\n    \"name\": \"nisi ea ut proiden\",\n    \"cardPaymentsExternalUrl\": \"ea\",\n    \"paymentsTelephone\": \"eu nisi velit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7d34243c-356f-46a5-82e6-3fdf9ff568e1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "aa057a3d-f98c-4200-8a85-8d099825b3ef",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f48ad929-78d4-429b-ba8f-0c211d265905",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d5d8bd0c-7dad-444d-b592-548033110836",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e37235cc-acdc-473b-acd7-f26434fad147",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "92264dae-3984-48cd-9d94-9603c339b8a8",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"nulla ullamco laboris non\",\n     \"crs\": {\n      \"type\": \"irure sed id proident\",\n      \"properties\": {\n       \"name\": \"commodo eiusmod cupidatat\"\n      }\n     }\n    },\n    {\n     \"type\": \"Excepteur et ea aute\",\n     \"crs\": {\n      \"type\": \"veniam velit\",\n      \"properties\": {\n       \"name\": \"consectetur Excepteur v\"\n      }\n     }\n    }\n   ],\n   \"type\": \"elit cillum\",\n   \"crs\": {\n    \"type\": \"eu proident\",\n    \"properties\": {\n     \"name\": \"irure\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"consequat id\"\n   },\n   {\n    \"message\": \"commodo\"\n   }\n  ],\n  \"authorityId\": \"do ut ad proident culpa\",\n  \"zoneType\": 10,\n  \"entityType\": 1,\n  \"entityId\": \"cillum proident adipisicing elit\",\n  \"name\": \"minim\",\n  \"eTag\": \"q\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "456c4dcf-e9b3-4ae8-b9f4-4a786d575e2a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "11ded376-faaa-4e5c-bc9b-bdb37bae2ebf",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "aa7a2473-182a-4191-bdd1-c6c61b05b22d",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla dolore voluptate\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "60094e5b-c532-4e1b-88cc-310152e0b91f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "cfa0269f-ac57-4a80-b46b-98188bc87382",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"co\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6cd03943-def2-471b-a36a-b5d3c4309667",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum ut\",\n            \"properties\": {\n                \"name\": \"elit minim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"eiusmod non in\",\n    \"entityETag\": \"commodo ex sunt anim\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 7,\n      \"specialRestrictionTypeId\": -36435033,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt sed culpa aliquip\",\n        \"endTime\": \"ullamco in enim sunt\",\n        \"maxStay\": -43108934\n       },\n       {\n        \"startTime\": \"cillum nost\",\n        \"endTime\": \"commodo\",\n        \"maxStay\": -21218561\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 16,\n      \"specialRestrictionTypeId\": 91038148,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex sit\",\n        \"endTime\": \"eu sunt et\",\n        \"maxStay\": 4031\n       },\n       {\n        \"startTime\": \"eiusmod commodo nostrud cupidatat sed\",\n        \"endTime\": \"laboris nostrud tempor non\",\n        \"maxStay\": -73309929\n       }\n      ]\n     }\n    ],\n    \"distance\": 72471883.24286225\n   },\n   {\n    \"entityId\": \"e\",\n    \"entityETag\": \"officia culpa enim id\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 3,\n      \"specialRestrictionTypeId\": 32845969,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"officia veniam pariatur\",\n        \"endTime\": \"fugiat sint mollit pariatur\",\n        \"maxStay\": -75641713\n       },\n       {\n        \"startTime\": \"officia esse id\",\n        \"endTime\": \"qui pariatur \",\n        \"maxStay\": 63840817\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 12,\n      \"specialRestrictionTypeId\": 5957788,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud velit voluptate\",\n        \"endTime\": \"sint sunt dolor mollit\",\n        \"maxStay\": -36781302\n       },\n       {\n        \"startTime\": \"qui nulla mollit esse\",\n        \"endTime\": \"ex tempor\",\n        \"maxStay\": -91249631\n       }\n      ]\n     }\n    ],\n    \"distance\": -33239940.533214882\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"velit ut sunt qui in\",\n   \"entityETag\": \"culpa ad dolor irure ex\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 16,\n     \"specialRestrictionTypeId\": -96676324,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"aute esse ipsum anim\",\n       \"endTime\": \"ex irure mollit qui\",\n       \"maxStay\": -76509161\n      },\n      {\n       \"startTime\": \"laborum voluptate reprehenderit\",\n       \"endTime\": \"ea cupidatat et dolore\",\n       \"maxStay\": 72733219\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 3,\n     \"specialRestrictionTypeId\": -53058744,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"c\",\n       \"endTime\": \"ea sint\",\n       \"maxStay\": -20423996\n      },\n      {\n       \"startTime\": \"Duis reprehenderit\",\n       \"endTime\": \"enim eiusmod commodo Ut\",\n       \"maxStay\": -13820368\n      }\n     ]\n    }\n   ],\n   \"distance\": -80877529.0512937\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b685867a-e287-436b-89b6-8801fdd7c5ff",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum ut\",\n            \"properties\": {\n                \"name\": \"elit minim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "762736d8-341f-419d-a76a-950f1813ec72",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum ut\",\n            \"properties\": {\n                \"name\": \"elit minim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8d3a1a0a-66a3-42b7-898e-dda7d8f881b5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum ut\",\n            \"properties\": {\n                \"name\": \"elit minim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "76cbe439-0ef9-41b1-b89f-36775cb27a96",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum ut\",\n            \"properties\": {\n                \"name\": \"elit minim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d9bc66e0-618c-4a71-a7a2-acbef5d63d6b",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        16\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "fdb7fd7e-2a0e-44d0-8457-2d5eade1acdd",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        4\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nisi eu\",\n      \"city\": \"pariatur qui elit occaecat\",\n      \"country\": \"labore esse anim\",\n      \"postcode\": \"veniam reprehenderit do\"\n     },\n     \"locationCode\": \"laborum irure\",\n     \"totalCapacity\": -90229990,\n     \"zoneId\": \"voluptate eiusmod ullamco\",\n     \"authorityId\": \"dolor minim exercitation adipi\",\n     \"features\": {\n      \"type\": \"sed ea ipsum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut cup\",\n           \"crs\": {\n            \"type\": \"do culpa in consequat ut\",\n            \"properties\": {\n             \"name\": \"irure sed\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor\",\n           \"crs\": {\n            \"type\": \"et proident voluptate elit\",\n            \"properties\": {\n             \"name\": \"ut proident \"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliqua velit amet nulla\",\n         \"crs\": {\n          \"type\": \"dolore\",\n          \"properties\": {\n           \"name\": \"magna fugiat sunt\"\n          }\n         }\n        },\n        \"type\": \"adip\",\n        \"id\": \"eiusmod occaecat nulla voluptate ex\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident qui reprehenderit aliqua\",\n           \"crs\": {\n            \"type\": \"quis officia minim reprehenderit\",\n            \"properties\": {\n             \"name\": \"magna vo\"\n            }\n           }\n          },\n          {\n           \"type\": \"magna sit\",\n           \"crs\": {\n            \"type\": \"amet quis\",\n            \"properties\": {\n             \"name\": \"non Ut eu\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliqua sed\",\n         \"crs\": {\n          \"type\": \"sit dolor ad dolor tempor\",\n          \"properties\": {\n           \"name\": \"enim velit aliquip\"\n          }\n         }\n        },\n        \"type\": \"et aliqua dolore Duis id\",\n        \"id\": \"tempor labore enim Lorem\"\n       }\n      ],\n      \"properties\": \"elit qui sed Duis\"\n     },\n     \"paymentMethodIds\": [\n      71421582,\n      -2683684\n     ],\n     \"entityId\": \"reprehenderit sint et deserunt nulla\",\n     \"entityType\": 4,\n     \"name\": \"Duis\",\n     \"eTag\": \"exercitation fugiat mollit minim\",\n     \"operator\": {\n      \"telephone\": \"Excepteur\",\n      \"website\": \"Excepteur\",\n      \"name\": \"pariatur\",\n      \"cardPaymentsExternalUrl\": \"mollit\",\n      \"paymentsTelephone\": \"qui\"\n     },\n     \"onStreetParkingTypeIds\": [\n      6,\n      3\n     ],\n     \"facilityTypeIds\": [\n      17126925,\n      82797663\n     ]\n    },\n    \"distance\": -45039906.61037287\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"in\",\n      \"city\": \"proident anim elit cul\",\n      \"country\": \"ani\",\n      \"postcode\": \"id ut\"\n     },\n     \"locationCode\": \"c\",\n     \"totalCapacity\": 38531365,\n     \"zoneId\": \"culpa mollit dolor aliquip non\",\n     \"authorityId\": \"laboris amet Lorem\",\n     \"features\": {\n      \"type\": \"ad a\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident minim in fugiat tempor\",\n           \"crs\": {\n            \"type\": \"quis\",\n            \"properties\": {\n             \"name\": \"id pariatur anim Duis\"\n            }\n           }\n          },\n          {\n           \"type\": \"Ut aliqua\",\n           \"crs\": {\n            \"type\": \"in enim\",\n            \"properties\": {\n             \"name\": \"dolore anim Lorem\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do\",\n         \"crs\": {\n          \"type\": \"in irure\",\n          \"properties\": {\n           \"name\": \"cillum est sunt\"\n          }\n         }\n        },\n        \"type\": \"sint elit\",\n        \"id\": \"eu laboris ut consequat\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex ipsum labore in\",\n           \"crs\": {\n            \"type\": \"aliquip adipisicing pariatur volupt\",\n            \"properties\": {\n             \"name\": \"sint aliquip aute dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"mollit voluptate elit\",\n           \"crs\": {\n            \"type\": \"cillum ut occaecat\",\n            \"properties\": {\n             \"name\": \"eu in dolo\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod cillum reprehenderit tempor\",\n         \"crs\": {\n          \"type\": \"et\",\n          \"properties\": {\n           \"name\": \"proident ea nulla tempor minim\"\n          }\n         }\n        },\n        \"type\": \"ut amet dolore\",\n        \"id\": \"dolor nostrud ullamco\"\n       }\n      ],\n      \"properties\": \"proident ut ut irure\"\n     },\n     \"paymentMethodIds\": [\n      -51113693,\n      82423013\n     ],\n     \"entityId\": \"dolore\",\n     \"entityType\": 2,\n     \"name\": \"\",\n     \"eTag\": \"incidid\",\n     \"operator\": {\n      \"telephone\": \"adipisicing\",\n      \"website\": \"dolore est occaecat\",\n      \"name\": \"id dolor voluptate ut sint\",\n      \"cardPaymentsExternalUrl\": \"Duis aute proident nostrud elit\",\n      \"paymentsTelephone\": \"qui\"\n     },\n     \"onStreetParkingTypeIds\": [\n      5,\n      16\n     ],\n     \"facilityTypeIds\": [\n      -2026277,\n      54141349\n     ]\n    },\n    \"distance\": -80136141.57511313\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0514a75e-6e5c-4633-b390-6968bcd94aa0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        4\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5bad66d3-940e-4208-b522-3a2fdddbe1eb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        4\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ccacf793-d6e7-4af1-b749-3be9aa1022a4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        4\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bf9dc351-7f92-4c15-bba8-e9559c666b9f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        4\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "256da4fd-572c-4016-b103-eaa6ae46cbeb",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla in\",\n            \"properties\": {\n                \"name\": \"cupidatat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        9\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "f3b792f0-a7ff-4f1f-bef7-07afab686b71",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim\",\n            \"properties\": {\n                \"name\": \"deserunt adipisicing ut amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        1\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nisi eu\",\n      \"city\": \"pariatur qui elit occaecat\",\n      \"country\": \"labore esse anim\",\n      \"postcode\": \"veniam reprehenderit do\"\n     },\n     \"locationCode\": \"laborum irure\",\n     \"totalCapacity\": -90229990,\n     \"zoneId\": \"voluptate eiusmod ullamco\",\n     \"authorityId\": \"dolor minim exercitation adipi\",\n     \"features\": {\n      \"type\": \"sed ea ipsum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut cup\",\n           \"crs\": {\n            \"type\": \"do culpa in consequat ut\",\n            \"properties\": {\n             \"name\": \"irure sed\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor\",\n           \"crs\": {\n            \"type\": \"et proident voluptate elit\",\n            \"properties\": {\n             \"name\": \"ut proident \"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliqua velit amet nulla\",\n         \"crs\": {\n          \"type\": \"dolore\",\n          \"properties\": {\n           \"name\": \"magna fugiat sunt\"\n          }\n         }\n        },\n        \"type\": \"adip\",\n        \"id\": \"eiusmod occaecat nulla voluptate ex\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident qui reprehenderit aliqua\",\n           \"crs\": {\n            \"type\": \"quis officia minim reprehenderit\",\n            \"properties\": {\n             \"name\": \"magna vo\"\n            }\n           }\n          },\n          {\n           \"type\": \"magna sit\",\n           \"crs\": {\n            \"type\": \"amet quis\",\n            \"properties\": {\n             \"name\": \"non Ut eu\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliqua sed\",\n         \"crs\": {\n          \"type\": \"sit dolor ad dolor tempor\",\n          \"properties\": {\n           \"name\": \"enim velit aliquip\"\n          }\n         }\n        },\n        \"type\": \"et aliqua dolore Duis id\",\n        \"id\": \"tempor labore enim Lorem\"\n       }\n      ],\n      \"properties\": \"elit qui sed Duis\"\n     },\n     \"paymentMethodIds\": [\n      71421582,\n      -2683684\n     ],\n     \"entityId\": \"reprehenderit sint et deserunt nulla\",\n     \"entityType\": 4,\n     \"name\": \"Duis\",\n     \"eTag\": \"exercitation fugiat mollit minim\",\n     \"operator\": {\n      \"telephone\": \"Excepteur\",\n      \"website\": \"Excepteur\",\n      \"name\": \"pariatur\",\n      \"cardPaymentsExternalUrl\": \"mollit\",\n      \"paymentsTelephone\": \"qui\"\n     },\n     \"onStreetParkingTypeIds\": [\n      6,\n      3\n     ],\n     \"facilityTypeIds\": [\n      17126925,\n      82797663\n     ]\n    },\n    \"distance\": -45039906.61037287\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"in\",\n      \"city\": \"proident anim elit cul\",\n      \"country\": \"ani\",\n      \"postcode\": \"id ut\"\n     },\n     \"locationCode\": \"c\",\n     \"totalCapacity\": 38531365,\n     \"zoneId\": \"culpa mollit dolor aliquip non\",\n     \"authorityId\": \"laboris amet Lorem\",\n     \"features\": {\n      \"type\": \"ad a\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident minim in fugiat tempor\",\n           \"crs\": {\n            \"type\": \"quis\",\n            \"properties\": {\n             \"name\": \"id pariatur anim Duis\"\n            }\n           }\n          },\n          {\n           \"type\": \"Ut aliqua\",\n           \"crs\": {\n            \"type\": \"in enim\",\n            \"properties\": {\n             \"name\": \"dolore anim Lorem\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do\",\n         \"crs\": {\n          \"type\": \"in irure\",\n          \"properties\": {\n           \"name\": \"cillum est sunt\"\n          }\n         }\n        },\n        \"type\": \"sint elit\",\n        \"id\": \"eu laboris ut consequat\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex ipsum labore in\",\n           \"crs\": {\n            \"type\": \"aliquip adipisicing pariatur volupt\",\n            \"properties\": {\n             \"name\": \"sint aliquip aute dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"mollit voluptate elit\",\n           \"crs\": {\n            \"type\": \"cillum ut occaecat\",\n            \"properties\": {\n             \"name\": \"eu in dolo\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod cillum reprehenderit tempor\",\n         \"crs\": {\n          \"type\": \"et\",\n          \"properties\": {\n           \"name\": \"proident ea nulla tempor minim\"\n          }\n         }\n        },\n        \"type\": \"ut amet dolore\",\n        \"id\": \"dolor nostrud ullamco\"\n       }\n      ],\n      \"properties\": \"proident ut ut irure\"\n     },\n     \"paymentMethodIds\": [\n      -51113693,\n      82423013\n     ],\n     \"entityId\": \"dolore\",\n     \"entityType\": 2,\n     \"name\": \"\",\n     \"eTag\": \"incidid\",\n     \"operator\": {\n      \"telephone\": \"adipisicing\",\n      \"website\": \"dolore est occaecat\",\n      \"name\": \"id dolor voluptate ut sint\",\n      \"cardPaymentsExternalUrl\": \"Duis aute proident nostrud elit\",\n      \"paymentsTelephone\": \"qui\"\n     },\n     \"onStreetParkingTypeIds\": [\n      5,\n      16\n     ],\n     \"facilityTypeIds\": [\n      -2026277,\n      54141349\n     ]\n    },\n    \"distance\": -80136141.57511313\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3df88a40-05fd-442e-bdcd-61e8e947965b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim\",\n            \"properties\": {\n                \"name\": \"deserunt adipisicing ut amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        1\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3ad83b85-8880-4ba5-a814-6d5d7c125b39",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim\",\n            \"properties\": {\n                \"name\": \"deserunt adipisicing ut amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        1\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "af2c6ad8-5774-40ab-9d94-55aba854e077",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim\",\n            \"properties\": {\n                \"name\": \"deserunt adipisicing ut amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        1\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ff3bd5f8-2ecb-43f7-a4d8-1b257cf2e67b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim\",\n            \"properties\": {\n                \"name\": \"deserunt adipisicing ut amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        1\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e493909f-4635-4ee6-9dc5-2a34761ab2b6",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "0ecce4ad-92fc-4c5b-8d5d-1572fd82848c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"labore voluptate\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"sint magna\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 92890796.03718674,\n      \"currency\": \"cillum commodo deserunt nisi\",\n      \"minCost\": -64940595.88751444,\n      \"minStayUntil\": \"consequat minim Lorem\",\n      \"canExtendUntil\": \"ullamco\",\n      \"pricedUntil\": \"ea occaecat voluptate anim\",\n      \"noReturnUntil\": \"cillum enim consequat\",\n      \"freeUntil\": \"irure\",\n      \"becomesFreeAt\": \"qui ad est incididunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       77773490,\n       37847482\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis ex id et\",\n      \"surcharge\": {\n       \"value\": -62260796.57598871,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -58494127\n       }\n      }\n     },\n     {\n      \"cost\": 20367319.20255752,\n      \"currency\": \"nulla ex in dolor\",\n      \"minCost\": 68828203.60864013,\n      \"minStayUntil\": \"sint laboris cupidatat ea\",\n      \"canExtendUntil\": \"do ut ipsum ad\",\n      \"pricedUntil\": \"commodo labore magna Ut\",\n      \"noReturnUntil\": \"reprehenderit\",\n      \"freeUntil\": \"deserunt proident eiusmod\",\n      \"becomesFreeAt\": \"dolor est amet\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -14487233,\n       -95711388\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt sed\",\n      \"surcharge\": {\n       \"value\": 61884127.31036231,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 84460586\n       }\n      }\n     }\n    ],\n    \"distance\": -29882731.94953704,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -74112065,\n      14772921\n     ]\n    },\n    \"entityETag\": \"veniam incididunt\"\n   },\n   {\n    \"entityId\": \"eu proident repre\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 95828081.43339348,\n      \"currency\": \"consectetur ut in\",\n      \"minCost\": -92218790.6935771,\n      \"minStayUntil\": \"est fugiat sunt cillum\",\n      \"canExtendUntil\": \"eu tempor\",\n      \"pricedUntil\": \"aliqua occaecat pariatur\",\n      \"noReturnUntil\": \"cupidatat ea in\",\n      \"freeUntil\": \"occaecat aliqua\",\n      \"becomesFreeAt\": \"ullamco exercitation ad occaecat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -13908870,\n       40928646\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia\",\n      \"surcharge\": {\n       \"value\": 147570.7335472554,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -9515792\n       }\n      }\n     },\n     {\n      \"cost\": 82101333.10702088,\n      \"currency\": \"eu qui voluptate\",\n      \"minCost\": 9304422.00985992,\n      \"minStayUntil\": \"Excepteur aute laboris quis\",\n      \"canExtendUntil\": \"cupidatat esse non ut\",\n      \"pricedUntil\": \"aliqu\",\n      \"noReturnUntil\": \"sint amet dolor\",\n      \"freeUntil\": \"amet nostrud\",\n      \"becomesFreeAt\": \"dolor aliqua enim quis\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -40919888,\n       -48830521\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ad minim deserunt\",\n      \"surcharge\": {\n       \"value\": 74958128.35758063,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59166908\n       }\n      }\n     }\n    ],\n    \"distance\": -2559772.074424416,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -70284457,\n      -4364863\n     ]\n    },\n    \"entityETag\": \"aute quis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cb351188-9f30-4a1e-88e3-eaf709ff5993",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "525b76ff-487c-4fd2-8b8c-54460f5237f9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7b8f0322-f9ad-457f-9a31-cf2b257fd259",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d23c3b9b-199f-4918-8f01-f8c87124dfba",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "897ea399-4b4b-421a-991a-aa95135f4c63",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla\",\n            \"properties\": {\n                \"name\": \"labore voluptate incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6e68a933-9cc6-496a-aea8-4c861f58005a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco officia in in Lorem\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"labore voluptate\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"sint magna\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 92890796.03718674,\n      \"currency\": \"cillum commodo deserunt nisi\",\n      \"minCost\": -64940595.88751444,\n      \"minStayUntil\": \"consequat minim Lorem\",\n      \"canExtendUntil\": \"ullamco\",\n      \"pricedUntil\": \"ea occaecat voluptate anim\",\n      \"noReturnUntil\": \"cillum enim consequat\",\n      \"freeUntil\": \"irure\",\n      \"becomesFreeAt\": \"qui ad est incididunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       77773490,\n       37847482\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis ex id et\",\n      \"surcharge\": {\n       \"value\": -62260796.57598871,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -58494127\n       }\n      }\n     },\n     {\n      \"cost\": 20367319.20255752,\n      \"currency\": \"nulla ex in dolor\",\n      \"minCost\": 68828203.60864013,\n      \"minStayUntil\": \"sint laboris cupidatat ea\",\n      \"canExtendUntil\": \"do ut ipsum ad\",\n      \"pricedUntil\": \"commodo labore magna Ut\",\n      \"noReturnUntil\": \"reprehenderit\",\n      \"freeUntil\": \"deserunt proident eiusmod\",\n      \"becomesFreeAt\": \"dolor est amet\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -14487233,\n       -95711388\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt sed\",\n      \"surcharge\": {\n       \"value\": 61884127.31036231,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 84460586\n       }\n      }\n     }\n    ],\n    \"distance\": -29882731.94953704,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -74112065,\n      14772921\n     ]\n    },\n    \"entityETag\": \"veniam incididunt\"\n   },\n   {\n    \"entityId\": \"eu proident repre\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 95828081.43339348,\n      \"currency\": \"consectetur ut in\",\n      \"minCost\": -92218790.6935771,\n      \"minStayUntil\": \"est fugiat sunt cillum\",\n      \"canExtendUntil\": \"eu tempor\",\n      \"pricedUntil\": \"aliqua occaecat pariatur\",\n      \"noReturnUntil\": \"cupidatat ea in\",\n      \"freeUntil\": \"occaecat aliqua\",\n      \"becomesFreeAt\": \"ullamco exercitation ad occaecat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -13908870,\n       40928646\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia\",\n      \"surcharge\": {\n       \"value\": 147570.7335472554,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -9515792\n       }\n      }\n     },\n     {\n      \"cost\": 82101333.10702088,\n      \"currency\": \"eu qui voluptate\",\n      \"minCost\": 9304422.00985992,\n      \"minStayUntil\": \"Excepteur aute laboris quis\",\n      \"canExtendUntil\": \"cupidatat esse non ut\",\n      \"pricedUntil\": \"aliqu\",\n      \"noReturnUntil\": \"sint amet dolor\",\n      \"freeUntil\": \"amet nostrud\",\n      \"becomesFreeAt\": \"dolor aliqua enim quis\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -40919888,\n       -48830521\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ad minim deserunt\",\n      \"surcharge\": {\n       \"value\": 74958128.35758063,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59166908\n       }\n      }\n     }\n    ],\n    \"distance\": -2559772.074424416,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -70284457,\n      -4364863\n     ]\n    },\n    \"entityETag\": \"aute quis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c097162e-0e8f-40da-bef8-a485bcf22524",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco officia in in Lorem\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b68c77c4-435c-468c-9a0e-2a0fab910d01",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco officia in in Lorem\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "343e4fd7-4069-4a2a-b614-5f7b8ccb3a43",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco officia in in Lorem\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bf5542c0-e46e-4e8c-a39c-592a43e127dd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco officia in in Lorem\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "91ed701e-e0af-4e79-8aa5-c10bae3d220f",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"quis labore ea\",\n            \"properties\": {\n                \"name\": \"sint dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "2adcb3dd-d1d9-4a00-a1d0-0b09a1a70188",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt adipisicing mollit aliqua\",\n            \"properties\": {\n                \"name\": \"id\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"aliqua in\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"eu est\",\n     \"crs\": {\n      \"type\": \"sint pariatur enim\",\n      \"properties\": {\n       \"name\": \"sint Ut elit \"\n      }\n     }\n    },\n    \"type\": \"ea sint\",\n    \"id\": \"in tempor id dolore\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"ut amet ex ad\",\n     \"crs\": {\n      \"type\": \"do mollit\",\n      \"properties\": {\n       \"name\": \"dolore\"\n      }\n     }\n    },\n    \"type\": \"adipisicing dolor labore tempor deserunt\",\n    \"id\": \"labore ut\"\n   }\n  ],\n  \"properties\": \"esse voluptate\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "16642482-eec8-43a4-91d3-8ab38b0db85b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt adipisicing mollit aliqua\",\n            \"properties\": {\n                \"name\": \"id\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b419808-b3d7-4598-8246-3a2971bc608d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt adipisicing mollit aliqua\",\n            \"properties\": {\n                \"name\": \"id\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8dd5602c-d5ac-4c00-b03c-b46800442204",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt adipisicing mollit aliqua\",\n            \"properties\": {\n                \"name\": \"id\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5a56db95-acd9-4aaa-a993-8b2ac99c7285",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt adipisicing mollit aliqua\",\n            \"properties\": {\n                \"name\": \"id\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ae9f37fa-a609-4d02-93c5-f157fb15f0a0",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed incididunt\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        11,\n        5\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "975b3314-037a-4628-b2b6-cd9a92cf4cec",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat\",\n            \"properties\": {\n                \"name\": \"ullamco magna dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        14,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"eiusmod non in\",\n    \"entityETag\": \"commodo ex sunt anim\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 7,\n      \"specialRestrictionTypeId\": -36435033,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt sed culpa aliquip\",\n        \"endTime\": \"ullamco in enim sunt\",\n        \"maxStay\": -43108934\n       },\n       {\n        \"startTime\": \"cillum nost\",\n        \"endTime\": \"commodo\",\n        \"maxStay\": -21218561\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 16,\n      \"specialRestrictionTypeId\": 91038148,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex sit\",\n        \"endTime\": \"eu sunt et\",\n        \"maxStay\": 4031\n       },\n       {\n        \"startTime\": \"eiusmod commodo nostrud cupidatat sed\",\n        \"endTime\": \"laboris nostrud tempor non\",\n        \"maxStay\": -73309929\n       }\n      ]\n     }\n    ],\n    \"distance\": 72471883.24286225\n   },\n   {\n    \"entityId\": \"e\",\n    \"entityETag\": \"officia culpa enim id\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 3,\n      \"specialRestrictionTypeId\": 32845969,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"officia veniam pariatur\",\n        \"endTime\": \"fugiat sint mollit pariatur\",\n        \"maxStay\": -75641713\n       },\n       {\n        \"startTime\": \"officia esse id\",\n        \"endTime\": \"qui pariatur \",\n        \"maxStay\": 63840817\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 12,\n      \"specialRestrictionTypeId\": 5957788,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud velit voluptate\",\n        \"endTime\": \"sint sunt dolor mollit\",\n        \"maxStay\": -36781302\n       },\n       {\n        \"startTime\": \"qui nulla mollit esse\",\n        \"endTime\": \"ex tempor\",\n        \"maxStay\": -91249631\n       }\n      ]\n     }\n    ],\n    \"distance\": -33239940.533214882\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"velit ut sunt qui in\",\n   \"entityETag\": \"culpa ad dolor irure ex\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 16,\n     \"specialRestrictionTypeId\": -96676324,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"aute esse ipsum anim\",\n       \"endTime\": \"ex irure mollit qui\",\n       \"maxStay\": -76509161\n      },\n      {\n       \"startTime\": \"laborum voluptate reprehenderit\",\n       \"endTime\": \"ea cupidatat et dolore\",\n       \"maxStay\": 72733219\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 3,\n     \"specialRestrictionTypeId\": -53058744,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"c\",\n       \"endTime\": \"ea sint\",\n       \"maxStay\": -20423996\n      },\n      {\n       \"startTime\": \"Duis reprehenderit\",\n       \"endTime\": \"enim eiusmod commodo Ut\",\n       \"maxStay\": -13820368\n      }\n     ]\n    }\n   ],\n   \"distance\": -80877529.0512937\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "15f4a6cd-1732-4c38-b1b6-c9962d6227c0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat\",\n            \"properties\": {\n                \"name\": \"ullamco magna dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        14,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"elit velit in incididunt dolore\",\n \"errors\": [\n  {\n   \"property\": \"in esse nostrud\",\n   \"code\": \"adipisicing Duis\",\n   \"message\": \"velit dolore cupidatat\"\n  },\n  {\n   \"property\": \"incididunt reprehenderit laborum consequat\",\n   \"code\": \"veniam culpa\",\n   \"message\": \"ex nostrud sint exercitation consectetur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ec08c937-d517-4e5d-9979-a7a2ed3675d4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat\",\n            \"properties\": {\n                \"name\": \"ullamco magna dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        14,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a42c3eec-f32b-4ef2-ae1b-086f808ee201",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat\",\n            \"properties\": {\n                \"name\": \"ullamco magna dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        14,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c1604294-a494-4f19-99da-a0654364243f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat\",\n            \"properties\": {\n                \"name\": \"ullamco magna dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        14,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "dc5dca80-03bd-4abf-9934-25e287dd493c",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "d8302803-c19c-4c44-8753-7cb8e6453d61",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2436ca91-e3af-45f2-8a85-213902c4628f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "28c80983-77eb-4b44-a2d8-b97371333b87",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a76a888a-a6c9-47bb-a2a4-ed9ddc481879",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "f812c75d-da35-4ed5-a75d-a0b7ca2e153e",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
