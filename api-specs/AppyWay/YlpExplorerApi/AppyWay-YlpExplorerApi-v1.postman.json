{
  "item": [
    {
      "id": "597fe038-f45e-4ecf-aee1-d9472878a1dd",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f24ef4b1-022e-4955-81f7-80411e62a818",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"voluptate aliqua proident\"\n   },\n   {\n    \"message\": \"adipisicing dolore ut elit in\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"proident dolor cillum ut\",\n    \"cardPaymentsExternalUrl\": \"in est aliqua\",\n    \"paymentsTelephone\": \"culpa\"\n   },\n   {\n    \"name\": \"est ut\",\n    \"cardPaymentsExternalUrl\": \"tempor esse\",\n    \"paymentsTelephone\": \"Excepteur est\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"officia quis\",\n     \"crs\": {\n      \"type\": \"ipsum aliquip\",\n      \"properties\": {\n       \"name\": \"exercitation incididunt commodo mollit\"\n      }\n     }\n    },\n    {\n     \"type\": \"ipsum ea\",\n     \"crs\": {\n      \"type\": \"culpa Duis cillum sunt\",\n      \"properties\": {\n       \"name\": \"veniam minim sunt reprehenderit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"laborum dolore Excepteur\",\n   \"crs\": {\n    \"type\": \"eiusmod nisi\",\n    \"properties\": {\n     \"name\": \"non Excepteur aliquip aliqua est\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"sint Lorem laborum consectetur\",\n  \"name\": \"officia sit in\",\n  \"eTag\": \"Duis consectetur quis consequat in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a9e243a7-5bee-40f6-ade0-cab42ae214af",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "70f1d604-8e79-4fe1-8fa2-1c3791a398a4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e54854bc-e4d6-47dc-b26f-3a1de8093475",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur irure\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "58e4299b-faaf-43e2-a604-2ebc83a63cf9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6555dc4a-79c6-484b-92b8-38a603f58268",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "9212425f-b47b-4e72-8677-c87b3c98bdfe",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"sunt\",\n     \"city\": \"eu\",\n     \"country\": \"cupidatat nulla\",\n     \"postcode\": \"consequat officia veniam\"\n    },\n    \"locationCode\": \"veniam fugiat Ut\",\n    \"totalCapacity\": 33322496,\n    \"zoneId\": \"occaecat\",\n    \"authorityId\": \"Excepteur \",\n    \"features\": {\n     \"type\": \"dolore\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Lorem\",\n          \"crs\": {\n           \"type\": \"do amet aliquip\",\n           \"properties\": {\n            \"name\": \"reprehenderit nulla aliquip\"\n           }\n          }\n         },\n         {\n          \"type\": \"in\",\n          \"crs\": {\n           \"type\": \"culpa reprehenderit cupidatat fugiat\",\n           \"properties\": {\n            \"name\": \"incididunt consequat\"\n           }\n          }\n         }\n        ],\n        \"type\": \"quis sed\",\n        \"crs\": {\n         \"type\": \"irure d\",\n         \"properties\": {\n          \"name\": \"dolore\"\n         }\n        }\n       },\n       \"type\": \"sint proident commodo\",\n       \"id\": \"est mollit nulla\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Excepteur\",\n          \"crs\": {\n           \"type\": \"elit eiusmod do\",\n           \"properties\": {\n            \"name\": \"officia ad\"\n           }\n          }\n         },\n         {\n          \"type\": \"Lorem adipisicing\",\n          \"crs\": {\n           \"type\": \"dolore qui\",\n           \"properties\": {\n            \"name\": \"amet qui Lorem laborum\"\n           }\n          }\n         }\n        ],\n        \"type\": \"Ut in dolor\",\n        \"crs\": {\n         \"type\": \"sit sint\",\n         \"properties\": {\n          \"name\": \"fugiat ut\"\n         }\n        }\n       },\n       \"type\": \"id\",\n       \"id\": \"est eu\"\n      }\n     ],\n     \"properties\": \"Duis\"\n    },\n    \"paymentMethodIds\": [\n     -48449265,\n     -67567223\n    ],\n    \"entityId\": \"ut adipisicing\",\n    \"entityType\": 2,\n    \"name\": \"ipsum veniam aliqua\",\n    \"eTag\": \"Ut consectetur quis amet \"\n   },\n   {\n    \"address\": {\n     \"street\": \"non\",\n     \"city\": \"est amet ipsum\",\n     \"country\": \"culpa reprehenderit\",\n     \"postcode\": \"Lorem Ut dolore\"\n    },\n    \"locationCode\": \"ut pariatur do\",\n    \"totalCapacity\": -6106770,\n    \"zoneId\": \"laboris in ex sed\",\n    \"authorityId\": \"tempor pariatur eu est Duis\",\n    \"features\": {\n     \"type\": \"reprehenderit consectetur\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"aliquip fugiat dolore pariatur cillum\",\n          \"crs\": {\n           \"type\": \"in sed laboris\",\n           \"properties\": {\n            \"name\": \"proident aute non sint in\"\n           }\n          }\n         },\n         {\n          \"type\": \"nulla eiusmod\",\n          \"crs\": {\n           \"type\": \"eu commodo\",\n           \"properties\": {\n            \"name\": \"fugiat\"\n           }\n          }\n         }\n        ],\n        \"type\": \"enim ipsum aliquip nisi\",\n        \"crs\": {\n         \"type\": \"id veniam non\",\n         \"properties\": {\n          \"name\": \"ut mollit\"\n         }\n        }\n       },\n       \"type\": \"dolore sit tempor\",\n       \"id\": \"qui amet\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"exercitation commodo proident incididunt reprehenderit\",\n          \"crs\": {\n           \"type\": \"sint reprehenderit laborum in\",\n           \"properties\": {\n            \"name\": \"ut sunt consectetur dolor\"\n           }\n          }\n         },\n         {\n          \"type\": \"enim ipsum elit non minim\",\n          \"crs\": {\n           \"type\": \"nulla ut cupidatat\",\n           \"properties\": {\n            \"name\": \"nulla exercitation\"\n           }\n          }\n         }\n        ],\n        \"type\": \"ullamco\",\n        \"crs\": {\n         \"type\": \"aute ea\",\n         \"properties\": {\n          \"name\": \"commodo eu in ips\"\n         }\n        }\n       },\n       \"type\": \"quis sint aliquip irure\",\n       \"id\": \"exerci\"\n      }\n     ],\n     \"properties\": \"dolore nisi dolor non\"\n    },\n    \"paymentMethodIds\": [\n     27587221,\n     70671452\n    ],\n    \"entityId\": \"la\",\n    \"entityType\": 4,\n    \"name\": \"Duis culpa fugiat\",\n    \"eTag\": \"in aliquip\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"laboris eu\",\n       \"crs\": {\n        \"type\": \"anim fugiat eu\",\n        \"properties\": {\n         \"name\": \"quis in ea\"\n        }\n       }\n      },\n      {\n       \"type\": \"eiusmod in\",\n       \"crs\": {\n        \"type\": \"laborum aliquip aliqua aute\",\n        \"properties\": {\n         \"name\": \"dolor aute\"\n        }\n       }\n      }\n     ],\n     \"type\": \"officia dolore\",\n     \"crs\": {\n      \"type\": \"Lorem est\",\n      \"properties\": {\n       \"name\": \"eu incididunt esse nulla eiusmod\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"mollit\"\n     },\n     {\n      \"message\": \"dolor Excepteur aliquip\"\n     }\n    ],\n    \"authorityId\": \"nostrud mollit enim\",\n    \"zoneType\": 5,\n    \"entityType\": 4,\n    \"entityId\": \"laborum laboris\",\n    \"name\": \"in aute Duis nostrud\",\n    \"eTag\": \"ullamco\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"veniam culpa exercitation Duis\",\n       \"crs\": {\n        \"type\": \"\",\n        \"properties\": {\n         \"name\": \"fugiat eiusmod anim\"\n        }\n       }\n      },\n      {\n       \"type\": \"exercitation voluptate\",\n       \"crs\": {\n        \"type\": \"consequat officia\",\n        \"properties\": {\n         \"name\": \"amet reprehenderit\"\n        }\n       }\n      }\n     ],\n     \"type\": \"velit in anim\",\n     \"crs\": {\n      \"type\": \"irure elit consectetur nostrud enim\",\n      \"properties\": {\n       \"name\": \"in anim dolore\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"Duis id Excepteur pariatur\"\n     },\n     {\n      \"message\": \"iru\"\n     }\n    ],\n    \"authorityId\": \"id Duis\",\n    \"zoneType\": 10,\n    \"entityType\": 2,\n    \"entityId\": \"enim aute cupidatat ad\",\n    \"name\": \"quis nulla laboris aute\",\n    \"eTag\": \"laborum qui amet\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"do dolore\"\n     },\n     {\n      \"message\": \"pariatur aliqua\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"in do irure ea\",\n      \"cardPaymentsExternalUrl\": \"esse dolor\",\n      \"paymentsTelephone\": \"labore reprehenderit eu culpa\"\n     },\n     {\n      \"name\": \"aute consectetur\",\n      \"cardPaymentsExternalUrl\": \"culpa\",\n      \"paymentsTelephone\": \"Duis in eu non\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"est eu aute ea\",\n       \"crs\": {\n        \"type\": \"in veniam\",\n        \"properties\": {\n         \"name\": \"mollit Excepteur ex sed\"\n        }\n       }\n      },\n      {\n       \"type\": \"mollit Excepteur laborum\",\n       \"crs\": {\n        \"type\": \"in\",\n        \"properties\": {\n         \"name\": \"dolore eiusmod dolor anim ex\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ex\",\n     \"crs\": {\n      \"type\": \"velit aliquip irure Lorem\",\n      \"properties\": {\n       \"name\": \"dolor officia irure nisi\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"laborum dolore Duis\",\n    \"name\": \"sit dolore ex\",\n    \"eTag\": \"eu nisi Lorem\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"voluptate cillum consectetur\"\n     },\n     {\n      \"message\": \"ut ea dolore in Ut\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"est sunt eu cillum\",\n      \"cardPaymentsExternalUrl\": \"Lorem\",\n      \"paymentsTelephone\": \"dol\"\n     },\n     {\n      \"name\": \"do pariatur ad ut culpa\",\n      \"cardPaymentsExternalUrl\": \"do nulla\",\n      \"paymentsTelephone\": \"Duis in consequat eu magna\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"id in ipsum\",\n       \"crs\": {\n        \"type\": \"aute quis tempor mollit\",\n        \"properties\": {\n         \"name\": \"tempor\"\n        }\n       }\n      },\n      {\n       \"type\": \"irure ullamco\",\n       \"crs\": {\n        \"type\": \"sit fugiat\",\n        \"properties\": {\n         \"name\": \"eiusmod\"\n        }\n       }\n      }\n     ],\n     \"type\": \"veniam fugiat in\",\n     \"crs\": {\n      \"type\": \"amet ullamco\",\n      \"properties\": {\n       \"name\": \"sit\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"sunt Excepteur occaecat\",\n    \"name\": \"velit id\",\n    \"eTag\": \"eu in adipisicing officia laboris\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1c9f0711-1a45-4b75-b8c5-11263ebfa6d0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"et sint voluptate \",\n \"errors\": [\n  {\n   \"property\": \"sit aute\",\n   \"code\": \"aliquip qui\",\n   \"message\": \"amet Ut anim aliquip veniam\"\n  },\n  {\n   \"property\": \"nostrud\",\n   \"code\": \"veniam sed aute\",\n   \"message\": \"sunt quis D\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8a33fbc2-c67a-440e-be1d-34bfde87722a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f4919ac3-4486-4758-9361-3d8a5975c1c6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f532ae5b-dfc1-4776-84dd-1cf031e44dd3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "adb31c5a-2ed7-4391-a705-31af581741e4",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3e3e63e6-4bbf-4cf1-957a-47bbf53b7953",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"fugiat tempor velit\",\n   \"city\": \"minim laboris in culpa magna\",\n   \"country\": \"ipsum velit est\",\n   \"postcode\": \"eiusmod dolore labore ut\"\n  },\n  \"locationCode\": \"ut Lorem dolor magna dolore\",\n  \"totalCapacity\": 14365472,\n  \"zoneId\": \"enim\",\n  \"authorityId\": \"enim\",\n  \"features\": {\n   \"type\": \"exercitation ex\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"incididunt dolore in\",\n        \"crs\": {\n         \"type\": \"Lorem\",\n         \"properties\": {\n          \"name\": \"minim \"\n         }\n        }\n       },\n       {\n        \"type\": \"sit officia\",\n        \"crs\": {\n         \"type\": \"incididunt consectetur ad\",\n         \"properties\": {\n          \"name\": \"labore in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"velit magna sunt deserunt Duis\",\n      \"crs\": {\n       \"type\": \"fugiat\",\n       \"properties\": {\n        \"name\": \"adipisicing consequat voluptate\"\n       }\n      }\n     },\n     \"type\": \"voluptate qui enim ullamco\",\n     \"id\": \"enim sint do ali\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"labore reprehenderit\",\n        \"crs\": {\n         \"type\": \"non Excepteur\",\n         \"properties\": {\n          \"name\": \"nulla mollit proident id\"\n         }\n        }\n       },\n       {\n        \"type\": \"ad pariatur ut sed\",\n        \"crs\": {\n         \"type\": \"Excepteur\",\n         \"properties\": {\n          \"name\": \"culpa su\"\n         }\n        }\n       }\n      ],\n      \"type\": \"cupidatat ipsum tempor\",\n      \"crs\": {\n       \"type\": \"Ut tempor fugiat\",\n       \"properties\": {\n        \"name\": \"laborum laboris ipsum\"\n       }\n      }\n     },\n     \"type\": \"Excepteur minim elit\",\n     \"id\": \"occaecat\"\n    }\n   ],\n   \"properties\": \"proident mollit tempor commodo\"\n  },\n  \"paymentMethodIds\": [\n   76193306,\n   63870039\n  ],\n  \"entityId\": \"reprehenderit id\",\n  \"entityType\": 4,\n  \"name\": \"consectetur occaecat\",\n  \"eTag\": \"mollit sit occaecat ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0e23a545-6c9d-4c45-a3ea-4bf90d900c30",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b09e1906-dad2-4a7d-9203-2f0acf541651",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dda62178-adff-4611-8de5-4bfe5c358d42",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur irure\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4a1a5d6e-2214-4934-a953-09e3e1ddfaec",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6a5798fb-4959-4e98-a495-7585b7031fc4",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6e09926a-f394-4e91-8df0-b39b4c35635e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"dolor\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": -37045342.89432364,\n    \"currency\": \"offic\",\n    \"minCost\": -37732869.688487194,\n    \"minStayUntil\": \"eu sed\",\n    \"canExtendUntil\": \"ipsum \",\n    \"pricedUntil\": \"nulla veniam ips\",\n    \"noReturnUntil\": \"consequat u\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     54537299,\n     37787108\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"eiusmod in adipisicing\",\n    \"surcharge\": {\n     \"value\": -54306891.432986505,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 23387823\n     }\n    }\n   },\n   {\n    \"cost\": -25166961.251210555,\n    \"currency\": \"aliqua conseq\",\n    \"minCost\": -14447927.352252156,\n    \"minStayUntil\": \"elit quis aliquip\",\n    \"canExtendUntil\": \"pariatur sit cupidatat culpa\",\n    \"pricedUntil\": \"in\",\n    \"noReturnUntil\": \"laboris\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -28281260,\n     -9485927\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"nisi\",\n    \"surcharge\": {\n     \"value\": -94626934.11933634,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -28568870\n     }\n    }\n   }\n  ],\n  \"distance\": 98452917.3879602,\n  \"parkingAllowed\": 3,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -49432376,\n    15340869\n   ]\n  },\n  \"entityETag\": \"in nulla sit deserunt\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3631b5e6-8946-43d6-810c-5232fd937831",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6852082d-df5c-4f8b-8458-65967d9a362d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6e736f86-6472-4037-ab2f-2b746601ca1f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur irure\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "214f7652-c284-4979-9a7e-621bc6ab7cd4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2c7799db-d0ac-4aa2-856c-f594bd2545da",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "f8c21cef-7fd0-423f-8a1a-82f6fc5754b0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"aliquip sed est amet\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"sed minim occaecat mollit\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 47727336.74181056,\n      \"currency\": \"nostrud anim proident velit\",\n      \"minCost\": -71471595.84980711,\n      \"minStayUntil\": \"anim minim id\",\n      \"canExtendUntil\": \"ad aute labore tempor irure\",\n      \"pricedUntil\": \"Duis \",\n      \"noReturnUntil\": \"aliquip Excepteur in ut\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -1386853,\n       -25053885\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"culpa\",\n      \"surcharge\": {\n       \"value\": 8317407.73280862,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 39381441\n       }\n      }\n     },\n     {\n      \"cost\": -11827854.991261065,\n      \"currency\": \"occaecat\",\n      \"minCost\": 36901608.0032385,\n      \"minStayUntil\": \"irure eu magna\",\n      \"canExtendUntil\": \"laboris Ut sit id\",\n      \"pricedUntil\": \"reprehenderit officia\",\n      \"noReturnUntil\": \"incididunt commodo\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -55121802,\n       -16171608\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"mollit ad est\",\n      \"surcharge\": {\n       \"value\": 78958297.43160635,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 95566078\n       }\n      }\n     }\n    ],\n    \"distance\": 12878282.002666801,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -83228784,\n      -51312535\n     ]\n    },\n    \"entityETag\": \"sint velit\"\n   },\n   {\n    \"entityId\": \"qui nulla labore officia\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -23362257.70231594,\n      \"currency\": \"anim\",\n      \"minCost\": 99559158.31350207,\n      \"minStayUntil\": \"nulla velit\",\n      \"canExtendUntil\": \"ve\",\n      \"pricedUntil\": \"dolore Ut Lorem\",\n      \"noReturnUntil\": \"sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       60614870,\n       3875312\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat velit veniam tempor\",\n      \"surcharge\": {\n       \"value\": 13676003.266775936,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -98620090\n       }\n      }\n     },\n     {\n      \"cost\": 49859668.85136482,\n      \"currency\": \"nulla ipsum dolor\",\n      \"minCost\": 72923424.0333012,\n      \"minStayUntil\": \"occaecat ipsum\",\n      \"canExtendUntil\": \"sed dolor occaecat\",\n      \"pricedUntil\": \"tempor occaecat\",\n      \"noReturnUntil\": \"ullamco dolore mollit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -42626661,\n       -16793848\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"proident Excepteur laboris magna ut\",\n      \"surcharge\": {\n       \"value\": -37219831.73528409,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -54206291\n       }\n      }\n     }\n    ],\n    \"distance\": 92036166.75654042,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      60112417,\n      -57509707\n     ]\n    },\n    \"entityETag\": \"Excepteur sed\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "abbd28af-8aed-4968-b87b-e4b49dd84909",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "956678e4-5bfa-4158-a23c-526ee0b35890",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cc0839b5-3ca3-492b-9ac2-5b3389ad51ee",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "61fb09be-d10a-4fc5-919b-3a9bf7f07047",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "2174bb1c-085c-4348-aa9e-64f2b09903ae",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"non proident consectetur aliquip e\",\n    \"cardPaymentsExternalUrl\": \"aute in mollit deserunt officia\",\n    \"paymentsTelephone\": \"in commodo consectetur ullamco\"\n   },\n   {\n    \"name\": \"laborum sit\",\n    \"cardPaymentsExternalUrl\": \"quis nulla aliqua dolore\",\n    \"paymentsTelephone\": \"do deserunt sint\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "12df425d-8e4e-4889-81f2-ff536932e588",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dbe4cbde-e9f2-4c9a-a7dc-3ac9ca897ff3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "465cf9c0-ad90-4e1d-9bd7-023c0aafa264",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur irure\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "888dd486-d033-4637-be53-b1e5a6760d28",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7ec86cc8-122a-403e-a428-b92590acb135",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3950bb39-c685-43fa-a40a-bec0db0bc5dd",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"m\",\n     \"crs\": {\n      \"type\": \"Ut laborum deserunt fugiat ea\",\n      \"properties\": {\n       \"name\": \"quis incididunt aliqua officia sint\"\n      }\n     }\n    },\n    {\n     \"type\": \"velit minim\",\n     \"crs\": {\n      \"type\": \"voluptate dolore culpa eiusmod cupidatat\",\n      \"properties\": {\n       \"name\": \"pariatur sunt id sed\"\n      }\n     }\n    }\n   ],\n   \"type\": \"quis\",\n   \"crs\": {\n    \"type\": \"consectetur Duis laborum Lorem in\",\n    \"properties\": {\n     \"name\": \"aute Duis laborum cillum do\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"aliqua fugiat elit\"\n   },\n   {\n    \"message\": \"id laboris dolor\"\n   }\n  ],\n  \"authorityId\": \"id sed\",\n  \"zoneType\": 9,\n  \"entityType\": 2,\n  \"entityId\": \"ad laboris elit sit adipisicing\",\n  \"name\": \"aute incididunt\",\n  \"eTag\": \"nulla Ut voluptate velit\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dced30ee-15fc-4e2a-97ef-806fb6b7e545",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e44789b0-2329-4cde-ab8d-6c9157b2d6fd",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3e1c866b-a9d6-4009-88a2-39478cd4fbf0",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Excepteur irure\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d2964a15-b1f9-49a2-b9b7-ee4859ce61e9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b7c21e8d-40a6-4144-a382-70b902770268",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute laborum anim veniam\",\n            \"properties\": {\n                \"name\": \"reprehenderit\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "0d27e526-0aee-41e2-b9f4-d2482c8f0fe3",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do quis voluptat\",\n            \"properties\": {\n                \"name\": \"in dolore fugiat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ex dolor Lorem esse l\",\n    \"entityETag\": \"proident voluptate aliquip nostrud\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -1653007,\n      \"specialRestrictionTypeId\": 17836608,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sint sunt\",\n        \"endTime\": \"nisi\",\n        \"maxStay\": -82064466\n       },\n       {\n        \"startTime\": \"do voluptate deserunt sint\",\n        \"endTime\": \"irure ea adipisicing\",\n        \"maxStay\": -20383667\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -87668134,\n      \"specialRestrictionTypeId\": -16070386,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed\",\n        \"endTime\": \"voluptat\",\n        \"maxStay\": 16908420\n       },\n       {\n        \"startTime\": \"qui mollit irure dolore\",\n        \"endTime\": \"ad laboris et\",\n        \"maxStay\": 73731179\n       }\n      ]\n     }\n    ],\n    \"distance\": 57455280.11757544\n   },\n   {\n    \"entityId\": \"aliqua\",\n    \"entityETag\": \"sed nulla sit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 26893335,\n      \"specialRestrictionTypeId\": -98373051,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis officia est\",\n        \"endTime\": \"in\",\n        \"maxStay\": -73897780\n       },\n       {\n        \"startTime\": \"in ut\",\n        \"endTime\": \"reprehenderit dolor id dolor\",\n        \"maxStay\": -11295450\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -82562871,\n      \"specialRestrictionTypeId\": 60344182,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"proident enim voluptate\",\n        \"endTime\": \"in\",\n        \"maxStay\": -84821089\n       },\n       {\n        \"startTime\": \"laborum\",\n        \"endTime\": \"minim laboris Ut dolore\",\n        \"maxStay\": -80172302\n       }\n      ]\n     }\n    ],\n    \"distance\": -59148950.65779189\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"des\",\n   \"entityETag\": \"qui irure reprehenderit\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -86393537,\n     \"specialRestrictionTypeId\": 77466676,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"proident laborum\",\n       \"endTime\": \"cupidatat commodo occaecat\",\n       \"maxStay\": -524561\n      },\n      {\n       \"startTime\": \"qui Ut ipsum\",\n       \"endTime\": \"dolor magna dolore\",\n       \"maxStay\": -89205274\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 96354796,\n     \"specialRestrictionTypeId\": -39360261,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"officia sed tempor\",\n       \"endTime\": \"pariatur eiusmod anim\",\n       \"maxStay\": -29250812\n      },\n      {\n       \"startTime\": \"exercitation tempor\",\n       \"endTime\": \"ea culpa\",\n       \"maxStay\": 8924291\n      }\n     ]\n    }\n   ],\n   \"distance\": -2496755.891204521\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6039398b-9596-4b80-866f-6242f02e020d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do quis voluptat\",\n            \"properties\": {\n                \"name\": \"in dolore fugiat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a95f89e3-74c5-40aa-bf6c-9a5faf4f6b4a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do quis voluptat\",\n            \"properties\": {\n                \"name\": \"in dolore fugiat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f8b86fe2-a773-4a31-a609-7235c3f989c2",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do quis voluptat\",\n            \"properties\": {\n                \"name\": \"in dolore fugiat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dc83fff8-9411-42ad-ba4e-7ea6aa7ced42",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do quis voluptat\",\n            \"properties\": {\n                \"name\": \"in dolore fugiat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "44271f35-2c2e-4342-8942-845abccd604d",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "1b7d3cf3-7211-49e3-97f3-7ceb4f6a537f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nisi dolor pariatur voluptate Ut\",\n      \"city\": \"cupidatat Excepteur ea exercitation\",\n      \"country\": \"consectetur laborum\",\n      \"postcode\": \"in laborum\"\n     },\n     \"locationCode\": \"minim labore \",\n     \"totalCapacity\": -15157811,\n     \"zoneId\": \"id voluptate adipisicing sint qui\",\n     \"authorityId\": \"Duis id esse proident exercitation\",\n     \"features\": {\n      \"type\": \"labore\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"reprehenderit occaecat in\",\n           \"crs\": {\n            \"type\": \"anim mollit proident Lorem\",\n            \"properties\": {\n             \"name\": \"dolore ad dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"do ea deserunt ut\",\n           \"crs\": {\n            \"type\": \"do culpa reprehenderit ullamco\",\n            \"properties\": {\n             \"name\": \"magna Lorem\"\n            }\n           }\n          }\n         ],\n         \"type\": \"mollit tempor proident deserunt eiusmod\",\n         \"crs\": {\n          \"type\": \"irure voluptate in enim\",\n          \"properties\": {\n           \"name\": \"qui laborum fugiat laboris\"\n          }\n         }\n        },\n        \"type\": \"sit fugiat\",\n        \"id\": \"Ut sint\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore laborum ex dolore consectetur\",\n           \"crs\": {\n            \"type\": \"id consequat culpa do non\",\n            \"properties\": {\n             \"name\": \"dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"sit consequat quis anim reprehenderit\",\n           \"crs\": {\n            \"type\": \"ipsum nulla reprehenderit\",\n            \"properties\": {\n             \"name\": \"non Excepteur consectetur aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"irure dolore ullamco ipsum incididunt\",\n         \"crs\": {\n          \"type\": \"nisi do dolore\",\n          \"properties\": {\n           \"name\": \"ex sed adipisicing magna\"\n          }\n         }\n        },\n        \"type\": \"eu anim elit\",\n        \"id\": \"dolor sed Duis labore\"\n       }\n      ],\n      \"properties\": \"laboris sint reprehenderit Duis\"\n     },\n     \"paymentMethodIds\": [\n      -68082304,\n      79863113\n     ],\n     \"entityId\": \"dolor labore ut\",\n     \"entityType\": 4,\n     \"name\": \"sint ex\",\n     \"eTag\": \"minim\"\n    },\n    \"distance\": 94140446.79630291\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"minim\",\n      \"city\": \"sed velit adipisicing commodo\",\n      \"country\": \"Lorem proident ut\",\n      \"postcode\": \"elit ut sunt qui occaecat\"\n     },\n     \"locationCode\": \"irure Ut nostrud consectetur\",\n     \"totalCapacity\": -80326047,\n     \"zoneId\": \"est elit\",\n     \"authorityId\": \"veniam\",\n     \"features\": {\n      \"type\": \"ipsum veniam\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt sit\",\n           \"crs\": {\n            \"type\": \"mollit fugiat sed aliquip\",\n            \"properties\": {\n             \"name\": \"nostrud aliqua\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur sunt\",\n           \"crs\": {\n            \"type\": \"elit irure ut Lorem\",\n            \"properties\": {\n             \"name\": \"cupidatat ullamco ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in Ut anim la\",\n         \"crs\": {\n          \"type\": \"eiusmod dolore in sunt\",\n          \"properties\": {\n           \"name\": \"ipsum et dolor officia\"\n          }\n         }\n        },\n        \"type\": \"fugiat non\",\n        \"id\": \"est cupidatat Duis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor ullamco reprehenderit\",\n           \"crs\": {\n            \"type\": \"aliquip incididunt do eu\",\n            \"properties\": {\n             \"name\": \"dolor dolor Ut nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"pariatur ipsum in non\",\n           \"crs\": {\n            \"type\": \"est irure ipsum nulla\",\n            \"properties\": {\n             \"name\": \"in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"occaecat ut f\",\n         \"crs\": {\n          \"type\": \"veniam reprehenderit enim\",\n          \"properties\": {\n           \"name\": \"labore dolore esse exercitation ea\"\n          }\n         }\n        },\n        \"type\": \"est quis magna\",\n        \"id\": \"ea Ut\"\n       }\n      ],\n      \"properties\": \"fugiat\"\n     },\n     \"paymentMethodIds\": [\n      22438146,\n      82086856\n     ],\n     \"entityId\": \"consectetur adipisicing reprehenderit\",\n     \"entityType\": 1,\n     \"name\": \"dolore\",\n     \"eTag\": \"Lorem officia\"\n    },\n    \"distance\": -37820713.05001931\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "218cb6ae-06de-41a2-ad5a-743a955805fd",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d03b04a8-48b6-471b-a374-39e39ec53092",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "379d50c5-2ef8-4ace-9600-cd916b7582d6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "47a453bb-74f9-4006-a057-81c7f911bd12",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c189b9ea-c796-4b06-8f81-00578e08ebe9",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut sint esse non\",\n            \"properties\": {\n                \"name\": \"velit sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "d2b44a99-9725-4518-85a6-1cfc0edafd42",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat dolor\",\n            \"properties\": {\n                \"name\": \"voluptate aliquip ex Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nisi dolor pariatur voluptate Ut\",\n      \"city\": \"cupidatat Excepteur ea exercitation\",\n      \"country\": \"consectetur laborum\",\n      \"postcode\": \"in laborum\"\n     },\n     \"locationCode\": \"minim labore \",\n     \"totalCapacity\": -15157811,\n     \"zoneId\": \"id voluptate adipisicing sint qui\",\n     \"authorityId\": \"Duis id esse proident exercitation\",\n     \"features\": {\n      \"type\": \"labore\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"reprehenderit occaecat in\",\n           \"crs\": {\n            \"type\": \"anim mollit proident Lorem\",\n            \"properties\": {\n             \"name\": \"dolore ad dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"do ea deserunt ut\",\n           \"crs\": {\n            \"type\": \"do culpa reprehenderit ullamco\",\n            \"properties\": {\n             \"name\": \"magna Lorem\"\n            }\n           }\n          }\n         ],\n         \"type\": \"mollit tempor proident deserunt eiusmod\",\n         \"crs\": {\n          \"type\": \"irure voluptate in enim\",\n          \"properties\": {\n           \"name\": \"qui laborum fugiat laboris\"\n          }\n         }\n        },\n        \"type\": \"sit fugiat\",\n        \"id\": \"Ut sint\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore laborum ex dolore consectetur\",\n           \"crs\": {\n            \"type\": \"id consequat culpa do non\",\n            \"properties\": {\n             \"name\": \"dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"sit consequat quis anim reprehenderit\",\n           \"crs\": {\n            \"type\": \"ipsum nulla reprehenderit\",\n            \"properties\": {\n             \"name\": \"non Excepteur consectetur aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"irure dolore ullamco ipsum incididunt\",\n         \"crs\": {\n          \"type\": \"nisi do dolore\",\n          \"properties\": {\n           \"name\": \"ex sed adipisicing magna\"\n          }\n         }\n        },\n        \"type\": \"eu anim elit\",\n        \"id\": \"dolor sed Duis labore\"\n       }\n      ],\n      \"properties\": \"laboris sint reprehenderit Duis\"\n     },\n     \"paymentMethodIds\": [\n      -68082304,\n      79863113\n     ],\n     \"entityId\": \"dolor labore ut\",\n     \"entityType\": 4,\n     \"name\": \"sint ex\",\n     \"eTag\": \"minim\"\n    },\n    \"distance\": 94140446.79630291\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"minim\",\n      \"city\": \"sed velit adipisicing commodo\",\n      \"country\": \"Lorem proident ut\",\n      \"postcode\": \"elit ut sunt qui occaecat\"\n     },\n     \"locationCode\": \"irure Ut nostrud consectetur\",\n     \"totalCapacity\": -80326047,\n     \"zoneId\": \"est elit\",\n     \"authorityId\": \"veniam\",\n     \"features\": {\n      \"type\": \"ipsum veniam\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt sit\",\n           \"crs\": {\n            \"type\": \"mollit fugiat sed aliquip\",\n            \"properties\": {\n             \"name\": \"nostrud aliqua\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur sunt\",\n           \"crs\": {\n            \"type\": \"elit irure ut Lorem\",\n            \"properties\": {\n             \"name\": \"cupidatat ullamco ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in Ut anim la\",\n         \"crs\": {\n          \"type\": \"eiusmod dolore in sunt\",\n          \"properties\": {\n           \"name\": \"ipsum et dolor officia\"\n          }\n         }\n        },\n        \"type\": \"fugiat non\",\n        \"id\": \"est cupidatat Duis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor ullamco reprehenderit\",\n           \"crs\": {\n            \"type\": \"aliquip incididunt do eu\",\n            \"properties\": {\n             \"name\": \"dolor dolor Ut nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"pariatur ipsum in non\",\n           \"crs\": {\n            \"type\": \"est irure ipsum nulla\",\n            \"properties\": {\n             \"name\": \"in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"occaecat ut f\",\n         \"crs\": {\n          \"type\": \"veniam reprehenderit enim\",\n          \"properties\": {\n           \"name\": \"labore dolore esse exercitation ea\"\n          }\n         }\n        },\n        \"type\": \"est quis magna\",\n        \"id\": \"ea Ut\"\n       }\n      ],\n      \"properties\": \"fugiat\"\n     },\n     \"paymentMethodIds\": [\n      22438146,\n      82086856\n     ],\n     \"entityId\": \"consectetur adipisicing reprehenderit\",\n     \"entityType\": 1,\n     \"name\": \"dolore\",\n     \"eTag\": \"Lorem officia\"\n    },\n    \"distance\": -37820713.05001931\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "daf5708b-871d-453c-b660-3330c2630cda",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat dolor\",\n            \"properties\": {\n                \"name\": \"voluptate aliquip ex Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c03fce9c-6e8e-461d-bb0a-b4726a0a5dd0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat dolor\",\n            \"properties\": {\n                \"name\": \"voluptate aliquip ex Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6298c0af-442b-42b0-bf01-f6c5edbff303",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat dolor\",\n            \"properties\": {\n                \"name\": \"voluptate aliquip ex Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bcf0e7d3-90e4-475c-8922-a5c2e62edbf1",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat dolor\",\n            \"properties\": {\n                \"name\": \"voluptate aliquip ex Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ce890141-91f7-4613-8a54-be836d15d59f",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "473bd687-e72d-4b4f-90a6-c521b974fa07",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"dolor tempor id et\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"deserunt magna irure consectetur\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -32907221.543462664,\n      \"currency\": \"adipisicing in reprehenderit minim\",\n      \"minCost\": 43305974.37911114,\n      \"minStayUntil\": \"voluptate enim nostrud ea dol\",\n      \"canExtendUntil\": \"sint in ipsum dolor\",\n      \"pricedUntil\": \"dolore consequat in veniam sed\",\n      \"noReturnUntil\": \"officia Lorem voluptat\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       92485379,\n       -26994547\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"reprehenderit commodo labore esse\",\n      \"surcharge\": {\n       \"value\": 42585308.757557005,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -53120697\n       }\n      }\n     },\n     {\n      \"cost\": 93287314.49734965,\n      \"currency\": \"nulla tempor\",\n      \"minCost\": -21562455.62093076,\n      \"minStayUntil\": \"tempor nostr\",\n      \"canExtendUntil\": \"dolore mollit pariatur\",\n      \"pricedUntil\": \"pariatur\",\n      \"noReturnUntil\": \"est tempor\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -79318305,\n       775993\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aute ipsum cillum\",\n      \"surcharge\": {\n       \"value\": 50588816.38695696,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 20207260\n       }\n      }\n     }\n    ],\n    \"distance\": 95121211.07571167,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      33029235,\n      25812471\n     ]\n    },\n    \"entityETag\": \"ut veniam in au\"\n   },\n   {\n    \"entityId\": \"eiusmod do\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -54267975.13846573,\n      \"currency\": \"exercitation commodo Lorem ad aute\",\n      \"minCost\": -40889517.37355502,\n      \"minStayUntil\": \"officia nisi nulla minim\",\n      \"canExtendUntil\": \"sint nisi\",\n      \"pricedUntil\": \"elit ipsum veniam commodo\",\n      \"noReturnUntil\": \"consequat irure in sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       25082884,\n       -21573127\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"minim\",\n      \"surcharge\": {\n       \"value\": 3733827.5704852343,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -41420752\n       }\n      }\n     },\n     {\n      \"cost\": 52917877.608471006,\n      \"currency\": \"sint\",\n      \"minCost\": 17841379.746642083,\n      \"minStayUntil\": \"sit\",\n      \"canExtendUntil\": \"elit ipsum\",\n      \"pricedUntil\": \"officia ea incididunt ex cillum\",\n      \"noReturnUntil\": \"proident est ullamco Excepteur\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       41649616,\n       18014623\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"adipisicing\",\n      \"surcharge\": {\n       \"value\": -27241561.587262005,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -46796096\n       }\n      }\n     }\n    ],\n    \"distance\": -89561259.5716563,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      24028504,\n      63821797\n     ]\n    },\n    \"entityETag\": \"ut minim culpa officia\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8176595e-4363-4885-940a-f473f5bff05d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "736c647e-89f3-4c36-978d-55056bd997c6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "588cad91-8d61-4549-acdb-163d274692ec",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "249a85d5-1c9c-4c6d-995b-f5d40e7cd8cd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a8c800b2-9e0b-4a27-8ba2-7d21b88d5bd6",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor anim\",\n            \"properties\": {\n                \"name\": \"mollit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e6895a87-75fb-486c-8c91-bc589cec56a3",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n                \"name\": \"culpa esse ex id elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"dolor tempor id et\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"deserunt magna irure consectetur\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -32907221.543462664,\n      \"currency\": \"adipisicing in reprehenderit minim\",\n      \"minCost\": 43305974.37911114,\n      \"minStayUntil\": \"voluptate enim nostrud ea dol\",\n      \"canExtendUntil\": \"sint in ipsum dolor\",\n      \"pricedUntil\": \"dolore consequat in veniam sed\",\n      \"noReturnUntil\": \"officia Lorem voluptat\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       92485379,\n       -26994547\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"reprehenderit commodo labore esse\",\n      \"surcharge\": {\n       \"value\": 42585308.757557005,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -53120697\n       }\n      }\n     },\n     {\n      \"cost\": 93287314.49734965,\n      \"currency\": \"nulla tempor\",\n      \"minCost\": -21562455.62093076,\n      \"minStayUntil\": \"tempor nostr\",\n      \"canExtendUntil\": \"dolore mollit pariatur\",\n      \"pricedUntil\": \"pariatur\",\n      \"noReturnUntil\": \"est tempor\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -79318305,\n       775993\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aute ipsum cillum\",\n      \"surcharge\": {\n       \"value\": 50588816.38695696,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 20207260\n       }\n      }\n     }\n    ],\n    \"distance\": 95121211.07571167,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      33029235,\n      25812471\n     ]\n    },\n    \"entityETag\": \"ut veniam in au\"\n   },\n   {\n    \"entityId\": \"eiusmod do\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -54267975.13846573,\n      \"currency\": \"exercitation commodo Lorem ad aute\",\n      \"minCost\": -40889517.37355502,\n      \"minStayUntil\": \"officia nisi nulla minim\",\n      \"canExtendUntil\": \"sint nisi\",\n      \"pricedUntil\": \"elit ipsum veniam commodo\",\n      \"noReturnUntil\": \"consequat irure in sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       25082884,\n       -21573127\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"minim\",\n      \"surcharge\": {\n       \"value\": 3733827.5704852343,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -41420752\n       }\n      }\n     },\n     {\n      \"cost\": 52917877.608471006,\n      \"currency\": \"sint\",\n      \"minCost\": 17841379.746642083,\n      \"minStayUntil\": \"sit\",\n      \"canExtendUntil\": \"elit ipsum\",\n      \"pricedUntil\": \"officia ea incididunt ex cillum\",\n      \"noReturnUntil\": \"proident est ullamco Excepteur\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       41649616,\n       18014623\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"adipisicing\",\n      \"surcharge\": {\n       \"value\": -27241561.587262005,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -46796096\n       }\n      }\n     }\n    ],\n    \"distance\": -89561259.5716563,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      24028504,\n      63821797\n     ]\n    },\n    \"entityETag\": \"ut minim culpa officia\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d1197ce3-8ceb-4c0f-b30d-1e3737131a04",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n                \"name\": \"culpa esse ex id elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "40470de0-fd71-404d-9c9c-6d483c0ecb7a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n                \"name\": \"culpa esse ex id elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5a1ca162-58b2-4ffa-b4a6-61ede176d8b0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n                \"name\": \"culpa esse ex id elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "88869792-18af-4a30-b71f-6a2f273f63bc",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n                \"name\": \"culpa esse ex id elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "780fffb5-6265-4cbc-90d4-20e5e6ee9841",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in dolor dolore\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "71b18b41-3909-49a5-af7c-43e1b1f32e6e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim nostrud\",\n            \"properties\": {\n                \"name\": \"exercitation commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"dolor et\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"eiusmod\",\n     \"crs\": {\n      \"type\": \"ex esse in\",\n      \"properties\": {\n       \"name\": \"in id deserunt\"\n      }\n     }\n    },\n    \"type\": \"irure et sint\",\n    \"id\": \"ex in\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"commodo dolore laborum do\",\n     \"crs\": {\n      \"type\": \"ea aliqua labore\",\n      \"properties\": {\n       \"name\": \"amet incididunt nisi e\"\n      }\n     }\n    },\n    \"type\": \"dolo\",\n    \"id\": \"adipisicing Duis consequa\"\n   }\n  ],\n  \"properties\": \"in Lorem culpa dolor\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8ab06b94-22ca-4b58-b3b6-c5367a19dd2d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim nostrud\",\n            \"properties\": {\n                \"name\": \"exercitation commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f0e2e278-1f64-45fc-93dc-2e6df9ab8560",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim nostrud\",\n            \"properties\": {\n                \"name\": \"exercitation commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9f3f4efd-b3ea-43db-802e-fcef9d78cdfe",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim nostrud\",\n            \"properties\": {\n                \"name\": \"exercitation commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dff19736-be95-47a4-b22e-6824c649feb2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim nostrud\",\n            \"properties\": {\n                \"name\": \"exercitation commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6077c7e0-43e9-4032-a671-cf1d4b9bbe35",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ullamco sit est\",\n            \"properties\": {\n                \"name\": \"aute anim\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b286cc66-0286-43de-a71d-6c161dca4ff7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris Excepteur in\",\n            \"properties\": {\n                \"name\": \"est pariat\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ex dolor Lorem esse l\",\n    \"entityETag\": \"proident voluptate aliquip nostrud\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -1653007,\n      \"specialRestrictionTypeId\": 17836608,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sint sunt\",\n        \"endTime\": \"nisi\",\n        \"maxStay\": -82064466\n       },\n       {\n        \"startTime\": \"do voluptate deserunt sint\",\n        \"endTime\": \"irure ea adipisicing\",\n        \"maxStay\": -20383667\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -87668134,\n      \"specialRestrictionTypeId\": -16070386,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed\",\n        \"endTime\": \"voluptat\",\n        \"maxStay\": 16908420\n       },\n       {\n        \"startTime\": \"qui mollit irure dolore\",\n        \"endTime\": \"ad laboris et\",\n        \"maxStay\": 73731179\n       }\n      ]\n     }\n    ],\n    \"distance\": 57455280.11757544\n   },\n   {\n    \"entityId\": \"aliqua\",\n    \"entityETag\": \"sed nulla sit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 26893335,\n      \"specialRestrictionTypeId\": -98373051,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis officia est\",\n        \"endTime\": \"in\",\n        \"maxStay\": -73897780\n       },\n       {\n        \"startTime\": \"in ut\",\n        \"endTime\": \"reprehenderit dolor id dolor\",\n        \"maxStay\": -11295450\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -82562871,\n      \"specialRestrictionTypeId\": 60344182,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"proident enim voluptate\",\n        \"endTime\": \"in\",\n        \"maxStay\": -84821089\n       },\n       {\n        \"startTime\": \"laborum\",\n        \"endTime\": \"minim laboris Ut dolore\",\n        \"maxStay\": -80172302\n       }\n      ]\n     }\n    ],\n    \"distance\": -59148950.65779189\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"des\",\n   \"entityETag\": \"qui irure reprehenderit\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -86393537,\n     \"specialRestrictionTypeId\": 77466676,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"proident laborum\",\n       \"endTime\": \"cupidatat commodo occaecat\",\n       \"maxStay\": -524561\n      },\n      {\n       \"startTime\": \"qui Ut ipsum\",\n       \"endTime\": \"dolor magna dolore\",\n       \"maxStay\": -89205274\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 96354796,\n     \"specialRestrictionTypeId\": -39360261,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"officia sed tempor\",\n       \"endTime\": \"pariatur eiusmod anim\",\n       \"maxStay\": -29250812\n      },\n      {\n       \"startTime\": \"exercitation tempor\",\n       \"endTime\": \"ea culpa\",\n       \"maxStay\": 8924291\n      }\n     ]\n    }\n   ],\n   \"distance\": -2496755.891204521\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "df2b2ba1-70ce-49f9-8171-9e5e09e2ec03",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris Excepteur in\",\n            \"properties\": {\n                \"name\": \"est pariat\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod des\",\n \"errors\": [\n  {\n   \"property\": \"tempor cillum aliquip Excepteur\",\n   \"code\": \"laborum fugiat Duis\",\n   \"message\": \"dolore\"\n  },\n  {\n   \"property\": \"consequat proident sunt\",\n   \"code\": \"quis Lorem\",\n   \"message\": \"laboris\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "185a2c7b-75f1-4f0f-9885-5f76dca5d07f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris Excepteur in\",\n            \"properties\": {\n                \"name\": \"est pariat\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5324cb0b-066f-4b6d-ac94-177dba079b8c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris Excepteur in\",\n            \"properties\": {\n                \"name\": \"est pariat\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "029fce19-df15-47a2-9caa-8ed11606d2e5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris Excepteur in\",\n            \"properties\": {\n                \"name\": \"est pariat\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "bdacb0dc-79db-4c8a-98ae-ac111bb0b606",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "95d48480-5e6d-4b6f-a9f5-5ac3fe54962b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6a553b60-4b1b-4e0e-8a4a-749ea726f66d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "987bf3a9-c3b3-45cd-b380-43d1298bf75a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e53934ff-fbd4-4edc-92db-49267f0d9b03",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "2e815523-ba02-442c-833a-deb09dcabb77",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
