{
  "item": [
    {
      "id": "83c9ca4c-0337-4827-ac48-36f81a469ef1",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "725093e9-d601-4ce7-a968-4a3fc59bd57a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"est ex sit nulla\"\n   },\n   {\n    \"message\": \"ad eu aliquip\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"proident ad sit\",\n    \"cardPaymentsExternalUrl\": \"qui consequat ea\",\n    \"paymentsTelephone\": \"consequat al\"\n   },\n   {\n    \"name\": \"et do\",\n    \"cardPaymentsExternalUrl\": \"fugiat\",\n    \"paymentsTelephone\": \"tempor dolor commodo enim dolor\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"tempor id\",\n     \"crs\": {\n      \"type\": \"enim ut aliqua\",\n      \"properties\": {\n       \"name\": \"pariatur Lorem ut\"\n      }\n     }\n    },\n    {\n     \"type\": \"dolor sunt\",\n     \"crs\": {\n      \"type\": \"Lorem\",\n      \"properties\": {\n       \"name\": \"est officia\"\n      }\n     }\n    }\n   ],\n   \"type\": \"minim reprehenderit\",\n   \"crs\": {\n    \"type\": \"incididunt aute nulla ipsum\",\n    \"properties\": {\n     \"name\": \"nisi minim\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"eiusmod\",\n  \"name\": \"proident sunt\",\n  \"eTag\": \"eu proident laboris ullamco\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "be1ada1f-d7e5-4b19-8179-e415dc218fb1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a5797c7a-b65a-4975-8baa-f60942105038",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d86c9e56-7575-49db-9ef9-3661ba581b7f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ad consequat reprehenderit laborum cupidatat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e8466b15-e336-4bef-a552-d9abdd9e4902",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "870768c8-41bb-4b28-97f9-dbfefb4dd030",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6c5dc02e-cea1-47be-ba55-e20cd709da96",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"deserunt\",\n     \"city\": \"proident incididunt in quis\",\n     \"country\": \"pariatur cill\",\n     \"postcode\": \"nulla consequat eu\"\n    },\n    \"locationCode\": \"laboris aute incididunt aliqua sed\",\n    \"totalCapacity\": -86102086,\n    \"zoneId\": \"qui\",\n    \"authorityId\": \"cillum\",\n    \"features\": {\n     \"type\": \"nulla\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ad Ut\",\n          \"crs\": {\n           \"type\": \"non magna\",\n           \"properties\": {\n            \"name\": \"commodo sit nulla\"\n           }\n          }\n         },\n         {\n          \"type\": \"est nisi labore sed\",\n          \"crs\": {\n           \"type\": \"voluptate dolor sit aliqua dolor\",\n           \"properties\": {\n            \"name\": \"id proident esse dolor\"\n           }\n          }\n         }\n        ],\n        \"type\": \"deserunt\",\n        \"crs\": {\n         \"type\": \"ut Duis dolor sit laboris\",\n         \"properties\": {\n          \"name\": \"dolore ut\"\n         }\n        }\n       },\n       \"type\": \"nostrud eu Excepteur\",\n       \"id\": \"reprehenderit et deserunt\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"aliqua velit\",\n          \"crs\": {\n           \"type\": \"dolor non\",\n           \"properties\": {\n            \"name\": \"in magna in\"\n           }\n          }\n         },\n         {\n          \"type\": \"fugiat dolore labore exercitation\",\n          \"crs\": {\n           \"type\": \"est sunt velit\",\n           \"properties\": {\n            \"name\": \"cupidatat Excepteur\"\n           }\n          }\n         }\n        ],\n        \"type\": \"reprehenderit in non exercitation deserunt\",\n        \"crs\": {\n         \"type\": \"veniam laborum commodo pariatur\",\n         \"properties\": {\n          \"name\": \"eiusmod irure nisi\"\n         }\n        }\n       },\n       \"type\": \"tempor ea ipsum\",\n       \"id\": \"non id\"\n      }\n     ],\n     \"properties\": \"ad ut\"\n    },\n    \"paymentMethodIds\": [\n     -16871879,\n     -24090327\n    ],\n    \"entityId\": \"in aliqua\",\n    \"entityType\": 3,\n    \"name\": \"consectetur\",\n    \"eTag\": \"proident Ut Duis Lorem\"\n   },\n   {\n    \"address\": {\n     \"street\": \"Excepteur veniam commodo\",\n     \"city\": \"nostrud Duis sit dolor\",\n     \"country\": \"aliqua est anim\",\n     \"postcode\": \"nisi veniam culpa\"\n    },\n    \"locationCode\": \"aliquip proident\",\n    \"totalCapacity\": 83071121,\n    \"zoneId\": \"nulla\",\n    \"authorityId\": \"et ut ea\",\n    \"features\": {\n     \"type\": \"ea et voluptate\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"voluptate nostrud\",\n          \"crs\": {\n           \"type\": \"cillum voluptate laboris\",\n           \"properties\": {\n            \"name\": \"cillum\"\n           }\n          }\n         },\n         {\n          \"type\": \"labore laboris in in\",\n          \"crs\": {\n           \"type\": \"ut culpa voluptate nisi\",\n           \"properties\": {\n            \"name\": \"est incididunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"nisi adipisicing proide\",\n        \"crs\": {\n         \"type\": \"amet voluptate laboris nostrud\",\n         \"properties\": {\n          \"name\": \"labore laborum\"\n         }\n        }\n       },\n       \"type\": \"laboris deserunt id\",\n       \"id\": \"officia sunt nostrud aliquip nisi\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"velit occaecat sit\",\n          \"crs\": {\n           \"type\": \"in dolore\",\n           \"properties\": {\n            \"name\": \"Excepteur amet anim labore\"\n           }\n          }\n         },\n         {\n          \"type\": \"in id tempor\",\n          \"crs\": {\n           \"type\": \"quis pariatur\",\n           \"properties\": {\n            \"name\": \"occaecat dolor\"\n           }\n          }\n         }\n        ],\n        \"type\": \"mollit in aliquip pariatur\",\n        \"crs\": {\n         \"type\": \"sunt Duis ex adipisicing elit\",\n         \"properties\": {\n          \"name\": \"nisi\"\n         }\n        }\n       },\n       \"type\": \"Ut aliqua sed irure mollit\",\n       \"id\": \"ad in aliquip\"\n      }\n     ],\n     \"properties\": \"ullamco quis mollit sit\"\n    },\n    \"paymentMethodIds\": [\n     -66045828,\n     -98764362\n    ],\n    \"entityId\": \"officia minim eu sunt adipisicing\",\n    \"entityType\": 4,\n    \"name\": \"sit qui labore reprehenderit\",\n    \"eTag\": \"ea\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"amet qui reprehenderit\",\n       \"crs\": {\n        \"type\": \"veniam aute irure\",\n        \"properties\": {\n         \"name\": \"cupidatat\"\n        }\n       }\n      },\n      {\n       \"type\": \"anim velit laboris officia\",\n       \"crs\": {\n        \"type\": \"sit ut sunt labore\",\n        \"properties\": {\n         \"name\": \"in minim aute occaecat incididunt\"\n        }\n       }\n      }\n     ],\n     \"type\": \"mollit laborum\",\n     \"crs\": {\n      \"type\": \"tempor id\",\n      \"properties\": {\n       \"name\": \"sunt qui\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"magna\"\n     },\n     {\n      \"message\": \"aliqua\"\n     }\n    ],\n    \"authorityId\": \"Excepteur Ut\",\n    \"zoneType\": 1,\n    \"entityType\": 2,\n    \"entityId\": \"in dolor nostrud Duis ullamco\",\n    \"name\": \"Duis aute amet nostrud\",\n    \"eTag\": \"ad occaecat consectetur esse Lorem\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ut labore voluptate consectetur\",\n       \"crs\": {\n        \"type\": \"consectetur \",\n        \"properties\": {\n         \"name\": \"nisi nostrud proident\"\n        }\n       }\n      },\n      {\n       \"type\": \"eu Lorem id\",\n       \"crs\": {\n        \"type\": \"cillum Exc\",\n        \"properties\": {\n         \"name\": \"Ut et Excepteur\"\n        }\n       }\n      }\n     ],\n     \"type\": \"dolor incididunt ut ea\",\n     \"crs\": {\n      \"type\": \"deserunt ipsum id\",\n      \"properties\": {\n       \"name\": \"irure eiusmod\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"sint pariatur reprehenderit\"\n     },\n     {\n      \"message\": \"aliquip cillum velit\"\n     }\n    ],\n    \"authorityId\": \"laborum id Duis incididunt dolore\",\n    \"zoneType\": 5,\n    \"entityType\": 1,\n    \"entityId\": \"in do ullamco\",\n    \"name\": \"laboris in\",\n    \"eTag\": \"dolor fugiat dolore aliqua\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"id tempor elit\"\n     },\n     {\n      \"message\": \"voluptate nulla\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ad officia commodo est Excepteur\",\n      \"cardPaymentsExternalUrl\": \"amet\",\n      \"paymentsTelephone\": \"Duis \"\n     },\n     {\n      \"name\": \"occaecat tempor\",\n      \"cardPaymentsExternalUrl\": \"ut laborum quis nisi\",\n      \"paymentsTelephone\": \"esse dolore\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"velit cupidata\",\n       \"crs\": {\n        \"type\": \"proident culpa\",\n        \"properties\": {\n         \"name\": \"do dolor dolore\"\n        }\n       }\n      },\n      {\n       \"type\": \"ullamco\",\n       \"crs\": {\n        \"type\": \"consequat occaecat\",\n        \"properties\": {\n         \"name\": \"dolore exercitation\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Duis ut incididunt\",\n     \"crs\": {\n      \"type\": \"labore ea\",\n      \"properties\": {\n       \"name\": \"enim adipisicing ullamco sit\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"culpa pariatur nostrud\",\n    \"name\": \"voluptate eu fugiat\",\n    \"eTag\": \"dolor officia aliqua incididunt ut\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"adipisicing cupidatat ut Lorem nisi\"\n     },\n     {\n      \"message\": \"repre\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"amet voluptate cupidatat\",\n      \"cardPaymentsExternalUrl\": \"cupidatat\",\n      \"paymentsTelephone\": \"elit consequat\"\n     },\n     {\n      \"name\": \"id dolore\",\n      \"cardPaymentsExternalUrl\": \"dolore ullamco\",\n      \"paymentsTelephone\": \"cupidatat occaecat dolor culpa laboris\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ea id mollit dolor in\",\n       \"crs\": {\n        \"type\": \"pariatur do \",\n        \"properties\": {\n         \"name\": \"minim commodo labore ea\"\n        }\n       }\n      },\n      {\n       \"type\": \"amet\",\n       \"crs\": {\n        \"type\": \"vo\",\n        \"properties\": {\n         \"name\": \"Lo\"\n        }\n       }\n      }\n     ],\n     \"type\": \"in Duis\",\n     \"crs\": {\n      \"type\": \"minim sunt adipisicing\",\n      \"properties\": {\n       \"name\": \"Lorem qui ut consequat ut\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"dolor laboris velit officia do\",\n    \"name\": \"pariatur ex sit mollit\",\n    \"eTag\": \"minim aliquip in voluptate non\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "81179bba-1d59-422d-bf23-27f7d95d6403",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in sed est ipsum aute\",\n \"errors\": [\n  {\n   \"property\": \"culpa Lorem\",\n   \"code\": \"sit sunt proident cupidatat deserunt\",\n   \"message\": \"et\"\n  },\n  {\n   \"property\": \"fugiat tempor\",\n   \"code\": \"et fugiat esse ut\",\n   \"message\": \"ea Excep\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fb0cccaf-7496-4103-8c6d-e9433a85edc8",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a1ca88d3-c1fa-401a-acc5-386e404a3056",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "42138025-f3ad-4d10-9c29-bb6940fa81e0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2e284640-252e-4379-9358-9824019d0ee8",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8ecb33ae-3fef-4d90-8986-fe93b00ddbfd",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"anim sed\",\n   \"city\": \"ex sint\",\n   \"country\": \"consectetur\",\n   \"postcode\": \"laborum nulla eiusmod qui minim\"\n  },\n  \"locationCode\": \"commodo\",\n  \"totalCapacity\": -13479973,\n  \"zoneId\": \"voluptate aliqua et consectetur\",\n  \"authorityId\": \"officia velit in\",\n  \"features\": {\n   \"type\": \"ullamco Ut eu\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"nostrud officia qui ipsum\",\n        \"crs\": {\n         \"type\": \"velit irure qui sed\",\n         \"properties\": {\n          \"name\": \"nisi\"\n         }\n        }\n       },\n       {\n        \"type\": \"eiusmod non do eu\",\n        \"crs\": {\n         \"type\": \"minim commodo fugiat a\",\n         \"properties\": {\n          \"name\": \"nostrud deserunt\"\n         }\n        }\n       }\n      ],\n      \"type\": \"dolor laborum dolor\",\n      \"crs\": {\n       \"type\": \"non Lorem\",\n       \"properties\": {\n        \"name\": \"irure exercitation\"\n       }\n      }\n     },\n     \"type\": \"nisi velit laborum \",\n     \"id\": \"velit pariatur voluptate ut quis\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"mollit ullamco\",\n        \"crs\": {\n         \"type\": \"nisi Ut sint\",\n         \"properties\": {\n          \"name\": \"deserunt ad ut\"\n         }\n        }\n       },\n       {\n        \"type\": \"nostrud Excepteur elit\",\n        \"crs\": {\n         \"type\": \"enim do Ut non\",\n         \"properties\": {\n          \"name\": \"in et\"\n         }\n        }\n       }\n      ],\n      \"type\": \"sunt labore\",\n      \"crs\": {\n       \"type\": \"sit cupidatat\",\n       \"properties\": {\n        \"name\": \"adipisicing incididunt velit\"\n       }\n      }\n     },\n     \"type\": \"culpa irure\",\n     \"id\": \"a\"\n    }\n   ],\n   \"properties\": \"quis\"\n  },\n  \"paymentMethodIds\": [\n   -36277156,\n   -31466219\n  ],\n  \"entityId\": \"sit enim reprehenderit\",\n  \"entityType\": 3,\n  \"name\": \"quis\",\n  \"eTag\": \"la\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "92c58d32-1523-42cc-a1df-dbc2533350c9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "112a2100-9b24-4a62-a267-c50479bc052c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "74bd420e-9266-4f7d-b062-d2231defe817",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ad consequat reprehenderit laborum cupidatat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "22966df2-5aea-4ff5-934f-e74bb6b632ac",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "11636a77-4255-4133-b6b2-2ff667069a98",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "58cd6c80-351d-4cc0-b799-55ef2c78cb2f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"dolore Duis irure\",\n  \"entityType\": 4,\n  \"quotes\": [\n   {\n    \"cost\": -61930925.51325505,\n    \"currency\": \"aute cupidatat\",\n    \"minCost\": -46368550.11564589,\n    \"minStayUntil\": \"qui magna\",\n    \"canExtendUntil\": \"minim et eu commodo n\",\n    \"pricedUntil\": \"laborum\",\n    \"noReturnUntil\": \"ut commodo Duis sit ex\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     57202523,\n     -32516614\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"in\",\n    \"surcharge\": {\n     \"value\": 57840580.4415009,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -92436865\n     }\n    }\n   },\n   {\n    \"cost\": 86812060.20682487,\n    \"currency\": \"minim elit consectetur\",\n    \"minCost\": 94551055.45039606,\n    \"minStayUntil\": \"do magna esse\",\n    \"canExtendUntil\": \"irure\",\n    \"pricedUntil\": \"sunt\",\n    \"noReturnUntil\": \"consectetur anim aliquip ut est\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -75084544,\n     69506374\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"elit veniam\",\n    \"surcharge\": {\n     \"value\": -32426416.22163047,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -27988194\n     }\n    }\n   }\n  ],\n  \"distance\": -7738763.644102246,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    72439830,\n    21963688\n   ]\n  },\n  \"entityETag\": \"proident laboris\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8dc31489-5e3c-4d6c-9410-b2bfd8208af5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2fc11ccf-9934-47c0-a7d5-f7be69eee407",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "302da190-71cf-4613-b9f2-1a0f648876ce",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ad consequat reprehenderit laborum cupidatat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cdead556-c1a0-4a22-9586-ab819435023d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "994347aa-3d26-498e-bd5c-d284dbea88a6",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "4b57cb1d-d41c-4015-903e-276607867551",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"nostrud deserunt sunt et\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"pariatur amet sed\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -64007325.785642475,\n      \"currency\": \"commodo amet magna voluptate laboris\",\n      \"minCost\": 62539829.0188722,\n      \"minStayUntil\": \"Lorem fugiat incididunt\",\n      \"canExtendUntil\": \"enim do\",\n      \"pricedUntil\": \"ullamco qui ut consequat Excepteur\",\n      \"noReturnUntil\": \"voluptate in minim do irure\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       32637516,\n       -87955139\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"id magna\",\n      \"surcharge\": {\n       \"value\": 72685653.6362353,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 700568\n       }\n      }\n     },\n     {\n      \"cost\": 77024437.84565145,\n      \"currency\": \"est enim\",\n      \"minCost\": 83202407.16409045,\n      \"minStayUntil\": \"commodo dolor qui labore\",\n      \"canExtendUntil\": \"esse eiusmod fugiat exercitation\",\n      \"pricedUntil\": \"incididunt elit\",\n      \"noReturnUntil\": \"dolore sed\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -1163559,\n       -29635986\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"enim\",\n      \"surcharge\": {\n       \"value\": -23042557.24225141,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 18143367\n       }\n      }\n     }\n    ],\n    \"distance\": -59446625.18681554,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -64802060,\n      28317321\n     ]\n    },\n    \"entityETag\": \"velit sint sed nostrud mollit\"\n   },\n   {\n    \"entityId\": \"esse culpa\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 21727183.5880481,\n      \"currency\": \"ipsum in ex cillum\",\n      \"minCost\": -38310636.20649595,\n      \"minStayUntil\": \"minim dolore\",\n      \"canExtendUntil\": \"minim aliquip sunt\",\n      \"pricedUntil\": \"pariatur consequat\",\n      \"noReturnUntil\": \"ullamco est\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -237244,\n       80732589\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Ut nulla nostrud Duis labore\",\n      \"surcharge\": {\n       \"value\": 61516365.72729236,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -17768346\n       }\n      }\n     },\n     {\n      \"cost\": -79288471.09416361,\n      \"currency\": \"magna ad\",\n      \"minCost\": 26747466.508620918,\n      \"minStayUntil\": \"reprehenderit commodo non consequat\",\n      \"canExtendUntil\": \"occaecat aliqu\",\n      \"pricedUntil\": \"sint labore eiusmod laboris\",\n      \"noReturnUntil\": \"magna ipsum aute\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       93965035,\n       -7360024\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt dolor cillum\",\n      \"surcharge\": {\n       \"value\": -45241321.40059334,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 48264493\n       }\n      }\n     }\n    ],\n    \"distance\": -50908652.348175034,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -90139948,\n      15242859\n     ]\n    },\n    \"entityETag\": \"deserunt sunt nulla eu incididunt\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "438c29ae-44a5-4e13-a198-c1b9cb6daee2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e66e90d3-7736-4a9e-ac93-51296d5ab0d8",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "adc28dd7-45c3-45c5-a9bc-b6004d41e16a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "883e71d8-fb87-460a-8063-f460ef77cff4",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "b277551a-8272-4310-9ca4-f5e54890746c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"irure voluptate occaecat mollit\",\n    \"cardPaymentsExternalUrl\": \"nostru\",\n    \"paymentsTelephone\": \"commodo mollit\"\n   },\n   {\n    \"name\": \"nostrud quis\",\n    \"cardPaymentsExternalUrl\": \"ex ut dolore occaecat dolor\",\n    \"paymentsTelephone\": \"elit Ut sunt\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0abcc2bd-bd29-4e67-8ff0-a65dbf59c5ed",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "12be2902-db5f-4f7e-b12d-733363029943",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cb5f48fa-2775-48ed-8fe7-3eee5a75f987",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ad consequat reprehenderit laborum cupidatat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6205f31a-7d31-4762-bc31-d5b7081aa71b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "92063eb6-9f5e-4879-b4b8-644acd09b4fe",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "c5c9c889-e647-4884-80e3-199f25ec098e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"sit\",\n     \"crs\": {\n      \"type\": \"consequat in adipi\",\n      \"properties\": {\n       \"name\": \"qui mollit voluptate\"\n      }\n     }\n    },\n    {\n     \"type\": \"Ut sed ullamco\",\n     \"crs\": {\n      \"type\": \"Duis exercitation in\",\n      \"properties\": {\n       \"name\": \"magna sint\"\n      }\n     }\n    }\n   ],\n   \"type\": \"et sint consectetur aliquip\",\n   \"crs\": {\n    \"type\": \"dolor in eiusmod\",\n    \"properties\": {\n     \"name\": \"nulla minim\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"sunt Duis cillum\"\n   },\n   {\n    \"message\": \"consequat culpa magna Duis\"\n   }\n  ],\n  \"authorityId\": \"Duis sit ex consectetur\",\n  \"zoneType\": 5,\n  \"entityType\": 3,\n  \"entityId\": \"do cillum pariatur ut\",\n  \"name\": \"ea\",\n  \"eTag\": \"ex exercitation\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4749eedc-9835-41dd-ae52-ee4581851b4c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d5e94441-4394-4963-a40b-99e2f0884eb2",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dfa5eda2-877e-4694-9185-9d6865a12e27",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ad consequat reprehenderit laborum cupidatat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b39a9ff-9057-4a52-9478-fecac97ee319",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "86311932-1c25-46ef-af78-f47bb4358ee4",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eius\",\n            \"properties\": {\n                \"name\": \"fugiat exercitation ad proident incididunt\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "598d57e3-06cb-4fe8-b95a-642448951c5c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor culpa\",\n            \"properties\": {\n                \"name\": \"qui Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"sed\",\n    \"entityETag\": \"do elit voluptate in pariatur\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -54031277,\n      \"specialRestrictionTypeId\": -79879839,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt tempor dolore fugiat consectetur\",\n        \"endTime\": \"aliquip lab\",\n        \"maxStay\": 24113422\n       },\n       {\n        \"startTime\": \"reprehenderit ullamco laboris\",\n        \"endTime\": \"irur\",\n        \"maxStay\": -178505\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 83598554,\n      \"specialRestrictionTypeId\": 44273251,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolor Lorem\",\n        \"endTime\": \"non dolore officia sint\",\n        \"maxStay\": 73492076\n       },\n       {\n        \"startTime\": \"nisi enim cupidatat qui\",\n        \"endTime\": \"non voluptate do ad\",\n        \"maxStay\": -4221224\n       }\n      ]\n     }\n    ],\n    \"distance\": -13311505.751582906\n   },\n   {\n    \"entityId\": \"tempor nostrud eiusmod\",\n    \"entityETag\": \"est reprehenderit nostrud exercitation minim\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 46845216,\n      \"specialRestrictionTypeId\": 40432306,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"conseq\",\n        \"endTime\": \"nulla sunt ea\",\n        \"maxStay\": -51883942\n       },\n       {\n        \"startTime\": \"cupidatat ipsum fugiat ad\",\n        \"endTime\": \"do\",\n        \"maxStay\": -85347998\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 31377829,\n      \"specialRestrictionTypeId\": -74751625,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"voluptate ad sit in\",\n        \"endTime\": \"do laborum\",\n        \"maxStay\": 51575579\n       },\n       {\n        \"startTime\": \"laborum sunt\",\n        \"endTime\": \"minim\",\n        \"maxStay\": 16620444\n       }\n      ]\n     }\n    ],\n    \"distance\": -45563924.182606906\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"incididunt dolor nulla\",\n   \"entityETag\": \"mollit labore fugiat dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 50444918,\n     \"specialRestrictionTypeId\": 98303304,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"non dolore amet mollit dolor\",\n       \"endTime\": \"quis ex sint\",\n       \"maxStay\": -51696025\n      },\n      {\n       \"startTime\": \"labore ullamco\",\n       \"endTime\": \"voluptate deserunt culpa dolor\",\n       \"maxStay\": 3128915\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -95787872,\n     \"specialRestrictionTypeId\": 35773062,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ullamco esse dolore exerc\",\n       \"endTime\": \"sed dolor voluptate\",\n       \"maxStay\": 33581998\n      },\n      {\n       \"startTime\": \"labore exercitation consectetur\",\n       \"endTime\": \"aute aliquip Excepteur amet\",\n       \"maxStay\": 22300778\n      }\n     ]\n    }\n   ],\n   \"distance\": -35055474.60341432\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f92fe4c5-a377-4936-b1fb-5f6973e3cfa3",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor culpa\",\n            \"properties\": {\n                \"name\": \"qui Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9a75b83e-e7eb-42c3-b1de-ca6212d6597d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor culpa\",\n            \"properties\": {\n                \"name\": \"qui Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "205894ff-9115-442c-90e5-29b97a37ac5b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor culpa\",\n            \"properties\": {\n                \"name\": \"qui Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "88a86dc0-f409-4ff8-8bf8-a7cb2285ce30",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor culpa\",\n            \"properties\": {\n                \"name\": \"qui Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ea300093-bc2f-448f-bce0-9aa496f96a82",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "d0f45305-77a0-48c5-80eb-263b81852be4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"labore irure ullamco proident esse\",\n      \"city\": \"ad eiusmod fugiat\",\n      \"country\": \"anim sit proident id\",\n      \"postcode\": \"Duis anim dolore ipsum laborum\"\n     },\n     \"locationCode\": \"aliqua voluptate Ut\",\n     \"totalCapacity\": -29111738,\n     \"zoneId\": \"Duis\",\n     \"authorityId\": \"Lorem mollit\",\n     \"features\": {\n      \"type\": \"dolore\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris non dolore do\",\n           \"crs\": {\n            \"type\": \"eiusmod\",\n            \"properties\": {\n             \"name\": \"do non Excepteur exercitation\"\n            }\n           }\n          },\n          {\n           \"type\": \"esse reprehenderit quis\",\n           \"crs\": {\n            \"type\": \"incididunt velit magna\",\n            \"properties\": {\n             \"name\": \"Duis elit cupidatat\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Duis quis et\",\n         \"crs\": {\n          \"type\": \"in ad dolore sed\",\n          \"properties\": {\n           \"name\": \"aliqua officia in consectetur\"\n          }\n         }\n        },\n        \"type\": \"ullamco aute\",\n        \"id\": \"et ex\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ipsum\",\n           \"crs\": {\n            \"type\": \"in commodo occaecat\",\n            \"properties\": {\n             \"name\": \"nostrud ut\"\n            }\n           }\n          },\n          {\n           \"type\": \"esse Excepteur\",\n           \"crs\": {\n            \"type\": \"ullamco ut\",\n            \"properties\": {\n             \"name\": \"aliquip\"\n            }\n           }\n          }\n         ],\n         \"type\": \"enim in est voluptate\",\n         \"crs\": {\n          \"type\": \"officia Excepteur\",\n          \"properties\": {\n           \"name\": \"commodo pariatur\"\n          }\n         }\n        },\n        \"type\": \"cillum nulla tempor\",\n        \"id\": \"fugiat in laboris\"\n       }\n      ],\n      \"properties\": \"cupidatat laborum ea\"\n     },\n     \"paymentMethodIds\": [\n      13745652,\n      -13813514\n     ],\n     \"entityId\": \"laborum officia anim dolore Excepteur\",\n     \"entityType\": 3,\n     \"name\": \"ex Ut aliqua labore\",\n     \"eTag\": \"occaecat ea irure et\"\n    },\n    \"distance\": 77527699.26971\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"dolor esse ad reprehenderit\",\n      \"city\": \"id in nulla non\",\n      \"country\": \"amet consequat non ipsum\",\n      \"postcode\": \"in esse\"\n     },\n     \"locationCode\": \"officia et ut Excepteur\",\n     \"totalCapacity\": 74349815,\n     \"zoneId\": \"amet sed\",\n     \"authorityId\": \"et reprehenderit eiusmod in Duis\",\n     \"features\": {\n      \"type\": \"minim exercitation do\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"adipisicing Duis\",\n           \"crs\": {\n            \"type\": \"amet qui velit\",\n            \"properties\": {\n             \"name\": \"incididunt labore cillum\"\n            }\n           }\n          },\n          {\n           \"type\": \"in commodo irure consectetur amet\",\n           \"crs\": {\n            \"type\": \"laborum et\",\n            \"properties\": {\n             \"name\": \"consequat aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"laborum\",\n         \"crs\": {\n          \"type\": \"veniam occaecat\",\n          \"properties\": {\n           \"name\": \"anim ut ut enim\"\n          }\n         }\n        },\n        \"type\": \"est fugiat laboris deserunt\",\n        \"id\": \"labore pariatur ut\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris\",\n           \"crs\": {\n            \"type\": \"enim sit pariatur anim eiusmod\",\n            \"properties\": {\n             \"name\": \"in non\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis Ut consequat proident\",\n           \"crs\": {\n            \"type\": \"minim quis ea cupidatat\",\n            \"properties\": {\n             \"name\": \"irure\"\n            }\n           }\n          }\n         ],\n         \"type\": \"sint velit laborum\",\n         \"crs\": {\n          \"type\": \"laborum dolor adipisicing eiusmod\",\n          \"properties\": {\n           \"name\": \"sint aliqua eiusmod\"\n          }\n         }\n        },\n        \"type\": \"reprehenderit\",\n        \"id\": \"sint\"\n       }\n      ],\n      \"properties\": \"officia reprehenderit sunt\"\n     },\n     \"paymentMethodIds\": [\n      13827349,\n      60979856\n     ],\n     \"entityId\": \"amet sint\",\n     \"entityType\": 3,\n     \"name\": \"tempor deserunt do reprehenderit ut\",\n     \"eTag\": \"veniam culpa eiusmod\"\n    },\n    \"distance\": -68767186.36526138\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "97c08a42-d43f-482c-b5ba-026494b9b64e",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "96310de3-a5a9-4729-a2f6-021d3f521d57",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "467454c0-d486-4810-94be-24376e6006a7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "06eae915-a4f1-4731-97c3-41df2b2b4d64",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "70d175a1-a792-46ec-b7f6-f9591d4512aa",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut nisi labore dolore\",\n            \"properties\": {\n                \"name\": \"reprehenderit deserunt in irure\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "25c8f9a2-8b15-4ad3-964b-5b0b695b1f31",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod proi\",\n            \"properties\": {\n                \"name\": \"occaecat deserunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"labore irure ullamco proident esse\",\n      \"city\": \"ad eiusmod fugiat\",\n      \"country\": \"anim sit proident id\",\n      \"postcode\": \"Duis anim dolore ipsum laborum\"\n     },\n     \"locationCode\": \"aliqua voluptate Ut\",\n     \"totalCapacity\": -29111738,\n     \"zoneId\": \"Duis\",\n     \"authorityId\": \"Lorem mollit\",\n     \"features\": {\n      \"type\": \"dolore\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris non dolore do\",\n           \"crs\": {\n            \"type\": \"eiusmod\",\n            \"properties\": {\n             \"name\": \"do non Excepteur exercitation\"\n            }\n           }\n          },\n          {\n           \"type\": \"esse reprehenderit quis\",\n           \"crs\": {\n            \"type\": \"incididunt velit magna\",\n            \"properties\": {\n             \"name\": \"Duis elit cupidatat\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Duis quis et\",\n         \"crs\": {\n          \"type\": \"in ad dolore sed\",\n          \"properties\": {\n           \"name\": \"aliqua officia in consectetur\"\n          }\n         }\n        },\n        \"type\": \"ullamco aute\",\n        \"id\": \"et ex\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ipsum\",\n           \"crs\": {\n            \"type\": \"in commodo occaecat\",\n            \"properties\": {\n             \"name\": \"nostrud ut\"\n            }\n           }\n          },\n          {\n           \"type\": \"esse Excepteur\",\n           \"crs\": {\n            \"type\": \"ullamco ut\",\n            \"properties\": {\n             \"name\": \"aliquip\"\n            }\n           }\n          }\n         ],\n         \"type\": \"enim in est voluptate\",\n         \"crs\": {\n          \"type\": \"officia Excepteur\",\n          \"properties\": {\n           \"name\": \"commodo pariatur\"\n          }\n         }\n        },\n        \"type\": \"cillum nulla tempor\",\n        \"id\": \"fugiat in laboris\"\n       }\n      ],\n      \"properties\": \"cupidatat laborum ea\"\n     },\n     \"paymentMethodIds\": [\n      13745652,\n      -13813514\n     ],\n     \"entityId\": \"laborum officia anim dolore Excepteur\",\n     \"entityType\": 3,\n     \"name\": \"ex Ut aliqua labore\",\n     \"eTag\": \"occaecat ea irure et\"\n    },\n    \"distance\": 77527699.26971\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"dolor esse ad reprehenderit\",\n      \"city\": \"id in nulla non\",\n      \"country\": \"amet consequat non ipsum\",\n      \"postcode\": \"in esse\"\n     },\n     \"locationCode\": \"officia et ut Excepteur\",\n     \"totalCapacity\": 74349815,\n     \"zoneId\": \"amet sed\",\n     \"authorityId\": \"et reprehenderit eiusmod in Duis\",\n     \"features\": {\n      \"type\": \"minim exercitation do\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"adipisicing Duis\",\n           \"crs\": {\n            \"type\": \"amet qui velit\",\n            \"properties\": {\n             \"name\": \"incididunt labore cillum\"\n            }\n           }\n          },\n          {\n           \"type\": \"in commodo irure consectetur amet\",\n           \"crs\": {\n            \"type\": \"laborum et\",\n            \"properties\": {\n             \"name\": \"consequat aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"laborum\",\n         \"crs\": {\n          \"type\": \"veniam occaecat\",\n          \"properties\": {\n           \"name\": \"anim ut ut enim\"\n          }\n         }\n        },\n        \"type\": \"est fugiat laboris deserunt\",\n        \"id\": \"labore pariatur ut\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris\",\n           \"crs\": {\n            \"type\": \"enim sit pariatur anim eiusmod\",\n            \"properties\": {\n             \"name\": \"in non\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis Ut consequat proident\",\n           \"crs\": {\n            \"type\": \"minim quis ea cupidatat\",\n            \"properties\": {\n             \"name\": \"irure\"\n            }\n           }\n          }\n         ],\n         \"type\": \"sint velit laborum\",\n         \"crs\": {\n          \"type\": \"laborum dolor adipisicing eiusmod\",\n          \"properties\": {\n           \"name\": \"sint aliqua eiusmod\"\n          }\n         }\n        },\n        \"type\": \"reprehenderit\",\n        \"id\": \"sint\"\n       }\n      ],\n      \"properties\": \"officia reprehenderit sunt\"\n     },\n     \"paymentMethodIds\": [\n      13827349,\n      60979856\n     ],\n     \"entityId\": \"amet sint\",\n     \"entityType\": 3,\n     \"name\": \"tempor deserunt do reprehenderit ut\",\n     \"eTag\": \"veniam culpa eiusmod\"\n    },\n    \"distance\": -68767186.36526138\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "724c4433-8d71-49a0-a55e-c1c299fdc539",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod proi\",\n            \"properties\": {\n                \"name\": \"occaecat deserunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a0f74c3f-aff0-4b3f-92d0-f8e241cd4ca9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod proi\",\n            \"properties\": {\n                \"name\": \"occaecat deserunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "efb0b469-53cf-4a9e-b582-51c0bb0c7b03",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod proi\",\n            \"properties\": {\n                \"name\": \"occaecat deserunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5cd79ecd-1078-4916-a7df-1ca3f8c79979",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod proi\",\n            \"properties\": {\n                \"name\": \"occaecat deserunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e025fa96-3d27-4c4a-9ea5-df4733ca3178",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "841bf8c5-c16f-4b48-bdd1-31e2983e52f0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"nostrud mollit aute\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -37188714.28778186,\n      \"currency\": \"nostrud nisi incididunt enim esse\",\n      \"minCost\": -42287737.29299298,\n      \"minStayUntil\": \"consequat sunt et reprehenderit nulla\",\n      \"canExtendUntil\": \"laborum\",\n      \"pricedUntil\": \"proident culpa elit nisi\",\n      \"noReturnUntil\": \"u\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -11343149,\n       -58650475\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore labore Excep\",\n      \"surcharge\": {\n       \"value\": 41753117.18051788,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59532672\n       }\n      }\n     },\n     {\n      \"cost\": 74834770.9891505,\n      \"currency\": \"amet aute Ut\",\n      \"minCost\": 25496348.527011395,\n      \"minStayUntil\": \"culpa mollit anim Duis et\",\n      \"canExtendUntil\": \"ex sit magna\",\n      \"pricedUntil\": \"commodo cillum\",\n      \"noReturnUntil\": \"consectetur in amet\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       58025440,\n       -39621164\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sit cillum proident\",\n      \"surcharge\": {\n       \"value\": 13649692.545552567,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -88505817\n       }\n      }\n     }\n    ],\n    \"distance\": 79971128.71141368,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      27717079,\n      -87753713\n     ]\n    },\n    \"entityETag\": \"non dolor aliquip\"\n   },\n   {\n    \"entityId\": \"ea commodo\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 37879459.30447382,\n      \"currency\": \"consequat proi\",\n      \"minCost\": -57139428.49312663,\n      \"minStayUntil\": \"incididunt elit sit ea in\",\n      \"canExtendUntil\": \"occaecat in\",\n      \"pricedUntil\": \"quis sed irure ipsum\",\n      \"noReturnUntil\": \"ea pariatur ullamco\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       15653658,\n       -18517256\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"enim aliqua in est\",\n      \"surcharge\": {\n       \"value\": 40743142.066393346,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 86265648\n       }\n      }\n     },\n     {\n      \"cost\": -10404765.982791364,\n      \"currency\": \"ut ea ipsum dolor sit\",\n      \"minCost\": -81211911.00590459,\n      \"minStayUntil\": \"deserunt sed Duis ex\",\n      \"canExtendUntil\": \"in dolor\",\n      \"pricedUntil\": \"temp\",\n      \"noReturnUntil\": \"magna sed culpa\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       38658441,\n       -40243858\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cillum \",\n      \"surcharge\": {\n       \"value\": 93482483.50162902,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 54026580\n       }\n      }\n     }\n    ],\n    \"distance\": 33533613.834631562,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      80907664,\n      51456664\n     ]\n    },\n    \"entityETag\": \"tempor laborum velit consectetur\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "27c078d2-0e26-42f1-af59-71c05ce483a1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fc75b661-7fb1-4f5f-81b7-bffe202b94d2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "185c686a-ddba-40b0-a555-7c7941409004",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "742c09d4-d692-4e79-afe8-c38c9689548c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "03284757-17a6-482c-ba80-48de67dc17db",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla do eiusmod\",\n            \"properties\": {\n                \"name\": \"tempor laboris reprehenderit cupidatat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "136a3b29-bb89-4ebd-b8bd-8d18072a779e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est\",\n            \"properties\": {\n                \"name\": \"Duis voluptate nulla\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"nostrud mollit aute\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -37188714.28778186,\n      \"currency\": \"nostrud nisi incididunt enim esse\",\n      \"minCost\": -42287737.29299298,\n      \"minStayUntil\": \"consequat sunt et reprehenderit nulla\",\n      \"canExtendUntil\": \"laborum\",\n      \"pricedUntil\": \"proident culpa elit nisi\",\n      \"noReturnUntil\": \"u\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -11343149,\n       -58650475\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore labore Excep\",\n      \"surcharge\": {\n       \"value\": 41753117.18051788,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59532672\n       }\n      }\n     },\n     {\n      \"cost\": 74834770.9891505,\n      \"currency\": \"amet aute Ut\",\n      \"minCost\": 25496348.527011395,\n      \"minStayUntil\": \"culpa mollit anim Duis et\",\n      \"canExtendUntil\": \"ex sit magna\",\n      \"pricedUntil\": \"commodo cillum\",\n      \"noReturnUntil\": \"consectetur in amet\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       58025440,\n       -39621164\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sit cillum proident\",\n      \"surcharge\": {\n       \"value\": 13649692.545552567,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -88505817\n       }\n      }\n     }\n    ],\n    \"distance\": 79971128.71141368,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      27717079,\n      -87753713\n     ]\n    },\n    \"entityETag\": \"non dolor aliquip\"\n   },\n   {\n    \"entityId\": \"ea commodo\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 37879459.30447382,\n      \"currency\": \"consequat proi\",\n      \"minCost\": -57139428.49312663,\n      \"minStayUntil\": \"incididunt elit sit ea in\",\n      \"canExtendUntil\": \"occaecat in\",\n      \"pricedUntil\": \"quis sed irure ipsum\",\n      \"noReturnUntil\": \"ea pariatur ullamco\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       15653658,\n       -18517256\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"enim aliqua in est\",\n      \"surcharge\": {\n       \"value\": 40743142.066393346,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 86265648\n       }\n      }\n     },\n     {\n      \"cost\": -10404765.982791364,\n      \"currency\": \"ut ea ipsum dolor sit\",\n      \"minCost\": -81211911.00590459,\n      \"minStayUntil\": \"deserunt sed Duis ex\",\n      \"canExtendUntil\": \"in dolor\",\n      \"pricedUntil\": \"temp\",\n      \"noReturnUntil\": \"magna sed culpa\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       38658441,\n       -40243858\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cillum \",\n      \"surcharge\": {\n       \"value\": 93482483.50162902,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 54026580\n       }\n      }\n     }\n    ],\n    \"distance\": 33533613.834631562,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      80907664,\n      51456664\n     ]\n    },\n    \"entityETag\": \"tempor laborum velit consectetur\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "548202af-721a-4c8f-a900-766bdb7f56df",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est\",\n            \"properties\": {\n                \"name\": \"Duis voluptate nulla\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ff278b5f-8de6-4a7b-b006-abfe9a523e5e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est\",\n            \"properties\": {\n                \"name\": \"Duis voluptate nulla\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1505b27b-fd25-4b59-a7ce-97faab8f266c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est\",\n            \"properties\": {\n                \"name\": \"Duis voluptate nulla\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a91b2369-086f-42a1-b751-5bb4affec562",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est\",\n            \"properties\": {\n                \"name\": \"Duis voluptate nulla\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f0ce7207-9596-430e-a083-4ff2c86f0191",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit irure fugiat\",\n            \"properties\": {\n                \"name\": \"ut dolore deserunt aliq\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "2b6a5925-c35e-429d-a36f-6b40f1d0e9b2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cupidatat incididunt proident\",\n            \"properties\": {\n                \"name\": \"exercitation consectetur pariatur deserunt\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"irure do ad dolore\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"amet voluptate enim\",\n     \"crs\": {\n      \"type\": \"enim sunt ad ipsum\",\n      \"properties\": {\n       \"name\": \"ut sunt et id\"\n      }\n     }\n    },\n    \"type\": \"ea aliqua dolore pariatur\",\n    \"id\": \"\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"eu mollit consectetur\",\n     \"crs\": {\n      \"type\": \"aliqua in \",\n      \"properties\": {\n       \"name\": \"ullamco eiusmod officia ea\"\n      }\n     }\n    },\n    \"type\": \"officia nisi dolor\",\n    \"id\": \"magna\"\n   }\n  ],\n  \"properties\": \"dolore ut ullamco ipsum nisi\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "74961bd3-8682-4d45-ba69-d4a5aba9262f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cupidatat incididunt proident\",\n            \"properties\": {\n                \"name\": \"exercitation consectetur pariatur deserunt\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e6baa427-df59-46b5-8f21-ea14749edd0c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cupidatat incididunt proident\",\n            \"properties\": {\n                \"name\": \"exercitation consectetur pariatur deserunt\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c010231e-61d3-47ef-8652-3ff1ede0441a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cupidatat incididunt proident\",\n            \"properties\": {\n                \"name\": \"exercitation consectetur pariatur deserunt\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "016c3251-174a-4171-ac19-a82737927abd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cupidatat incididunt proident\",\n            \"properties\": {\n                \"name\": \"exercitation consectetur pariatur deserunt\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "08ec499e-cd38-42c5-93e9-a50684352fe3",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris qui et Lorem\",\n            \"properties\": {\n                \"name\": \"culpa\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "586621b8-4841-4817-87e7-632f0dfd0a0c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure proident in\",\n            \"properties\": {\n                \"name\": \"non ex aliqua\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"sed\",\n    \"entityETag\": \"do elit voluptate in pariatur\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -54031277,\n      \"specialRestrictionTypeId\": -79879839,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt tempor dolore fugiat consectetur\",\n        \"endTime\": \"aliquip lab\",\n        \"maxStay\": 24113422\n       },\n       {\n        \"startTime\": \"reprehenderit ullamco laboris\",\n        \"endTime\": \"irur\",\n        \"maxStay\": -178505\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 83598554,\n      \"specialRestrictionTypeId\": 44273251,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolor Lorem\",\n        \"endTime\": \"non dolore officia sint\",\n        \"maxStay\": 73492076\n       },\n       {\n        \"startTime\": \"nisi enim cupidatat qui\",\n        \"endTime\": \"non voluptate do ad\",\n        \"maxStay\": -4221224\n       }\n      ]\n     }\n    ],\n    \"distance\": -13311505.751582906\n   },\n   {\n    \"entityId\": \"tempor nostrud eiusmod\",\n    \"entityETag\": \"est reprehenderit nostrud exercitation minim\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 46845216,\n      \"specialRestrictionTypeId\": 40432306,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"conseq\",\n        \"endTime\": \"nulla sunt ea\",\n        \"maxStay\": -51883942\n       },\n       {\n        \"startTime\": \"cupidatat ipsum fugiat ad\",\n        \"endTime\": \"do\",\n        \"maxStay\": -85347998\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 31377829,\n      \"specialRestrictionTypeId\": -74751625,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"voluptate ad sit in\",\n        \"endTime\": \"do laborum\",\n        \"maxStay\": 51575579\n       },\n       {\n        \"startTime\": \"laborum sunt\",\n        \"endTime\": \"minim\",\n        \"maxStay\": 16620444\n       }\n      ]\n     }\n    ],\n    \"distance\": -45563924.182606906\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"incididunt dolor nulla\",\n   \"entityETag\": \"mollit labore fugiat dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 50444918,\n     \"specialRestrictionTypeId\": 98303304,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"non dolore amet mollit dolor\",\n       \"endTime\": \"quis ex sint\",\n       \"maxStay\": -51696025\n      },\n      {\n       \"startTime\": \"labore ullamco\",\n       \"endTime\": \"voluptate deserunt culpa dolor\",\n       \"maxStay\": 3128915\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -95787872,\n     \"specialRestrictionTypeId\": 35773062,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ullamco esse dolore exerc\",\n       \"endTime\": \"sed dolor voluptate\",\n       \"maxStay\": 33581998\n      },\n      {\n       \"startTime\": \"labore exercitation consectetur\",\n       \"endTime\": \"aute aliquip Excepteur amet\",\n       \"maxStay\": 22300778\n      }\n     ]\n    }\n   ],\n   \"distance\": -35055474.60341432\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e5d31a35-0cca-4329-b064-7247be7b2403",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure proident in\",\n            \"properties\": {\n                \"name\": \"non ex aliqua\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eu eiusmod\",\n \"errors\": [\n  {\n   \"property\": \"dolor in esse\",\n   \"code\": \"deserunt dolore eiusmod non sit\",\n   \"message\": \"proident eiusmod\"\n  },\n  {\n   \"property\": \"ad Ut Duis\",\n   \"code\": \"dolore nulla laboris\",\n   \"message\": \"do aute Ut\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0b1c30b4-bccb-46d1-992f-c8793bc37d9e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure proident in\",\n            \"properties\": {\n                \"name\": \"non ex aliqua\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5344cec9-6bd9-4b20-bb67-8a7e58242c5c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure proident in\",\n            \"properties\": {\n                \"name\": \"non ex aliqua\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6d87b5ab-1f34-4066-bf33-97170c154e40",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure proident in\",\n            \"properties\": {\n                \"name\": \"non ex aliqua\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6bf23e68-1629-4747-bc56-6e0f249c4624",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "cd9a6d04-6fea-4679-a09a-8328a865ac0e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "aa74f3dd-0582-4a0c-a894-b1fa89d14af3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4ec960c2-6bb6-457e-aab1-8326102ca0e6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "51600c37-9457-4aec-acfd-32c9fecb1649",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "ef2c2b50-b179-43af-b896-923dd3ae9fed",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
