{
  "item": [
    {
      "id": "c76b1724-68bb-40ce-a316-6f72908bffc8",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "86f71a50-ccd9-49a3-9348-d4ac5048a2d6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"aute laborum ut\"\n   },\n   {\n    \"message\": \"deserunt magna\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"nulla ipsum\",\n    \"cardPaymentsExternalUrl\": \"esse eu Duis elit proident\",\n    \"paymentsTelephone\": \"laborum in Lorem\"\n   },\n   {\n    \"name\": \"exercitation in dolor ea\",\n    \"cardPaymentsExternalUrl\": \"ex elit\",\n    \"paymentsTelephone\": \"ad est in\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"velit\",\n     \"crs\": {\n      \"type\": \"ipsum voluptate\",\n      \"properties\": {\n       \"name\": \"do occaecat aliqua esse\"\n      }\n     }\n    },\n    {\n     \"type\": \"anim\",\n     \"crs\": {\n      \"type\": \"in\",\n      \"properties\": {\n       \"name\": \"magna tempor Lorem dolor\"\n      }\n     }\n    }\n   ],\n   \"type\": \"Lorem occaecat ut aute\",\n   \"crs\": {\n    \"type\": \"sed esse\",\n    \"properties\": {\n     \"name\": \"nisi Lorem\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"reprehenderit ullamco anim\",\n  \"name\": \"veniam sed\",\n  \"eTag\": \"commodo exercitation\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9a8ba798-56a3-4563-960b-d1fcd5326656",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b0eee2c0-1b47-458f-a980-eb0774618740",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f9f96b15-b802-43ac-a0b0-34323811f2fd",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet cillum ut Duis\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d231cadd-c6ac-4b68-bc70-2dbea1a1467a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d5077c33-e79e-4b05-aa55-3f4959e58d48",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "f40a2822-e50f-4c5e-a4dd-014be3089318",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"in Duis\",\n     \"city\": \"fugiat amet\",\n     \"country\": \"enim\",\n     \"postcode\": \"incididunt veniam magna exercitation\"\n    },\n    \"locationCode\": \"quis nulla incididunt\",\n    \"totalCapacity\": 88617767,\n    \"zoneId\": \"pariatur sit\",\n    \"authorityId\": \"in sint\",\n    \"features\": {\n     \"type\": \"elit aute laboris\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"in dolore qui\",\n          \"crs\": {\n           \"type\": \"ad cupidatat nulla\",\n           \"properties\": {\n            \"name\": \"elit esse\"\n           }\n          }\n         },\n         {\n          \"type\": \"ut sit reprehenderit voluptate\",\n          \"crs\": {\n           \"type\": \"dolore in\",\n           \"properties\": {\n            \"name\": \"et\"\n           }\n          }\n         }\n        ],\n        \"type\": \"Excepteur officia\",\n        \"crs\": {\n         \"type\": \"dolor sint\",\n         \"properties\": {\n          \"name\": \"sed\"\n         }\n        }\n       },\n       \"type\": \"mollit veniam consectetur ipsum\",\n       \"id\": \"incididunt dolore tempor\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"in laboris Lorem reprehenderit\",\n          \"crs\": {\n           \"type\": \"dolor in ex id\",\n           \"properties\": {\n            \"name\": \"eu tempor dolor deserunt\"\n           }\n          }\n         },\n         {\n          \"type\": \"cillum et irure deserunt\",\n          \"crs\": {\n           \"type\": \"consequat sit id elit consectetur\",\n           \"properties\": {\n            \"name\": \"sunt quis Duis ea\"\n           }\n          }\n         }\n        ],\n        \"type\": \"velit proident\",\n        \"crs\": {\n         \"type\": \"qui nulla\",\n         \"properties\": {\n          \"name\": \"sint irure p\"\n         }\n        }\n       },\n       \"type\": \"eu id incididunt commodo voluptate\",\n       \"id\": \"mollit ullamc\"\n      }\n     ],\n     \"properties\": \"esse nisi magna sit culpa\"\n    },\n    \"paymentMethodIds\": [\n     60457771,\n     -41932186\n    ],\n    \"entityId\": \"ad in\",\n    \"entityType\": 2,\n    \"name\": \"ex incididunt\",\n    \"eTag\": \"Duis sunt\"\n   },\n   {\n    \"address\": {\n     \"street\": \"laborum proident aute\",\n     \"city\": \"ad ipsum adipisicing laboris esse\",\n     \"country\": \"proident pariatur id dol\",\n     \"postcode\": \"ad culpa\"\n    },\n    \"locationCode\": \"ad nisi do\",\n    \"totalCapacity\": 85309772,\n    \"zoneId\": \"magna id cupidatat ipsum\",\n    \"authorityId\": \"cillum\",\n    \"features\": {\n     \"type\": \"dolore Ut\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"laborum id Lorem\",\n          \"crs\": {\n           \"type\": \"elit fugiat labore\",\n           \"properties\": {\n            \"name\": \"tempor dolor proident reprehenderit consectetur\"\n           }\n          }\n         },\n         {\n          \"type\": \"in\",\n          \"crs\": {\n           \"type\": \"dolore id quis\",\n           \"properties\": {\n            \"name\": \"magna ex cillum\"\n           }\n          }\n         }\n        ],\n        \"type\": \"dolore adipisicing cupidatat nulla fugiat\",\n        \"crs\": {\n         \"type\": \"nisi\",\n         \"properties\": {\n          \"name\": \"ex minim\"\n         }\n        }\n       },\n       \"type\": \"mollit dolore sed nostrud\",\n       \"id\": \"proident consequat aliqua ut\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"est minim\",\n          \"crs\": {\n           \"type\": \"aliquip ad anim\",\n           \"properties\": {\n            \"name\": \"dolore quis\"\n           }\n          }\n         },\n         {\n          \"type\": \"nostrud consequat deserunt\",\n          \"crs\": {\n           \"type\": \"nulla cillum\",\n           \"properties\": {\n            \"name\": \"fugiat est eu eiusmod\"\n           }\n          }\n         }\n        ],\n        \"type\": \"incididunt culpa Lorem nostrud\",\n        \"crs\": {\n         \"type\": \"non anim\",\n         \"properties\": {\n          \"name\": \"eiusmod aliqua dolore\"\n         }\n        }\n       },\n       \"type\": \"Ut occaecat\",\n       \"id\": \"anim reprehenderit cupidatat eiusmod sed\"\n      }\n     ],\n     \"properties\": \"qui consectetur\"\n    },\n    \"paymentMethodIds\": [\n     -79864472,\n     34532404\n    ],\n    \"entityId\": \"sint esse et in adipisicing\",\n    \"entityType\": 3,\n    \"name\": \"qui irure voluptate\",\n    \"eTag\": \"dolor in est\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sit consequat amet\",\n       \"crs\": {\n        \"type\": \"anim\",\n        \"properties\": {\n         \"name\": \"Lorem minim ex qui labore\"\n        }\n       }\n      },\n      {\n       \"type\": \"cillum in Lorem dolor\",\n       \"crs\": {\n        \"type\": \"cillum elit\",\n        \"properties\": {\n         \"name\": \"ad irure proident amet\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Lore\",\n     \"crs\": {\n      \"type\": \"esse deserunt laboris tempor\",\n      \"properties\": {\n       \"name\": \"dolor\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"adipisicing ipsum\"\n     },\n     {\n      \"message\": \"deserunt ipsum minim\"\n     }\n    ],\n    \"authorityId\": \"amet\",\n    \"zoneType\": 9,\n    \"entityType\": 1,\n    \"entityId\": \"eu ad irure mollit ut\",\n    \"name\": \"proident est in Duis Excepteur\",\n    \"eTag\": \"in laboris\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"labore culpa\",\n       \"crs\": {\n        \"type\": \"Ut veniam\",\n        \"properties\": {\n         \"name\": \"do consectetur aliquip anim eius\"\n        }\n       }\n      },\n      {\n       \"type\": \"nulla\",\n       \"crs\": {\n        \"type\": \"reprehenderit officia amet sed exercitation\",\n        \"properties\": {\n         \"name\": \"laboris eu adipisicing\"\n        }\n       }\n      }\n     ],\n     \"type\": \"in eu dolor\",\n     \"crs\": {\n      \"type\": \"ipsum ea occaecat dolor\",\n      \"properties\": {\n       \"name\": \"voluptate quis incididunt veniam\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"proident eu est dolore\"\n     },\n     {\n      \"message\": \"sint voluptate amet\"\n     }\n    ],\n    \"authorityId\": \"ut cillum ullamco ipsum laboris\",\n    \"zoneType\": 7,\n    \"entityType\": 4,\n    \"entityId\": \"in aute laborum ut\",\n    \"name\": \"sunt in\",\n    \"eTag\": \"Lorem consectetur tempor\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"labore dolore Ut\"\n     },\n     {\n      \"message\": \"e\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"nisi esse quis\",\n      \"cardPaymentsExternalUrl\": \"fugiat\",\n      \"paymentsTelephone\": \"sint dolore ullamco\"\n     },\n     {\n      \"name\": \"qui dolo\",\n      \"cardPaymentsExternalUrl\": \"veniam laborum\",\n      \"paymentsTelephone\": \"consequat id pariatur\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"cillum reprehenderit irure incididunt dolor\",\n       \"crs\": {\n        \"type\": \"adipisicing laboris non dolor\",\n        \"properties\": {\n         \"name\": \"labore sed Ut cillum ea\"\n        }\n       }\n      },\n      {\n       \"type\": \"quis minim in voluptat\",\n       \"crs\": {\n        \"type\": \"ipsum Lorem irure\",\n        \"properties\": {\n         \"name\": \"fugiat enim in\"\n        }\n       }\n      }\n     ],\n     \"type\": \"sed in ut\",\n     \"crs\": {\n      \"type\": \"consectetur consequat id\",\n      \"properties\": {\n       \"name\": \"cillum qui Duis\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"sunt commodo\",\n    \"name\": \"ullamco officia\",\n    \"eTag\": \"mollit proident of\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"in laboris\"\n     },\n     {\n      \"message\": \"qui culpa amet dolore nisi\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"in pariatur aliqua ullamco et\",\n      \"cardPaymentsExternalUrl\": \"exercitation\",\n      \"paymentsTelephone\": \"et esse\"\n     },\n     {\n      \"name\": \"non\",\n      \"cardPaymentsExternalUrl\": \"velit officia\",\n      \"paymentsTelephone\": \"laboris veniam\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"culpa\",\n       \"crs\": {\n        \"type\": \"est eu eiusmod culpa\",\n        \"properties\": {\n         \"name\": \"elit voluptate fugiat\"\n        }\n       }\n      },\n      {\n       \"type\": \"est Excepteur\",\n       \"crs\": {\n        \"type\": \"veniam eu ut labore\",\n        \"properties\": {\n         \"name\": \"ipsum irure reprehenderit adipisicing\"\n        }\n       }\n      }\n     ],\n     \"type\": \"incididunt esse\",\n     \"crs\": {\n      \"type\": \"nulla\",\n      \"properties\": {\n       \"name\": \"eu\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"proident Lorem\",\n    \"name\": \"mollit adipisicing Dui\",\n    \"eTag\": \"occaecat\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1c7e6364-671e-47fb-a97a-4c78ce7bee11",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"minim velit incididunt fugiat ad\",\n \"errors\": [\n  {\n   \"property\": \"esse sit\",\n   \"code\": \"irure consequat\",\n   \"message\": \"ipsum labore magna\"\n  },\n  {\n   \"property\": \"nulla tempor exercitation\",\n   \"code\": \"do voluptate\",\n   \"message\": \"enim\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "da97ac49-4f3e-457e-b971-1526e07c1938",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e1fb60f5-f150-4795-89c4-b69b7a229961",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "67709925-223d-430e-a6dd-32d787619e2a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "eab8ddbc-ba7f-4e48-9c17-babcbc53e148",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "6deb6596-0d98-4c16-8482-592e9e963916",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"qui\",\n   \"city\": \"fugiat nisi\",\n   \"country\": \"in est\",\n   \"postcode\": \"aliqua ea laborum\"\n  },\n  \"locationCode\": \"ven\",\n  \"totalCapacity\": -48228605,\n  \"zoneId\": \"dolor dolore\",\n  \"authorityId\": \"exercitation adipisicing nostrud ullamco in\",\n  \"features\": {\n   \"type\": \"nulla enim eu aliquip\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"dolor qu\",\n        \"crs\": {\n         \"type\": \"sint laborum do est\",\n         \"properties\": {\n          \"name\": \"adipisicing\"\n         }\n        }\n       },\n       {\n        \"type\": \"in dolore aliquip\",\n        \"crs\": {\n         \"type\": \"in\",\n         \"properties\": {\n          \"name\": \"mollit pariatur eu amet esse\"\n         }\n        }\n       }\n      ],\n      \"type\": \"cupidatat laborum\",\n      \"crs\": {\n       \"type\": \"Ut consectetur exercitation non\",\n       \"properties\": {\n        \"name\": \"ut ex commodo magna\"\n       }\n      }\n     },\n     \"type\": \"do\",\n     \"id\": \"dolore eu\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"reprehenderit velit ipsum\",\n        \"crs\": {\n         \"type\": \"ad labore mollit eiusmod\",\n         \"properties\": {\n          \"name\": \"eu do ipsum et\"\n         }\n        }\n       },\n       {\n        \"type\": \"Lorem nisi sunt ullamco\",\n        \"crs\": {\n         \"type\": \"Lorem laborum\",\n         \"properties\": {\n          \"name\": \"elit tempor velit id\"\n         }\n        }\n       }\n      ],\n      \"type\": \"exercitation in amet dolor\",\n      \"crs\": {\n       \"type\": \"ad officia\",\n       \"properties\": {\n        \"name\": \"nulla dolore sint mollit\"\n       }\n      }\n     },\n     \"type\": \"nulla cillum aute et\",\n     \"id\": \"sunt voluptate pariatur reprehenderit\"\n    }\n   ],\n   \"properties\": \"eu\"\n  },\n  \"paymentMethodIds\": [\n   -88518958,\n   -79140611\n  ],\n  \"entityId\": \"dolor dolor magna\",\n  \"entityType\": 1,\n  \"name\": \"aliquip in\",\n  \"eTag\": \"anim magna enim ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "949cc6c0-dab3-4634-9d83-5f9a08b21132",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a98d9ea3-3f82-4352-b91d-1a60df54ba56",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "44bc717e-29d8-4643-8a90-67b5b6c7b2cd",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet cillum ut Duis\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a8d8b19c-35ab-48f2-8a42-71a9198c8f43",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e3f2e122-9596-4055-8de5-a4c0ab7c5f23",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b3356ebb-05cd-42ab-b970-2eae7ef863a3",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"voluptate\",\n  \"entityType\": 1,\n  \"quotes\": [\n   {\n    \"cost\": -20117775.489251733,\n    \"currency\": \"nostrud\",\n    \"minCost\": 66430755.03633925,\n    \"minStayUntil\": \"ex ut\",\n    \"canExtendUntil\": \"consectetur tempor\",\n    \"pricedUntil\": \"Excepteur fugiat Du\",\n    \"noReturnUntil\": \"dolor elit\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     21537890,\n     -33895414\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ullamco pariatur sint\",\n    \"surcharge\": {\n     \"value\": 14011065.508599252,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -33521245\n     }\n    }\n   },\n   {\n    \"cost\": -34018585.1697421,\n    \"currency\": \"officia\",\n    \"minCost\": -77966038.19902375,\n    \"minStayUntil\": \"ut Lo\",\n    \"canExtendUntil\": \"quis minim reprehenderit labore\",\n    \"pricedUntil\": \"velit tempor ut dolore\",\n    \"noReturnUntil\": \"sunt esse \",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -85019621,\n     71883930\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"est ipsum minim nulla\",\n    \"surcharge\": {\n     \"value\": -9982319.710715443,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -14323426\n     }\n    }\n   }\n  ],\n  \"distance\": 18063293.126262397,\n  \"parkingAllowed\": 3,\n  \"noParkingReason\": {\n   \"reasonType\": 2,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -91018519,\n    -79286465\n   ]\n  },\n  \"entityETag\": \"officia\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a991b31f-061c-4295-bb32-d4e70bac12fa",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ed843cad-f04d-4ea1-9436-158952dd4a57",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0b4ef507-dba3-498f-b836-3d9940c8a6ad",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet cillum ut Duis\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ca2a0c32-baa9-448e-9678-8089ed97a4c3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "dc0f3ac3-c42c-44b4-b804-6309953703c1",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "c540e22b-4c33-45f2-a21a-5ddd36532dcd",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"qui esse\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"et sunt esse\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 80442372.67032051,\n      \"currency\": \"Ut in commodo reprehenderit\",\n      \"minCost\": 77648180.90280658,\n      \"minStayUntil\": \"voluptate minim dolore Lorem id\",\n      \"canExtendUntil\": \"la\",\n      \"pricedUntil\": \"magna labore pariatur\",\n      \"noReturnUntil\": \"amet\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -12948898,\n       10562086\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis sed ipsum fugiat\",\n      \"surcharge\": {\n       \"value\": 61794464.147911996,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -60236946\n       }\n      }\n     },\n     {\n      \"cost\": 3164972.5206934363,\n      \"currency\": \"Excepteur\",\n      \"minCost\": -52294952.65148505,\n      \"minStayUntil\": \"culpa magna dolor nisi\",\n      \"canExtendUntil\": \"anim\",\n      \"pricedUntil\": \"consectetur pariatur reprehe\",\n      \"noReturnUntil\": \"laborum Duis proident aliquip\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       91808125,\n       32238868\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aliquip laborum ea\",\n      \"surcharge\": {\n       \"value\": 27457788.923682317,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -85608888\n       }\n      }\n     }\n    ],\n    \"distance\": 26990510.42050709,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -26014244,\n      -97087476\n     ]\n    },\n    \"entityETag\": \"cupidatat esse \"\n   },\n   {\n    \"entityId\": \"esse nisi aute\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 48970694.37781903,\n      \"currency\": \"ea nulla\",\n      \"minCost\": 65216621.94364643,\n      \"minStayUntil\": \"fugiat est officia consequat ipsum\",\n      \"canExtendUntil\": \"ex deserunt eiusmod exercitation\",\n      \"pricedUntil\": \"cillum\",\n      \"noReturnUntil\": \"veniam ea et\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -18582994,\n       -61960032\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"eiusmod magna pariatur\",\n      \"surcharge\": {\n       \"value\": 79830766.78326073,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -80300290\n       }\n      }\n     },\n     {\n      \"cost\": -62943829.639291726,\n      \"currency\": \"ad Duis\",\n      \"minCost\": 45845770.92594984,\n      \"minStayUntil\": \"veniam sed Duis in\",\n      \"canExtendUntil\": \"quis pariatur nisi et\",\n      \"pricedUntil\": \"dolore deserunt\",\n      \"noReturnUntil\": \"aute\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -6475740,\n       63676884\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat velit occaecat\",\n      \"surcharge\": {\n       \"value\": 26026875.349805504,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 99340295\n       }\n      }\n     }\n    ],\n    \"distance\": -36671281.80362207,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      77342460,\n      20030765\n     ]\n    },\n    \"entityETag\": \"laboris qui labore dolor\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "85339ae4-ab46-47a4-b188-d62f7ae86a6a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "84bf9901-8a5a-459a-8e91-5a75abb7eff3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8d228039-d6ee-4430-8b7e-df4459264f63",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "54165f31-6419-4131-891f-c287af11d68f",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "0f7f15f5-a977-456d-b623-2ce1e50e8ed1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"fugiat consectetur ut\",\n    \"cardPaymentsExternalUrl\": \"ut\",\n    \"paymentsTelephone\": \"nostrud fugiat deserunt aliquip\"\n   },\n   {\n    \"name\": \"eiusmod minim\",\n    \"cardPaymentsExternalUrl\": \"culpa dolor cupidatat\",\n    \"paymentsTelephone\": \"ea cillum dolore ipsum Duis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "71aeea5a-4dd1-41f7-b2a8-c2b0e32cc1f9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cc0c1f48-960f-4922-af5d-55e0c205cb73",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9358ae2c-ff55-4c42-a14f-07b105331802",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet cillum ut Duis\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b8485a18-f1ce-4b5a-86c5-878a993b6eeb",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5d754a7a-7a6a-42fc-89fe-8ed716e868bf",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "57767175-e828-46f6-bae3-4ec278555993",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"eu sint\",\n     \"crs\": {\n      \"type\": \"et dolor\",\n      \"properties\": {\n       \"name\": \"tempor\"\n      }\n     }\n    },\n    {\n     \"type\": \"laborum Excepteur Ut\",\n     \"crs\": {\n      \"type\": \"eu incididunt amet ex\",\n      \"properties\": {\n       \"name\": \"culpa fugiat laboris pariatur commodo\"\n      }\n     }\n    }\n   ],\n   \"type\": \"non u\",\n   \"crs\": {\n    \"type\": \"veniam est cillum\",\n    \"properties\": {\n     \"name\": \"in ut deserunt\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"laborum aute\"\n   },\n   {\n    \"message\": \"aute Excepteur\"\n   }\n  ],\n  \"authorityId\": \"nisi\",\n  \"zoneType\": 9,\n  \"entityType\": 4,\n  \"entityId\": \"occaecat Lorem exercitation\",\n  \"name\": \"ea reprehenderit cillum commodo\",\n  \"eTag\": \"sint dolor non i\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "caa68412-a65a-4e7d-8d49-44d3f039b5ea",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dbfd1b70-ffcf-429a-b609-63e28157ab1f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "860a553d-0746-4128-bc70-ec0a2d5245d3",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet cillum ut Duis\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "71695413-ca6a-481e-a35a-06ced0fd701e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ad0ea6e9-9a43-4d13-8feb-c9bf5717a5e5",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt cupidatat cillum sint dolor\",\n            \"properties\": {\n                \"name\": \"Duis non amet\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fc65386b-89cc-476c-aa19-aa16ba449630",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ex ipsum\",\n            \"properties\": {\n                \"name\": \"occaec\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"occaecat reprehenderit\",\n    \"entityETag\": \"ullamco dolor ad\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -73296855,\n      \"specialRestrictionTypeId\": -70749386,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"deserunt Excepteur nisi velit ex\",\n        \"endTime\": \"Ut enim amet commodo laborum\",\n        \"maxStay\": -59773687\n       },\n       {\n        \"startTime\": \"irure officia ea dolor\",\n        \"endTime\": \"adipisicing Ut consectetur tempor velit\",\n        \"maxStay\": 17370430\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -31367568,\n      \"specialRestrictionTypeId\": -51593119,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud\",\n        \"endTime\": \"consequat nisi\",\n        \"maxStay\": -99937412\n       },\n       {\n        \"startTime\": \"est cillum esse\",\n        \"endTime\": \"consequat adipisicing tempor\",\n        \"maxStay\": -31659477\n       }\n      ]\n     }\n    ],\n    \"distance\": 5162258.666765943\n   },\n   {\n    \"entityId\": \"dolore officia magna\",\n    \"entityETag\": \"ea ad in oc\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -36378721,\n      \"specialRestrictionTypeId\": 23244661,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"commodo et quis irure\",\n        \"endTime\": \"ut eu pariatur ex\",\n        \"maxStay\": -10556789\n       },\n       {\n        \"startTime\": \"sit exercitation quis\",\n        \"endTime\": \"enim commodo nostrud est\",\n        \"maxStay\": 3086758\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 24277052,\n      \"specialRestrictionTypeId\": 18769754,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non eu sint\",\n        \"endTime\": \"est Ut\",\n        \"maxStay\": 82606752\n       },\n       {\n        \"startTime\": \"do commodo et in\",\n        \"endTime\": \"nostrud id\",\n        \"maxStay\": -10381214\n       }\n      ]\n     }\n    ],\n    \"distance\": -24042672.387301862\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"veniam in laboris officia mollit\",\n   \"entityETag\": \"veniam aliqua\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -2504447,\n     \"specialRestrictionTypeId\": -34701586,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"laboris magna aliqua sunt\",\n       \"endTime\": \"ali\",\n       \"maxStay\": 71689247\n      },\n      {\n       \"startTime\": \"adipisicing minim\",\n       \"endTime\": \"elit\",\n       \"maxStay\": 72793891\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 69301176,\n     \"specialRestrictionTypeId\": 97319400,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"consectetur Duis velit nostrud\",\n       \"endTime\": \"laborum veniam\",\n       \"maxStay\": 81866188\n      },\n      {\n       \"startTime\": \"et sunt\",\n       \"endTime\": \"dolore non cillum irure consequat\",\n       \"maxStay\": 55663793\n      }\n     ]\n    }\n   ],\n   \"distance\": 78469077.14565146\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "271d41cc-8f39-4150-9b30-b68dc32254be",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ex ipsum\",\n            \"properties\": {\n                \"name\": \"occaec\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0265755a-8179-4717-bcc1-aec59f46e6b1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ex ipsum\",\n            \"properties\": {\n                \"name\": \"occaec\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1d0c26b0-7eb7-4e8d-95ac-b9ab105ed205",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ex ipsum\",\n            \"properties\": {\n                \"name\": \"occaec\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "db7e66a7-e598-4523-b034-10f82ad94cab",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ex ipsum\",\n            \"properties\": {\n                \"name\": \"occaec\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f54f21fb-91c5-4b25-9f00-cf21bf389031",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "5fb0d484-515e-4507-8259-4b216e4c992d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"am\",\n      \"city\": \"laboris eiusmod eu\",\n      \"country\": \"proident ut\",\n      \"postcode\": \"laborum consectetur ut enim pariatur\"\n     },\n     \"locationCode\": \"nulla velit aliquip voluptate mollit\",\n     \"totalCapacity\": 19177057,\n     \"zoneId\": \"commodo esse\",\n     \"authorityId\": \"et fugiat\",\n     \"features\": {\n      \"type\": \"aliquip ad Excepteur qui ullamco\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut laborum mollit elit\",\n           \"crs\": {\n            \"type\": \"non irure magna\",\n            \"properties\": {\n             \"name\": \"Excepteur non\"\n            }\n           }\n          },\n          {\n           \"type\": \"incididu\",\n           \"crs\": {\n            \"type\": \"nulla laborum\",\n            \"properties\": {\n             \"name\": \"ut dolor mollit eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore anim in ex\",\n         \"crs\": {\n          \"type\": \"velit deserunt Ut\",\n          \"properties\": {\n           \"name\": \"Duis tempor\"\n          }\n         }\n        },\n        \"type\": \"sed ipsum occaecat pariatur ut\",\n        \"id\": \"nisi pariatur in\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nulla nisi officia\",\n           \"crs\": {\n            \"type\": \"pariatur sint proident reprehenderit\",\n            \"properties\": {\n             \"name\": \"dolore incididunt ut in\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris cup\",\n           \"crs\": {\n            \"type\": \"irure enim commodo\",\n            \"properties\": {\n             \"name\": \"ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"consequat in consectetur\",\n         \"crs\": {\n          \"type\": \"et cillum\",\n          \"properties\": {\n           \"name\": \"irure adipisicing pariatur ut\"\n          }\n         }\n        },\n        \"type\": \"eiusmod et\",\n        \"id\": \"mollit reprehenderit cup\"\n       }\n      ],\n      \"properties\": \"ipsum aliqua qui magna\"\n     },\n     \"paymentMethodIds\": [\n      -37081566,\n      13129566\n     ],\n     \"entityId\": \"dolore\",\n     \"entityType\": 3,\n     \"name\": \"ad veniam\",\n     \"eTag\": \"et aliquip\"\n    },\n    \"distance\": 49668012.86774084\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"velit ullamco\",\n      \"city\": \"exercitation d\",\n      \"country\": \"officia ex irure\",\n      \"postcode\": \"dolor voluptate\"\n     },\n     \"locationCode\": \"non cupidatat\",\n     \"totalCapacity\": -35001936,\n     \"zoneId\": \"Excepteur proident in amet\",\n     \"authorityId\": \"mollit dolor\",\n     \"features\": {\n      \"type\": \"id qui ullamco ea\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"culpa voluptate\",\n           \"crs\": {\n            \"type\": \"fugiat dolore eiusmod officia Excepteur\",\n            \"properties\": {\n             \"name\": \"sed nostrud proident veniam officia\"\n            }\n           }\n          },\n          {\n           \"type\": \"labore eu ut\",\n           \"crs\": {\n            \"type\": \"eu ipsum sint\",\n            \"properties\": {\n             \"name\": \"cillum Duis non laborum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore esse deserunt in\",\n         \"crs\": {\n          \"type\": \"id consequat laboris cupidatat\",\n          \"properties\": {\n           \"name\": \"nulla fugiat\"\n          }\n         }\n        },\n        \"type\": \"non qui amet pariatur\",\n        \"id\": \"mollit reprehenderit sed\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"irure laboris\",\n           \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n             \"name\": \"qui eiusmod in\"\n            }\n           }\n          },\n          {\n           \"type\": \"culpa aliquip dolore deserunt elit\",\n           \"crs\": {\n            \"type\": \"in deserunt minim pariatur\",\n            \"properties\": {\n             \"name\": \"labore mollit fugiat consectetur\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim sint est\",\n         \"crs\": {\n          \"type\": \"Duis in Lorem magna dolore\",\n          \"properties\": {\n           \"name\": \"Duis\"\n          }\n         }\n        },\n        \"type\": \"nostrud\",\n        \"id\": \"deserunt ad fugiat\"\n       }\n      ],\n      \"properties\": \"Ut magna c\"\n     },\n     \"paymentMethodIds\": [\n      7694041,\n      -82854926\n     ],\n     \"entityId\": \"aliqua officia nisi Duis\",\n     \"entityType\": 3,\n     \"name\": \"aliqui\",\n     \"eTag\": \"qui aliquip\"\n    },\n    \"distance\": -62250529.87147994\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b7756539-3819-47fd-af41-00f0252faee4",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "61f50045-0178-4bf7-bfce-7dbcd4eb1fd2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b48d7a3e-6115-425a-9165-92fcd5de0884",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c081c781-f292-4eea-a19f-18d1ba1ee16a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "dbe1d5cd-1357-4ec7-8c18-2e2b4903ed21",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor dolore non\",\n            \"properties\": {\n                \"name\": \"pariatur sed exercitation id of\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "e0fbfa05-37bb-4c96-9a71-2fce848ae85a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea nisi\",\n            \"properties\": {\n                \"name\": \"incid\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"am\",\n      \"city\": \"laboris eiusmod eu\",\n      \"country\": \"proident ut\",\n      \"postcode\": \"laborum consectetur ut enim pariatur\"\n     },\n     \"locationCode\": \"nulla velit aliquip voluptate mollit\",\n     \"totalCapacity\": 19177057,\n     \"zoneId\": \"commodo esse\",\n     \"authorityId\": \"et fugiat\",\n     \"features\": {\n      \"type\": \"aliquip ad Excepteur qui ullamco\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut laborum mollit elit\",\n           \"crs\": {\n            \"type\": \"non irure magna\",\n            \"properties\": {\n             \"name\": \"Excepteur non\"\n            }\n           }\n          },\n          {\n           \"type\": \"incididu\",\n           \"crs\": {\n            \"type\": \"nulla laborum\",\n            \"properties\": {\n             \"name\": \"ut dolor mollit eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore anim in ex\",\n         \"crs\": {\n          \"type\": \"velit deserunt Ut\",\n          \"properties\": {\n           \"name\": \"Duis tempor\"\n          }\n         }\n        },\n        \"type\": \"sed ipsum occaecat pariatur ut\",\n        \"id\": \"nisi pariatur in\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nulla nisi officia\",\n           \"crs\": {\n            \"type\": \"pariatur sint proident reprehenderit\",\n            \"properties\": {\n             \"name\": \"dolore incididunt ut in\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris cup\",\n           \"crs\": {\n            \"type\": \"irure enim commodo\",\n            \"properties\": {\n             \"name\": \"ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"consequat in consectetur\",\n         \"crs\": {\n          \"type\": \"et cillum\",\n          \"properties\": {\n           \"name\": \"irure adipisicing pariatur ut\"\n          }\n         }\n        },\n        \"type\": \"eiusmod et\",\n        \"id\": \"mollit reprehenderit cup\"\n       }\n      ],\n      \"properties\": \"ipsum aliqua qui magna\"\n     },\n     \"paymentMethodIds\": [\n      -37081566,\n      13129566\n     ],\n     \"entityId\": \"dolore\",\n     \"entityType\": 3,\n     \"name\": \"ad veniam\",\n     \"eTag\": \"et aliquip\"\n    },\n    \"distance\": 49668012.86774084\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"velit ullamco\",\n      \"city\": \"exercitation d\",\n      \"country\": \"officia ex irure\",\n      \"postcode\": \"dolor voluptate\"\n     },\n     \"locationCode\": \"non cupidatat\",\n     \"totalCapacity\": -35001936,\n     \"zoneId\": \"Excepteur proident in amet\",\n     \"authorityId\": \"mollit dolor\",\n     \"features\": {\n      \"type\": \"id qui ullamco ea\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"culpa voluptate\",\n           \"crs\": {\n            \"type\": \"fugiat dolore eiusmod officia Excepteur\",\n            \"properties\": {\n             \"name\": \"sed nostrud proident veniam officia\"\n            }\n           }\n          },\n          {\n           \"type\": \"labore eu ut\",\n           \"crs\": {\n            \"type\": \"eu ipsum sint\",\n            \"properties\": {\n             \"name\": \"cillum Duis non laborum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore esse deserunt in\",\n         \"crs\": {\n          \"type\": \"id consequat laboris cupidatat\",\n          \"properties\": {\n           \"name\": \"nulla fugiat\"\n          }\n         }\n        },\n        \"type\": \"non qui amet pariatur\",\n        \"id\": \"mollit reprehenderit sed\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"irure laboris\",\n           \"crs\": {\n            \"type\": \"adipisic\",\n            \"properties\": {\n             \"name\": \"qui eiusmod in\"\n            }\n           }\n          },\n          {\n           \"type\": \"culpa aliquip dolore deserunt elit\",\n           \"crs\": {\n            \"type\": \"in deserunt minim pariatur\",\n            \"properties\": {\n             \"name\": \"labore mollit fugiat consectetur\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim sint est\",\n         \"crs\": {\n          \"type\": \"Duis in Lorem magna dolore\",\n          \"properties\": {\n           \"name\": \"Duis\"\n          }\n         }\n        },\n        \"type\": \"nostrud\",\n        \"id\": \"deserunt ad fugiat\"\n       }\n      ],\n      \"properties\": \"Ut magna c\"\n     },\n     \"paymentMethodIds\": [\n      7694041,\n      -82854926\n     ],\n     \"entityId\": \"aliqua officia nisi Duis\",\n     \"entityType\": 3,\n     \"name\": \"aliqui\",\n     \"eTag\": \"qui aliquip\"\n    },\n    \"distance\": -62250529.87147994\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "39a889a2-3682-43b9-9f47-d0073370f1e7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea nisi\",\n            \"properties\": {\n                \"name\": \"incid\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "911e377d-0c32-4c10-b62f-a5a71c3ded86",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea nisi\",\n            \"properties\": {\n                \"name\": \"incid\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "81985a21-9e1f-4529-a3bc-a89b883bc37b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea nisi\",\n            \"properties\": {\n                \"name\": \"incid\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d01ee6a9-14a7-4ab6-aa12-c81ddaff9eb5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea nisi\",\n            \"properties\": {\n                \"name\": \"incid\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6454fe79-97df-4cbf-839c-871d7def8e01",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6e3421ef-a4ae-44ea-b15d-2d20d7ed4e4a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"quis do Ut irure anim\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ullamco sunt ex id\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -44495306.89843768,\n      \"currency\": \"ipsum sint\",\n      \"minCost\": -16567388.026234299,\n      \"minStayUntil\": \"sed nulla\",\n      \"canExtendUntil\": \"pariatur sint\",\n      \"pricedUntil\": \"elit reprehenderit D\",\n      \"noReturnUntil\": \"sunt consequat veniam anim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -45579767,\n       34518991\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cillum\",\n      \"surcharge\": {\n       \"value\": -16052375.19157128,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -43131777\n       }\n      }\n     },\n     {\n      \"cost\": -29131109.064963967,\n      \"currency\": \"ad eiusmod reprehenderit ut\",\n      \"minCost\": -21388315.22970949,\n      \"minStayUntil\": \"deserunt ut\",\n      \"canExtendUntil\": \"veniam cillum elit deserunt officia\",\n      \"pricedUntil\": \"sint\",\n      \"noReturnUntil\": \"ad non laborum in\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       50272613,\n       -10189639\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat et\",\n      \"surcharge\": {\n       \"value\": 40847393.243721366,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 49527384\n       }\n      }\n     }\n    ],\n    \"distance\": -46844927.334841914,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -54812522,\n      28901422\n     ]\n    },\n    \"entityETag\": \"est culpa eiusmod cupidatat\"\n   },\n   {\n    \"entityId\": \"labore veniam ex\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 16146119.693335414,\n      \"currency\": \"ea anim elit\",\n      \"minCost\": -32214100.4128972,\n      \"minStayUntil\": \"dolor quis nostrud sit nisi\",\n      \"canExtendUntil\": \"cupidatat qui quis\",\n      \"pricedUntil\": \"non sed sit\",\n      \"noReturnUntil\": \"voluptate aute\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       63956331,\n       -16996792\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor incididunt cillum do\",\n      \"surcharge\": {\n       \"value\": 47298159.20459771,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 30725524\n       }\n      }\n     },\n     {\n      \"cost\": 71266848.05774108,\n      \"currency\": \"do veniam est\",\n      \"minCost\": -13079172.719620183,\n      \"minStayUntil\": \"id ex\",\n      \"canExtendUntil\": \"Duis in exercitation voluptate adipisicing\",\n      \"pricedUntil\": \"dolore\",\n      \"noReturnUntil\": \"magna dolor sunt sit\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       79003041,\n       -32124801\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat\",\n      \"surcharge\": {\n       \"value\": -87293747.01135977,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59568864\n       }\n      }\n     }\n    ],\n    \"distance\": 79147841.57139438,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -85643606,\n      -32416779\n     ]\n    },\n    \"entityETag\": \"eu reprehenderit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1bf27d7f-63f9-4cf7-a62c-b2dad40494e7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "957924a2-a41f-424d-9977-75051627eecb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ed741378-d7b1-4648-bf20-782646efc96e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4a8233ed-1999-454f-b391-b9c35b1bb147",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e6c7ef64-0d41-4498-b859-7428714da984",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore nulla\",\n            \"properties\": {\n                \"name\": \"laboris sint ex par\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "441cb78a-6e6e-4abb-b5df-ee23f802ae15",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute\",\n            \"properties\": {\n                \"name\": \"elit dolor magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"quis do Ut irure anim\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ullamco sunt ex id\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -44495306.89843768,\n      \"currency\": \"ipsum sint\",\n      \"minCost\": -16567388.026234299,\n      \"minStayUntil\": \"sed nulla\",\n      \"canExtendUntil\": \"pariatur sint\",\n      \"pricedUntil\": \"elit reprehenderit D\",\n      \"noReturnUntil\": \"sunt consequat veniam anim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -45579767,\n       34518991\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cillum\",\n      \"surcharge\": {\n       \"value\": -16052375.19157128,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -43131777\n       }\n      }\n     },\n     {\n      \"cost\": -29131109.064963967,\n      \"currency\": \"ad eiusmod reprehenderit ut\",\n      \"minCost\": -21388315.22970949,\n      \"minStayUntil\": \"deserunt ut\",\n      \"canExtendUntil\": \"veniam cillum elit deserunt officia\",\n      \"pricedUntil\": \"sint\",\n      \"noReturnUntil\": \"ad non laborum in\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       50272613,\n       -10189639\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat et\",\n      \"surcharge\": {\n       \"value\": 40847393.243721366,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 49527384\n       }\n      }\n     }\n    ],\n    \"distance\": -46844927.334841914,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -54812522,\n      28901422\n     ]\n    },\n    \"entityETag\": \"est culpa eiusmod cupidatat\"\n   },\n   {\n    \"entityId\": \"labore veniam ex\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 16146119.693335414,\n      \"currency\": \"ea anim elit\",\n      \"minCost\": -32214100.4128972,\n      \"minStayUntil\": \"dolor quis nostrud sit nisi\",\n      \"canExtendUntil\": \"cupidatat qui quis\",\n      \"pricedUntil\": \"non sed sit\",\n      \"noReturnUntil\": \"voluptate aute\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       63956331,\n       -16996792\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor incididunt cillum do\",\n      \"surcharge\": {\n       \"value\": 47298159.20459771,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 30725524\n       }\n      }\n     },\n     {\n      \"cost\": 71266848.05774108,\n      \"currency\": \"do veniam est\",\n      \"minCost\": -13079172.719620183,\n      \"minStayUntil\": \"id ex\",\n      \"canExtendUntil\": \"Duis in exercitation voluptate adipisicing\",\n      \"pricedUntil\": \"dolore\",\n      \"noReturnUntil\": \"magna dolor sunt sit\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       79003041,\n       -32124801\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat\",\n      \"surcharge\": {\n       \"value\": -87293747.01135977,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -59568864\n       }\n      }\n     }\n    ],\n    \"distance\": 79147841.57139438,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -85643606,\n      -32416779\n     ]\n    },\n    \"entityETag\": \"eu reprehenderit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cca04a03-ff70-4718-a4cd-f0a746a50f1a",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute\",\n            \"properties\": {\n                \"name\": \"elit dolor magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "14bebdc2-b372-43bd-a8a0-95bfbf3e7cd2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute\",\n            \"properties\": {\n                \"name\": \"elit dolor magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2a1cbb52-2994-4b87-92a5-96df870f1997",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute\",\n            \"properties\": {\n                \"name\": \"elit dolor magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d98f650b-b82a-470d-8407-cfa96c60ecf7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute\",\n            \"properties\": {\n                \"name\": \"elit dolor magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e0ebb3a0-0715-476d-ba42-073388f6d6ef",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ea est consectetur tempor\",\n            \"properties\": {\n                \"name\": \"veniam in ut aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "d8316cc4-12d4-4c25-b229-df2e85316bda",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"dolor veniam d\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"incididunt tempor sed veniam\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"dolor qui est\",\n     \"crs\": {\n      \"type\": \"magna culpa ipsum occaecat\",\n      \"properties\": {\n       \"name\": \"et\"\n      }\n     }\n    },\n    \"type\": \"ut nostrud et\",\n    \"id\": \"commodo elit nulla voluptate\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"minim\",\n     \"crs\": {\n      \"type\": \"sint in minim id\",\n      \"properties\": {\n       \"name\": \"sit id\"\n      }\n     }\n    },\n    \"type\": \"Ut ex culpa\",\n    \"id\": \"laborum dolore cillum eu\"\n   }\n  ],\n  \"properties\": \"id ad Duis nulla aliqua\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7d4aad2f-0764-4d54-bd46-facfdf15bc48",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"dolor veniam d\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e0fff7ad-d1ea-4565-ac67-15ae90000bf5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"dolor veniam d\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "01d933a4-0474-49a1-b6e3-95642089b31d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"dolor veniam d\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "25e35556-0193-4fcb-a02b-c905715ef0df",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"dolor veniam d\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "3bd89b2f-0a80-4600-b850-3e4ead72b000",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"irure amet ex\",\n            \"properties\": {\n                \"name\": \"laboris ipsum quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "41d8e7b6-88fa-40ec-8109-fc5406689849",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"velit eiusmod eu Lorem\",\n            \"properties\": {\n                \"name\": \"nisi do labore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"occaecat reprehenderit\",\n    \"entityETag\": \"ullamco dolor ad\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -73296855,\n      \"specialRestrictionTypeId\": -70749386,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"deserunt Excepteur nisi velit ex\",\n        \"endTime\": \"Ut enim amet commodo laborum\",\n        \"maxStay\": -59773687\n       },\n       {\n        \"startTime\": \"irure officia ea dolor\",\n        \"endTime\": \"adipisicing Ut consectetur tempor velit\",\n        \"maxStay\": 17370430\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -31367568,\n      \"specialRestrictionTypeId\": -51593119,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud\",\n        \"endTime\": \"consequat nisi\",\n        \"maxStay\": -99937412\n       },\n       {\n        \"startTime\": \"est cillum esse\",\n        \"endTime\": \"consequat adipisicing tempor\",\n        \"maxStay\": -31659477\n       }\n      ]\n     }\n    ],\n    \"distance\": 5162258.666765943\n   },\n   {\n    \"entityId\": \"dolore officia magna\",\n    \"entityETag\": \"ea ad in oc\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -36378721,\n      \"specialRestrictionTypeId\": 23244661,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"commodo et quis irure\",\n        \"endTime\": \"ut eu pariatur ex\",\n        \"maxStay\": -10556789\n       },\n       {\n        \"startTime\": \"sit exercitation quis\",\n        \"endTime\": \"enim commodo nostrud est\",\n        \"maxStay\": 3086758\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 24277052,\n      \"specialRestrictionTypeId\": 18769754,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non eu sint\",\n        \"endTime\": \"est Ut\",\n        \"maxStay\": 82606752\n       },\n       {\n        \"startTime\": \"do commodo et in\",\n        \"endTime\": \"nostrud id\",\n        \"maxStay\": -10381214\n       }\n      ]\n     }\n    ],\n    \"distance\": -24042672.387301862\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"veniam in laboris officia mollit\",\n   \"entityETag\": \"veniam aliqua\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -2504447,\n     \"specialRestrictionTypeId\": -34701586,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"laboris magna aliqua sunt\",\n       \"endTime\": \"ali\",\n       \"maxStay\": 71689247\n      },\n      {\n       \"startTime\": \"adipisicing minim\",\n       \"endTime\": \"elit\",\n       \"maxStay\": 72793891\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 69301176,\n     \"specialRestrictionTypeId\": 97319400,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"consectetur Duis velit nostrud\",\n       \"endTime\": \"laborum veniam\",\n       \"maxStay\": 81866188\n      },\n      {\n       \"startTime\": \"et sunt\",\n       \"endTime\": \"dolore non cillum irure consequat\",\n       \"maxStay\": 55663793\n      }\n     ]\n    }\n   ],\n   \"distance\": 78469077.14565146\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "63ee9685-5575-4c03-8b1d-395f8306346c",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"velit eiusmod eu Lorem\",\n            \"properties\": {\n                \"name\": \"nisi do labore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in eu quis\",\n \"errors\": [\n  {\n   \"property\": \"enim aliqua\",\n   \"code\": \"sint\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"sit anim enim\",\n   \"code\": \"tempor Duis\",\n   \"message\": \"laboris enim \"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d57f82af-fed5-40fb-8c08-ddfe1fb56391",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"velit eiusmod eu Lorem\",\n            \"properties\": {\n                \"name\": \"nisi do labore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bc94dc9e-ef23-4d99-a8b5-0778bdad0de2",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"velit eiusmod eu Lorem\",\n            \"properties\": {\n                \"name\": \"nisi do labore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "52662631-81bd-439b-a71a-a6cbe11a8690",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"velit eiusmod eu Lorem\",\n            \"properties\": {\n                \"name\": \"nisi do labore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e828c9ee-5ceb-485b-96d3-d3fbf38c463b",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "fa73ab12-7cfb-43bf-8731-7b6932318636",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "68bfb7f0-8f34-4e62-9afa-5db6ad0ea3e6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1fe4b8f6-f516-408d-a439-9ef1c47ef681",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1d1a13dd-96a8-4653-9aa0-0a8ac3098ba2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "565edc0b-d4c9-4cfa-baca-3f9c58d2b991",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
