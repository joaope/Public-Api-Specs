{
  "item": [
    {
      "id": "abbb0573-f046-4609-a370-e850ce0db3e0",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7b2909df-b38b-4bae-9605-eede2cfcd001",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"dolor labore do exercitation dolor\"\n   },\n   {\n    \"message\": \"proident aute\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"enim fugiat\",\n    \"cardPaymentsExternalUrl\": \"aliqua ullamco eiusmod\",\n    \"paymentsTelephone\": \"dolore sint ipsum\"\n   },\n   {\n    \"name\": \"aute irure\",\n    \"cardPaymentsExternalUrl\": \"in\",\n    \"paymentsTelephone\": \"adipisicing magna labore\"\n   }\n  ],\n  \"entityType\": 1,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"commodo\",\n     \"crs\": {\n      \"type\": \"ullamco\",\n      \"properties\": {\n       \"name\": \"reprehenderit deserunt consequat\"\n      }\n     }\n    },\n    {\n     \"type\": \"Ut dolore\",\n     \"crs\": {\n      \"type\": \"deserunt cupidatat velit magna\",\n      \"properties\": {\n       \"name\": \"ex non aliquip\"\n      }\n     }\n    }\n   ],\n   \"type\": \"dolor consectetur\",\n   \"crs\": {\n    \"type\": \"velit aliqua sunt\",\n    \"properties\": {\n     \"name\": \"aliquip labore ut laborum\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"est ea cillum reprehenderit aute\",\n  \"name\": \"minim dolor in fugiat\",\n  \"eTag\": \"ea sit\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f967a504-80cc-45ca-87e4-c98f99ad0816",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "439acfc6-d0fa-469c-b681-75751546948a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cc2b3981-6c2e-4793-8e42-0634ea582c9c",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla Ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e3609280-0839-444d-9e2d-25b6e300bad8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1e87301d-be1d-4bc3-9fd0-3c3a285f9880",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "eb1d6a88-e1c2-4799-95e1-ccd49546e567",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"anim reprehenderit\",\n     \"city\": \"occaecat laboris\",\n     \"country\": \"sint pariatur qui\",\n     \"postcode\": \"exercit\"\n    },\n    \"locationCode\": \"eu\",\n    \"totalCapacity\": -88044205,\n    \"zoneId\": \"nostrud voluptate dolor irure\",\n    \"authorityId\": \"nostrud sunt\",\n    \"features\": {\n     \"type\": \"elit cillum nulla amet\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"sed qui ut dolore\",\n          \"crs\": {\n           \"type\": \"non eu\",\n           \"properties\": {\n            \"name\": \"aliqua officia ipsum\"\n           }\n          }\n         },\n         {\n          \"type\": \"sint aute laborum quis\",\n          \"crs\": {\n           \"type\": \"laborum ad\",\n           \"properties\": {\n            \"name\": \"commodo deserunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"velit aliqua ut Excepteur\",\n        \"crs\": {\n         \"type\": \"consectetur sit\",\n         \"properties\": {\n          \"name\": \"dolore culpa\"\n         }\n        }\n       },\n       \"type\": \"sint Duis in\",\n       \"id\": \"id officia\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"tempor dolore laboris esse in\",\n          \"crs\": {\n           \"type\": \"occaecat tempor\",\n           \"properties\": {\n            \"name\": \"irure labore aute\"\n           }\n          }\n         },\n         {\n          \"type\": \"velit sunt aliqua\",\n          \"crs\": {\n           \"type\": \"commodo minim Duis irure\",\n           \"properties\": {\n            \"name\": \"commodo Excepteur Duis mollit\"\n           }\n          }\n         }\n        ],\n        \"type\": \"occaecat pariatur\",\n        \"crs\": {\n         \"type\": \"magna commodo ut\",\n         \"properties\": {\n          \"name\": \"nulla adipisicing aute Ut\"\n         }\n        }\n       },\n       \"type\": \"non dolor \",\n       \"id\": \"id\"\n      }\n     ],\n     \"properties\": \"irure ad\"\n    },\n    \"paymentMethodIds\": [\n     71422453,\n     53546558\n    ],\n    \"entityId\": \"Duis labore mollit\",\n    \"entityType\": 1,\n    \"name\": \"eu ullamco dolor\",\n    \"eTag\": \"ut reprehenderit Ut\"\n   },\n   {\n    \"address\": {\n     \"street\": \"\",\n     \"city\": \"est\",\n     \"country\": \"velit sed\",\n     \"postcode\": \"culpa\"\n    },\n    \"locationCode\": \"voluptate tempor labore proident\",\n    \"totalCapacity\": 87878122,\n    \"zoneId\": \"velit anim\",\n    \"authorityId\": \"est irure qui cillum\",\n    \"features\": {\n     \"type\": \"velit consequat reprehenderit\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ad in\",\n          \"crs\": {\n           \"type\": \"labore\",\n           \"properties\": {\n            \"name\": \"ea quis\"\n           }\n          }\n         },\n         {\n          \"type\": \"\",\n          \"crs\": {\n           \"type\": \"enim culpa ex\",\n           \"properties\": {\n            \"name\": \"ut minim in in magna\"\n           }\n          }\n         }\n        ],\n        \"type\": \"\",\n        \"crs\": {\n         \"type\": \"sint dolore et aliquip\",\n         \"properties\": {\n          \"name\": \"minim veniam\"\n         }\n        }\n       },\n       \"type\": \"commodo dolore sint et\",\n       \"id\": \"occaecat dolore nisi\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"et dolor\",\n          \"crs\": {\n           \"type\": \"sed amet\",\n           \"properties\": {\n            \"name\": \"Ut eiusmod consectetur est\"\n           }\n          }\n         },\n         {\n          \"type\": \"irure velit pariatur officia\",\n          \"crs\": {\n           \"type\": \"sed dolor consectetur consequat dolor\",\n           \"properties\": {\n            \"name\": \"quis deserunt Lorem Excepteur elit\"\n           }\n          }\n         }\n        ],\n        \"type\": \"deserunt ex\",\n        \"crs\": {\n         \"type\": \"enim id\",\n         \"properties\": {\n          \"name\": \"volup\"\n         }\n        }\n       },\n       \"type\": \"eiusmod aliquip consequat ut\",\n       \"id\": \"voluptate Duis con\"\n      }\n     ],\n     \"properties\": \"labore consectetur reprehenderit\"\n    },\n    \"paymentMethodIds\": [\n     -37762934,\n     -12057205\n    ],\n    \"entityId\": \"in pariatur proident est\",\n    \"entityType\": 4,\n    \"name\": \"qui\",\n    \"eTag\": \"est dolore aliquip minim elit\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"pariatur voluptate sit cillum et\",\n       \"crs\": {\n        \"type\": \"exercitation eiusmod\",\n        \"properties\": {\n         \"name\": \"nisi Lorem labore deserunt eu\"\n        }\n       }\n      },\n      {\n       \"type\": \"ad elit tempor occaecat\",\n       \"crs\": {\n        \"type\": \"enim incididunt nisi in\",\n        \"properties\": {\n         \"name\": \"mag\"\n        }\n       }\n      }\n     ],\n     \"type\": \"commodo aut\",\n     \"crs\": {\n      \"type\": \"dolor aliquip Ut voluptate\",\n      \"properties\": {\n       \"name\": \"laboris quis est mollit\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"aute dolore dolore exercitation\"\n     },\n     {\n      \"message\": \"Duis proident eiusmod esse ut\"\n     }\n    ],\n    \"authorityId\": \"laboris esse reprehenderit\",\n    \"zoneType\": 4,\n    \"entityType\": 1,\n    \"entityId\": \"proident ex tempor do\",\n    \"name\": \"adipisicing deserunt ullamco\",\n    \"eTag\": \"eiusmod magna adipisicing laborum\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"eiusmod\",\n       \"crs\": {\n        \"type\": \"aute sunt est\",\n        \"properties\": {\n         \"name\": \"exercitation dolore sed\"\n        }\n       }\n      },\n      {\n       \"type\": \"enim voluptate nisi\",\n       \"crs\": {\n        \"type\": \"adipisicing non\",\n        \"properties\": {\n         \"name\": \"esse labore sint reprehenderit\"\n        }\n       }\n      }\n     ],\n     \"type\": \"incididunt in in aute\",\n     \"crs\": {\n      \"type\": \"exercitation sit\",\n      \"properties\": {\n       \"name\": \"consectetur officia aute\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"anim est\"\n     },\n     {\n      \"message\": \"reprehenderit\"\n     }\n    ],\n    \"authorityId\": \"tempor ex Excepteur amet\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"nulla commodo proident culpa\",\n    \"name\": \"nisi qui\",\n    \"eTag\": \"consequat Duis id qui dolor\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"in adipisicing\"\n     },\n     {\n      \"message\": \"consectetur in Duis ut incididunt\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"incididunt consequat id laboris\",\n      \"cardPaymentsExternalUrl\": \"Ut ull\",\n      \"paymentsTelephone\": \"veniam ut\"\n     },\n     {\n      \"name\": \"ipsum\",\n      \"cardPaymentsExternalUrl\": \"non adipisicing dolor\",\n      \"paymentsTelephone\": \"nisi labore do Ut\"\n     }\n    ],\n    \"entityType\": 3,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ea aliquip nisi\",\n       \"crs\": {\n        \"type\": \"qui deserunt\",\n        \"properties\": {\n         \"name\": \"nulla co\"\n        }\n       }\n      },\n      {\n       \"type\": \"cupidatat culpa ea dolore\",\n       \"crs\": {\n        \"type\": \"exer\",\n        \"properties\": {\n         \"name\": \"nulla commodo dolor aliqua adipisicing\"\n        }\n       }\n      }\n     ],\n     \"type\": \"pariatur Lorem\",\n     \"crs\": {\n      \"type\": \"in dolor cillum\",\n      \"properties\": {\n       \"name\": \"ad quis amet\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"dolor eiusmod\",\n    \"name\": \"labore enim in elit\",\n    \"eTag\": \"dolore culpa re\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"elit\"\n     },\n     {\n      \"message\": \"ad commodo dolor\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"occaecat tempor\",\n      \"cardPaymentsExternalUrl\": \"eiusmod labore deser\",\n      \"paymentsTelephone\": \"dolore\"\n     },\n     {\n      \"name\": \"aliquip fugiat non ad\",\n      \"cardPaymentsExternalUrl\": \"in\",\n      \"paymentsTelephone\": \"et nostrud\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"adipisicing exercitation\",\n       \"crs\": {\n        \"type\": \"do\",\n        \"properties\": {\n         \"name\": \"Duis commodo nisi nostrud\"\n        }\n       }\n      },\n      {\n       \"type\": \"do laboris proident enim ex\",\n       \"crs\": {\n        \"type\": \"in non id deserunt\",\n        \"properties\": {\n         \"name\": \"quis ex\"\n        }\n       }\n      }\n     ],\n     \"type\": \"qui velit do irure\",\n     \"crs\": {\n      \"type\": \"Lorem sunt in dolor\",\n      \"properties\": {\n       \"name\": \"ipsum magna ut\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"commodo cupidatat\",\n    \"name\": \"proident quis reprehenderit nisi\",\n    \"eTag\": \"ea\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "12d0ab19-2ff5-4998-afdc-b96aa7919267",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"deserunt et\",\n \"errors\": [\n  {\n   \"property\": \"eu nisi in\",\n   \"code\": \"tempor pariatur ut\",\n   \"message\": \"consequat dolore veniam irure\"\n  },\n  {\n   \"property\": \"amet\",\n   \"code\": \"commodo Excepteur\",\n   \"message\": \"adipisicing\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8f79d4f5-1bbb-4e6f-96a0-c37f1e8241a3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fda19e20-90e2-4b20-9c11-dc8f0778353e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "04b95bea-8a5e-430a-8ec3-726356fe800a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d876fc9c-fa0f-423a-bc0a-0b8978cd09e3",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "fab38e24-f133-4282-a736-fbece2dc6356",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"ut sed fugiat ex\",\n   \"city\": \"aute aliqua Excepteur eu velit\",\n   \"country\": \"ullamco et Ut\",\n   \"postcode\": \"ipsum ex eiusmod non aliqua\"\n  },\n  \"locationCode\": \"nisi qui sunt\",\n  \"totalCapacity\": -34751793,\n  \"zoneId\": \"voluptate aute do non occaecat\",\n  \"authorityId\": \"aute\",\n  \"features\": {\n   \"type\": \"dolore id Duis\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"quis adipisicing\",\n        \"crs\": {\n         \"type\": \"labore laboris\",\n         \"properties\": {\n          \"name\": \"velit commodo adipisicing est\"\n         }\n        }\n       },\n       {\n        \"type\": \"fugiat adipisicing cupidatat officia\",\n        \"crs\": {\n         \"type\": \"in do\",\n         \"properties\": {\n          \"name\": \"veniam\"\n         }\n        }\n       }\n      ],\n      \"type\": \"ad cupidatat\",\n      \"crs\": {\n       \"type\": \"nulla pariatur veniam esse\",\n       \"properties\": {\n        \"name\": \"laborum nisi\"\n       }\n      }\n     },\n     \"type\": \"si\",\n     \"id\": \"non sint\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"sit\",\n        \"crs\": {\n         \"type\": \"in aliquip\",\n         \"properties\": {\n          \"name\": \"cillum non ad\"\n         }\n        }\n       },\n       {\n        \"type\": \"aliqua elit\",\n        \"crs\": {\n         \"type\": \"aute sed\",\n         \"properties\": {\n          \"name\": \"amet Lorem\"\n         }\n        }\n       }\n      ],\n      \"type\": \"quis nulla\",\n      \"crs\": {\n       \"type\": \"aliquip ad dolore mag\",\n       \"properties\": {\n        \"name\": \"veniam\"\n       }\n      }\n     },\n     \"type\": \"minim laboris Duis consequat\",\n     \"id\": \"Excepteur ad\"\n    }\n   ],\n   \"properties\": \"amet dolore quis\"\n  },\n  \"paymentMethodIds\": [\n   -25443097,\n   20295252\n  ],\n  \"entityId\": \"in aliqua\",\n  \"entityType\": 1,\n  \"name\": \"adipisicing in elit\",\n  \"eTag\": \"dolor eiusmod consectetur dolore\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e74338fc-951f-4692-9dc8-b7e3a3228eec",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2b27b39e-001b-47ff-becc-99492fba1a18",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "609da65b-b6f2-4823-8c28-fd7c4289df43",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla Ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0025eabf-dcab-4e1d-af13-9ae878236131",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c485574f-8704-4b62-80da-70751c8edcc6",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "5f7daa1b-5144-4388-a98f-e3e464401b18",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"commodo non\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": 27564417.875324175,\n    \"currency\": \"aliqua\",\n    \"minCost\": -59108894.61044788,\n    \"minStayUntil\": \"in\",\n    \"canExtendUntil\": \"laboris ea nostrud do\",\n    \"pricedUntil\": \"ullamco qui culpa dolore Duis\",\n    \"noReturnUntil\": \"deserunt tempor e\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     20690546,\n     -94349269\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"anim officia\",\n    \"surcharge\": {\n     \"value\": 4392713.838695839,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -1491200\n     }\n    }\n   },\n   {\n    \"cost\": -72845237.65212435,\n    \"currency\": \"ad dolore\",\n    \"minCost\": -45116492.30573824,\n    \"minStayUntil\": \"sunt laboris cupidatat esse\",\n    \"canExtendUntil\": \"in consectetur aute commodo reprehenderit\",\n    \"pricedUntil\": \"ad pariatur ullamco\",\n    \"noReturnUntil\": \"sit ea dolore\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     91386901,\n     -67987266\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ipsum ul\",\n    \"surcharge\": {\n     \"value\": 33278411.739939168,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 15178765\n     }\n    }\n   }\n  ],\n  \"distance\": -78881520.96960872,\n  \"parkingAllowed\": 3,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -55142758,\n    -90069814\n   ]\n  },\n  \"entityETag\": \"ex id qui sed\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1f440013-ee28-4a35-9d4a-2f127e74802c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a885d448-2ab5-412f-b30b-083657e18ee4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "13625ead-dd4d-46a8-8726-3f99460f1b05",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla Ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "07db64ac-3f32-405e-8236-c62d5ba26251",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e4bf129a-1a30-4453-b748-eb2d43fb7747",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "00bfff44-3daf-426f-a58d-75290aad1a83",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"sed\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"in amet occaecat\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -93241980.80724914,\n      \"currency\": \"deserunt occaecat\",\n      \"minCost\": 85141314.60057795,\n      \"minStayUntil\": \"tempor\",\n      \"canExtendUntil\": \"sed velit est dolor\",\n      \"pricedUntil\": \"ut irure anim id\",\n      \"noReturnUntil\": \"pariatur\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -69109234,\n       -29774260\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris cillum exercitation occaecat est\",\n      \"surcharge\": {\n       \"value\": -44580911.346094124,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 51935655\n       }\n      }\n     },\n     {\n      \"cost\": -95283631.1678725,\n      \"currency\": \"voluptate\",\n      \"minCost\": -14705413.045611456,\n      \"minStayUntil\": \"aute ad qui sunt\",\n      \"canExtendUntil\": \"occaeca\",\n      \"pricedUntil\": \"amet\",\n      \"noReturnUntil\": \"cupidatat deserunt non consectetur Ut\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -38259982,\n       42669639\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"fugiat eiusmod voluptate\",\n      \"surcharge\": {\n       \"value\": 29082204.349623322,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 62116290\n       }\n      }\n     }\n    ],\n    \"distance\": -83307955.87426718,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -47162990,\n      73488520\n     ]\n    },\n    \"entityETag\": \"sint occaecat Duis nisi\"\n   },\n   {\n    \"entityId\": \"Lorem voluptate Duis\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -29616753.356641382,\n      \"currency\": \"fugiat aliqua non sit et\",\n      \"minCost\": 6021905.835348159,\n      \"minStayUntil\": \"dolor aliquip sint\",\n      \"canExtendUntil\": \"cupidatat\",\n      \"pricedUntil\": \"ullamco mollit dolore\",\n      \"noReturnUntil\": \"nisi aute sed\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -51724831,\n       -12569435\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ad commodo amet\",\n      \"surcharge\": {\n       \"value\": 78208410.43584171,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -29962687\n       }\n      }\n     },\n     {\n      \"cost\": 17819548.194202513,\n      \"currency\": \"irure aute eiusmod veniam\",\n      \"minCost\": -83938387.15920347,\n      \"minStayUntil\": \"labore in voluptate fugiat est\",\n      \"canExtendUntil\": \"commodo dolore Duis\",\n      \"pricedUntil\": \"nulla id\",\n      \"noReturnUntil\": \"consequat nostrud dolore\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       7361096,\n       -37316777\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"velit \",\n      \"surcharge\": {\n       \"value\": -52321292.74347197,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -93870465\n       }\n      }\n     }\n    ],\n    \"distance\": -30535001.522989362,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -12377791,\n      52251111\n     ]\n    },\n    \"entityETag\": \"quis non minim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f4e66839-1897-47b0-b357-062c7bb57810",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "390dd645-6928-43e0-a134-f7e58d7fd5ef",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "35a8979f-b88f-4610-80c5-4308c6f7fb30",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "79a195d6-810b-4c8a-8ed9-d0198ea4cf2d",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8fda332e-54db-4171-98c5-8add5301772d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"nisi ex cillum enim\",\n    \"cardPaymentsExternalUrl\": \"sit aute consequat magna\",\n    \"paymentsTelephone\": \"tempor consectetur eiusmod nostrud aute\"\n   },\n   {\n    \"name\": \"esse tempor aute ma\",\n    \"cardPaymentsExternalUrl\": \"laborum deserunt occaecat\",\n    \"paymentsTelephone\": \"id\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "67511246-8243-4dc3-a2e9-b40e6f111010",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6dc1bea8-18c2-42f8-86f8-84e289debcab",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3c156885-7e44-47a8-8c50-c655af8cb92f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla Ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b2d02861-0ec6-478e-841d-02b4c0831b66",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "de5f381b-1dd2-4763-844f-f144086f70fa",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "5de626dc-9a2f-48f1-810d-91ec6b9a8107",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"mollit non\",\n     \"crs\": {\n      \"type\": \"nisi irure in exercitation\",\n      \"properties\": {\n       \"name\": \"quis dolor Duis in\"\n      }\n     }\n    },\n    {\n     \"type\": \"ea culpa cillum dolore\",\n     \"crs\": {\n      \"type\": \"consectetur aliqua sed velit\",\n      \"properties\": {\n       \"name\": \"consectetur ut ex laboris sint\"\n      }\n     }\n    }\n   ],\n   \"type\": \"nulla est\",\n   \"crs\": {\n    \"type\": \"incididunt occaecat an\",\n    \"properties\": {\n     \"name\": \"fugiat\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"Lorem adipisicing\"\n   },\n   {\n    \"message\": \"dolor\"\n   }\n  ],\n  \"authorityId\": \"aute Lorem\",\n  \"zoneType\": 3,\n  \"entityType\": 1,\n  \"entityId\": \"sunt exercitation\",\n  \"name\": \"enim officia\",\n  \"eTag\": \"ex anim aliquip ad\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d1229136-fcdc-4174-ae1d-cc4be0ae8021",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dc002b37-3e14-4fcc-8d9d-3d2d94c5adc9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5f85782b-e86f-4842-a9b9-96dbde55133d",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"nulla Ut\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7da35c57-6733-4e88-8e4e-dd3801e9bb1b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "3233efc4-3aa5-4162-946e-02ee6668b333",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"commodo Duis\",\n            \"properties\": {\n                \"name\": \"exercitation et incididunt sint\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "afcdabec-7a67-4917-a2fd-c964d3018eca",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat non anim\",\n            \"properties\": {\n                \"name\": \"commodo deserunt eiusmod aliquip\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in consectetur sit Lorem\",\n    \"entityETag\": \"laboris\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 95184441,\n      \"specialRestrictionTypeId\": -90321122,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"veniam cupidatat ex et aliqua\",\n        \"endTime\": \"id \",\n        \"maxStay\": -35641105\n       },\n       {\n        \"startTime\": \"occaecat reprehenderit Lorem\",\n        \"endTime\": \"laborum ipsum non\",\n        \"maxStay\": 16926804\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 96636990,\n      \"specialRestrictionTypeId\": 91456082,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla elit sunt Duis consequat\",\n        \"endTime\": \"Ut dolor sint\",\n        \"maxStay\": -57551027\n       },\n       {\n        \"startTime\": \"non sint veniam anim\",\n        \"endTime\": \"est esse sint\",\n        \"maxStay\": 83146741\n       }\n      ]\n     }\n    ],\n    \"distance\": -36789520.32594589\n   },\n   {\n    \"entityId\": \"dolor Duis mollit\",\n    \"entityETag\": \"mollit ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 58287502,\n      \"specialRestrictionTypeId\": 63966645,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ad labore\",\n        \"endTime\": \"consequat magna ullamco deserunt veniam\",\n        \"maxStay\": 10865198\n       },\n       {\n        \"startTime\": \"magna exercitation deserunt cillum\",\n        \"endTime\": \"officia re\",\n        \"maxStay\": 67876163\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 27652473,\n      \"specialRestrictionTypeId\": 13145663,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi elit Ut\",\n        \"endTime\": \"dolore esse dolor magna\",\n        \"maxStay\": -44512583\n       },\n       {\n        \"startTime\": \"ad pariatur consectetur et dolor\",\n        \"endTime\": \"quis ex velit tempor\",\n        \"maxStay\": 15418777\n       }\n      ]\n     }\n    ],\n    \"distance\": 67801722.39206713\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"exercitation esse quis dolore dol\",\n   \"entityETag\": \"in dolor irure veniam\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 90877789,\n     \"specialRestrictionTypeId\": 49829240,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"irure voluptate occaecat laborum\",\n       \"endTime\": \"exercitation\",\n       \"maxStay\": 11543293\n      },\n      {\n       \"startTime\": \"dolore sed sunt cillum\",\n       \"endTime\": \"consectetur nisi esse\",\n       \"maxStay\": 993111\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 93937626,\n     \"specialRestrictionTypeId\": 2195632,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nisi s\",\n       \"endTime\": \"cill\",\n       \"maxStay\": 76317298\n      },\n      {\n       \"startTime\": \"tempor irure sint sed qu\",\n       \"endTime\": \"velit cupidatat\",\n       \"maxStay\": 14736919\n      }\n     ]\n    }\n   ],\n   \"distance\": -8741729.0384534\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5af4a0e9-b0d5-4bdc-b845-87d29e540ba6",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat non anim\",\n            \"properties\": {\n                \"name\": \"commodo deserunt eiusmod aliquip\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1bb4e092-69ab-4166-9e0c-128b372b45cb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat non anim\",\n            \"properties\": {\n                \"name\": \"commodo deserunt eiusmod aliquip\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "455d65ce-64fc-4d2b-8daf-4cf43018c0c8",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat non anim\",\n            \"properties\": {\n                \"name\": \"commodo deserunt eiusmod aliquip\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "239f87e0-e6b2-4023-88c1-290f36493871",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consequat non anim\",\n            \"properties\": {\n                \"name\": \"commodo deserunt eiusmod aliquip\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5ddf45bd-7ed9-4ef4-b6ef-333f47138155",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "2ace2974-52cf-4831-857f-771f60d6e461",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"velit do\",\n      \"city\": \"laborum esse dolore Ut\",\n      \"country\": \"incididunt consectetur\",\n      \"postcode\": \"adipisicing deserunt et\"\n     },\n     \"locationCode\": \"consectetur esse amet\",\n     \"totalCapacity\": 83450244,\n     \"zoneId\": \"nisi in\",\n     \"authorityId\": \"voluptate ut id do occaecat\",\n     \"features\": {\n      \"type\": \"laborum in sed\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"minim sit\",\n           \"crs\": {\n            \"type\": \"deserunt\",\n            \"properties\": {\n             \"name\": \"voluptate adipisicing of\"\n            }\n           }\n          },\n          {\n           \"type\": \"q\",\n           \"crs\": {\n            \"type\": \"sint do\",\n            \"properties\": {\n             \"name\": \"quis dolor dolor\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do sit\",\n         \"crs\": {\n          \"type\": \"ea\",\n          \"properties\": {\n           \"name\": \"occaecat\"\n          }\n         }\n        },\n        \"type\": \"tempor nostrud nisi mollit\",\n        \"id\": \"tempor sunt esse amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"est mo\",\n           \"crs\": {\n            \"type\": \"Excepteur pariatur commodo\",\n            \"properties\": {\n             \"name\": \"Ut proi\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur incididunt est cillum\",\n           \"crs\": {\n            \"type\": \"dolore exercitation esse Excepteur ipsum\",\n            \"properties\": {\n             \"name\": \"tempor ut aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"veniam consectetur occaecat \",\n         \"crs\": {\n          \"type\": \"eu\",\n          \"properties\": {\n           \"name\": \"laborum Ut\"\n          }\n         }\n        },\n        \"type\": \"culpa exercitatio\",\n        \"id\": \"tempor\"\n       }\n      ],\n      \"properties\": \"et pariatur Duis incididunt\"\n     },\n     \"paymentMethodIds\": [\n      -98995515,\n      76678423\n     ],\n     \"entityId\": \"laboris Ut enim non ipsum\",\n     \"entityType\": 1,\n     \"name\": \"minim in\",\n     \"eTag\": \"velit consectetur in\"\n    },\n    \"distance\": 62161906.05914664\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ex\",\n      \"city\": \"elit Ut\",\n      \"country\": \"ut culpa dolore\",\n      \"postcode\": \"ut\"\n     },\n     \"locationCode\": \"ex velit reprehende\",\n     \"totalCapacity\": -64202830,\n     \"zoneId\": \"et magna mollit laborum tempor\",\n     \"authorityId\": \"non culpa reprehenderit \",\n     \"features\": {\n      \"type\": \"deserunt cill\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"in occaecat\",\n           \"crs\": {\n            \"type\": \"incididunt in\",\n            \"properties\": {\n             \"name\": \"nisi aliquip\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis non laborum ni\",\n           \"crs\": {\n            \"type\": \"dolore commodo magna\",\n            \"properties\": {\n             \"name\": \"ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do mollit\",\n         \"crs\": {\n          \"type\": \"fugiat ut qui magna\",\n          \"properties\": {\n           \"name\": \"consequat id pariatur Ut\"\n          }\n         }\n        },\n        \"type\": \"sunt enim cupidatat incididunt\",\n        \"id\": \"proident ullamco reprehenderit\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed irure dolor exercitation\",\n           \"crs\": {\n            \"type\": \"irure veniam ad\",\n            \"properties\": {\n             \"name\": \"ex est\"\n            }\n           }\n          },\n          {\n           \"type\": \"amet\",\n           \"crs\": {\n            \"type\": \"nulla ut sit\",\n            \"properties\": {\n             \"name\": \"d\"\n            }\n           }\n          }\n         ],\n         \"type\": \"amet Lorem eu dolore\",\n         \"crs\": {\n          \"type\": \"sit dolor sed\",\n          \"properties\": {\n           \"name\": \"nostrud voluptat\"\n          }\n         }\n        },\n        \"type\": \"officia ipsum ea sed\",\n        \"id\": \"Excepteur veli\"\n       }\n      ],\n      \"properties\": \"adipisicing sint velit\"\n     },\n     \"paymentMethodIds\": [\n      -72648351,\n      -62070933\n     ],\n     \"entityId\": \"occaecat sint aute ipsum\",\n     \"entityType\": 2,\n     \"name\": \"non\",\n     \"eTag\": \"commodo ut Excepteur\"\n    },\n    \"distance\": 74292381.47208762\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f62e7261-f6d7-4f30-bfad-fef8255ce22f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8d52b36f-e6a2-4a46-9c59-07761eef640e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "281894ef-d7df-4072-af3c-56677561002e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d6765c1b-2b0d-4dbd-9960-2c383eee0341",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5cf5279d-2607-4e5a-b853-8eefb5f6a2eb",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sit magna ad veniam\",\n            \"properties\": {\n                \"name\": \"magna ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "d4a96c56-4968-4118-b776-53ccad39f8de",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor sunt\",\n            \"properties\": {\n                \"name\": \"consectetur vol\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"velit do\",\n      \"city\": \"laborum esse dolore Ut\",\n      \"country\": \"incididunt consectetur\",\n      \"postcode\": \"adipisicing deserunt et\"\n     },\n     \"locationCode\": \"consectetur esse amet\",\n     \"totalCapacity\": 83450244,\n     \"zoneId\": \"nisi in\",\n     \"authorityId\": \"voluptate ut id do occaecat\",\n     \"features\": {\n      \"type\": \"laborum in sed\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"minim sit\",\n           \"crs\": {\n            \"type\": \"deserunt\",\n            \"properties\": {\n             \"name\": \"voluptate adipisicing of\"\n            }\n           }\n          },\n          {\n           \"type\": \"q\",\n           \"crs\": {\n            \"type\": \"sint do\",\n            \"properties\": {\n             \"name\": \"quis dolor dolor\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do sit\",\n         \"crs\": {\n          \"type\": \"ea\",\n          \"properties\": {\n           \"name\": \"occaecat\"\n          }\n         }\n        },\n        \"type\": \"tempor nostrud nisi mollit\",\n        \"id\": \"tempor sunt esse amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"est mo\",\n           \"crs\": {\n            \"type\": \"Excepteur pariatur commodo\",\n            \"properties\": {\n             \"name\": \"Ut proi\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur incididunt est cillum\",\n           \"crs\": {\n            \"type\": \"dolore exercitation esse Excepteur ipsum\",\n            \"properties\": {\n             \"name\": \"tempor ut aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"veniam consectetur occaecat \",\n         \"crs\": {\n          \"type\": \"eu\",\n          \"properties\": {\n           \"name\": \"laborum Ut\"\n          }\n         }\n        },\n        \"type\": \"culpa exercitatio\",\n        \"id\": \"tempor\"\n       }\n      ],\n      \"properties\": \"et pariatur Duis incididunt\"\n     },\n     \"paymentMethodIds\": [\n      -98995515,\n      76678423\n     ],\n     \"entityId\": \"laboris Ut enim non ipsum\",\n     \"entityType\": 1,\n     \"name\": \"minim in\",\n     \"eTag\": \"velit consectetur in\"\n    },\n    \"distance\": 62161906.05914664\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ex\",\n      \"city\": \"elit Ut\",\n      \"country\": \"ut culpa dolore\",\n      \"postcode\": \"ut\"\n     },\n     \"locationCode\": \"ex velit reprehende\",\n     \"totalCapacity\": -64202830,\n     \"zoneId\": \"et magna mollit laborum tempor\",\n     \"authorityId\": \"non culpa reprehenderit \",\n     \"features\": {\n      \"type\": \"deserunt cill\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"in occaecat\",\n           \"crs\": {\n            \"type\": \"incididunt in\",\n            \"properties\": {\n             \"name\": \"nisi aliquip\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis non laborum ni\",\n           \"crs\": {\n            \"type\": \"dolore commodo magna\",\n            \"properties\": {\n             \"name\": \"ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do mollit\",\n         \"crs\": {\n          \"type\": \"fugiat ut qui magna\",\n          \"properties\": {\n           \"name\": \"consequat id pariatur Ut\"\n          }\n         }\n        },\n        \"type\": \"sunt enim cupidatat incididunt\",\n        \"id\": \"proident ullamco reprehenderit\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed irure dolor exercitation\",\n           \"crs\": {\n            \"type\": \"irure veniam ad\",\n            \"properties\": {\n             \"name\": \"ex est\"\n            }\n           }\n          },\n          {\n           \"type\": \"amet\",\n           \"crs\": {\n            \"type\": \"nulla ut sit\",\n            \"properties\": {\n             \"name\": \"d\"\n            }\n           }\n          }\n         ],\n         \"type\": \"amet Lorem eu dolore\",\n         \"crs\": {\n          \"type\": \"sit dolor sed\",\n          \"properties\": {\n           \"name\": \"nostrud voluptat\"\n          }\n         }\n        },\n        \"type\": \"officia ipsum ea sed\",\n        \"id\": \"Excepteur veli\"\n       }\n      ],\n      \"properties\": \"adipisicing sint velit\"\n     },\n     \"paymentMethodIds\": [\n      -72648351,\n      -62070933\n     ],\n     \"entityId\": \"occaecat sint aute ipsum\",\n     \"entityType\": 2,\n     \"name\": \"non\",\n     \"eTag\": \"commodo ut Excepteur\"\n    },\n    \"distance\": 74292381.47208762\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "145f7713-2725-406a-85f4-c50ef2c2caa3",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor sunt\",\n            \"properties\": {\n                \"name\": \"consectetur vol\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bbd2547a-1f6b-436f-ae3d-d148691c0bf4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor sunt\",\n            \"properties\": {\n                \"name\": \"consectetur vol\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c3195526-0d36-463e-8d40-106941e1bf41",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor sunt\",\n            \"properties\": {\n                \"name\": \"consectetur vol\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "788ff340-9ad5-48d8-995e-d1695c559ff7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor sunt\",\n            \"properties\": {\n                \"name\": \"consectetur vol\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "31dade79-573f-4acc-9255-e2890296eac6",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "49cd01a4-5088-483c-8c35-a2457ff505f4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"laborum aute\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"dolore\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 5410488.890788123,\n      \"currency\": \"laborum ea deserunt\",\n      \"minCost\": 1828684.7869766206,\n      \"minStayUntil\": \"in aliqua irure anim sed\",\n      \"canExtendUntil\": \"do aliqua ut Duis aute\",\n      \"pricedUntil\": \"pariatur aute commodo\",\n      \"noReturnUntil\": \"qui incididunt deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       58240629,\n       88166693\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex Duis sunt ut\",\n      \"surcharge\": {\n       \"value\": 99088168.67557696,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 16563189\n       }\n      }\n     },\n     {\n      \"cost\": 89763173.68257564,\n      \"currency\": \"aliqua ea ut\",\n      \"minCost\": -76272181.32564382,\n      \"minStayUntil\": \"in aute\",\n      \"canExtendUntil\": \"exercitation nisi\",\n      \"pricedUntil\": \"reprehenderit\",\n      \"noReturnUntil\": \"sint esse\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -47998353,\n       22918887\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"tempor id in fugiat\",\n      \"surcharge\": {\n       \"value\": -4341685.368734941,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -29739315\n       }\n      }\n     }\n    ],\n    \"distance\": 56405268.35963905,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      77316018,\n      -28230775\n     ]\n    },\n    \"entityETag\": \"ei\"\n   },\n   {\n    \"entityId\": \"velit et esse ut\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -83695927.59160578,\n      \"currency\": \"sed esse\",\n      \"minCost\": -85081037.10757524,\n      \"minStayUntil\": \"eu aliqua anim in\",\n      \"canExtendUntil\": \"consectetur amet ea\",\n      \"pricedUntil\": \"amet adipisicing occaecat\",\n      \"noReturnUntil\": \"\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       16460979,\n       -62015737\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex exercitation velit\",\n      \"surcharge\": {\n       \"value\": -8621460.971970052,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 60958930\n       }\n      }\n     },\n     {\n      \"cost\": 87895722.84640896,\n      \"currency\": \"aliquip amet quis\",\n      \"minCost\": 30937260.25300479,\n      \"minStayUntil\": \"culpa ad\",\n      \"canExtendUntil\": \"in adipisicing exercit\",\n      \"pricedUntil\": \"magna reprehenderit nostrud velit Excepteur\",\n      \"noReturnUntil\": \"aliquip deserunt ipsum\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -99954536,\n       -65938273\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ea incididunt aute \",\n      \"surcharge\": {\n       \"value\": 74705425.13783172,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 81399402\n       }\n      }\n     }\n    ],\n    \"distance\": -60885719.58074329,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -62437353,\n      -74010958\n     ]\n    },\n    \"entityETag\": \"cupidatat sed velit elit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4d426f72-8f99-45f4-befa-0e2778630d34",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "90dc089c-293e-4f75-9471-50c6da5aecb1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7548d20b-54c9-494b-b421-f7ad44245ecf",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e2e9a8ae-8117-43e0-a655-5a9c7d353d44",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "02d8c599-0827-4120-a15e-8dc06c73b9f2",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"i\",\n            \"properties\": {\n                \"name\": \"ad est voluptate anim tempor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "8fb8dc5a-be79-411b-ba91-f95d2fdd51a7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore ex nostrud\",\n            \"properties\": {\n                \"name\": \"laboris do et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"laborum aute\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"dolore\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 5410488.890788123,\n      \"currency\": \"laborum ea deserunt\",\n      \"minCost\": 1828684.7869766206,\n      \"minStayUntil\": \"in aliqua irure anim sed\",\n      \"canExtendUntil\": \"do aliqua ut Duis aute\",\n      \"pricedUntil\": \"pariatur aute commodo\",\n      \"noReturnUntil\": \"qui incididunt deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       58240629,\n       88166693\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex Duis sunt ut\",\n      \"surcharge\": {\n       \"value\": 99088168.67557696,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 16563189\n       }\n      }\n     },\n     {\n      \"cost\": 89763173.68257564,\n      \"currency\": \"aliqua ea ut\",\n      \"minCost\": -76272181.32564382,\n      \"minStayUntil\": \"in aute\",\n      \"canExtendUntil\": \"exercitation nisi\",\n      \"pricedUntil\": \"reprehenderit\",\n      \"noReturnUntil\": \"sint esse\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -47998353,\n       22918887\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"tempor id in fugiat\",\n      \"surcharge\": {\n       \"value\": -4341685.368734941,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -29739315\n       }\n      }\n     }\n    ],\n    \"distance\": 56405268.35963905,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      77316018,\n      -28230775\n     ]\n    },\n    \"entityETag\": \"ei\"\n   },\n   {\n    \"entityId\": \"velit et esse ut\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -83695927.59160578,\n      \"currency\": \"sed esse\",\n      \"minCost\": -85081037.10757524,\n      \"minStayUntil\": \"eu aliqua anim in\",\n      \"canExtendUntil\": \"consectetur amet ea\",\n      \"pricedUntil\": \"amet adipisicing occaecat\",\n      \"noReturnUntil\": \"\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       16460979,\n       -62015737\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex exercitation velit\",\n      \"surcharge\": {\n       \"value\": -8621460.971970052,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 60958930\n       }\n      }\n     },\n     {\n      \"cost\": 87895722.84640896,\n      \"currency\": \"aliquip amet quis\",\n      \"minCost\": 30937260.25300479,\n      \"minStayUntil\": \"culpa ad\",\n      \"canExtendUntil\": \"in adipisicing exercit\",\n      \"pricedUntil\": \"magna reprehenderit nostrud velit Excepteur\",\n      \"noReturnUntil\": \"aliquip deserunt ipsum\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -99954536,\n       -65938273\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ea incididunt aute \",\n      \"surcharge\": {\n       \"value\": 74705425.13783172,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 81399402\n       }\n      }\n     }\n    ],\n    \"distance\": -60885719.58074329,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -62437353,\n      -74010958\n     ]\n    },\n    \"entityETag\": \"cupidatat sed velit elit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "45167d20-9d97-464d-a5b5-5ee0b24ee383",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore ex nostrud\",\n            \"properties\": {\n                \"name\": \"laboris do et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "15f9c2c3-0632-41e4-bdad-291119292ccc",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore ex nostrud\",\n            \"properties\": {\n                \"name\": \"laboris do et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0e1da522-91cc-467e-8f9a-7c82999f3d22",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore ex nostrud\",\n            \"properties\": {\n                \"name\": \"laboris do et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5b60d7f7-f8d9-4d8c-a6de-63a38b81ef23",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore ex nostrud\",\n            \"properties\": {\n                \"name\": \"laboris do et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "26cf2f54-5af8-49a5-abfe-67381e0e79a9",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur Duis exercitation sint\",\n            \"properties\": {\n                \"name\": \"velit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "1ae5d961-aa6b-4f99-a541-c45ba4e8c59d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ut fugiat\",\n            \"properties\": {\n                \"name\": \"irure\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"id\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"sint nostru\",\n     \"crs\": {\n      \"type\": \"laboris culpa Excepteur labore\",\n      \"properties\": {\n       \"name\": \"s\"\n      }\n     }\n    },\n    \"type\": \"exercitation ad tempor laboris\",\n    \"id\": \"eiusmod ad\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"aute amet eu\",\n     \"crs\": {\n      \"type\": \"ut in\",\n      \"properties\": {\n       \"name\": \"culpa nisi Ut esse\"\n      }\n     }\n    },\n    \"type\": \"reprehenderit tempor\",\n    \"id\": \"ipsum non\"\n   }\n  ],\n  \"properties\": \"esse tempor in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ad739faf-24c8-4fd5-9f19-f489b75bc504",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ut fugiat\",\n            \"properties\": {\n                \"name\": \"irure\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5a4e5b08-621c-43a8-9f36-acc3f9b83f91",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ut fugiat\",\n            \"properties\": {\n                \"name\": \"irure\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3efb312e-cbd0-4b2d-86ac-af8f6820a2a9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ut fugiat\",\n            \"properties\": {\n                \"name\": \"irure\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "80db0da4-7cfc-468a-974a-dd16348d8e8b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ut fugiat\",\n            \"properties\": {\n                \"name\": \"irure\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4ddcc455-afca-4fe6-bbd9-2e0b9874a3fc",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"anim ex sunt Lorem\",\n            \"properties\": {\n                \"name\": \"dolore in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "153e5d25-7927-4e7b-83ad-a41f22df5e9c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"deserunt irure Lorem\",\n            \"properties\": {\n                \"name\": \"est laboris sint do\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in consectetur sit Lorem\",\n    \"entityETag\": \"laboris\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 95184441,\n      \"specialRestrictionTypeId\": -90321122,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"veniam cupidatat ex et aliqua\",\n        \"endTime\": \"id \",\n        \"maxStay\": -35641105\n       },\n       {\n        \"startTime\": \"occaecat reprehenderit Lorem\",\n        \"endTime\": \"laborum ipsum non\",\n        \"maxStay\": 16926804\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 96636990,\n      \"specialRestrictionTypeId\": 91456082,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla elit sunt Duis consequat\",\n        \"endTime\": \"Ut dolor sint\",\n        \"maxStay\": -57551027\n       },\n       {\n        \"startTime\": \"non sint veniam anim\",\n        \"endTime\": \"est esse sint\",\n        \"maxStay\": 83146741\n       }\n      ]\n     }\n    ],\n    \"distance\": -36789520.32594589\n   },\n   {\n    \"entityId\": \"dolor Duis mollit\",\n    \"entityETag\": \"mollit ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 58287502,\n      \"specialRestrictionTypeId\": 63966645,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ad labore\",\n        \"endTime\": \"consequat magna ullamco deserunt veniam\",\n        \"maxStay\": 10865198\n       },\n       {\n        \"startTime\": \"magna exercitation deserunt cillum\",\n        \"endTime\": \"officia re\",\n        \"maxStay\": 67876163\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 27652473,\n      \"specialRestrictionTypeId\": 13145663,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi elit Ut\",\n        \"endTime\": \"dolore esse dolor magna\",\n        \"maxStay\": -44512583\n       },\n       {\n        \"startTime\": \"ad pariatur consectetur et dolor\",\n        \"endTime\": \"quis ex velit tempor\",\n        \"maxStay\": 15418777\n       }\n      ]\n     }\n    ],\n    \"distance\": 67801722.39206713\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"exercitation esse quis dolore dol\",\n   \"entityETag\": \"in dolor irure veniam\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 90877789,\n     \"specialRestrictionTypeId\": 49829240,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"irure voluptate occaecat laborum\",\n       \"endTime\": \"exercitation\",\n       \"maxStay\": 11543293\n      },\n      {\n       \"startTime\": \"dolore sed sunt cillum\",\n       \"endTime\": \"consectetur nisi esse\",\n       \"maxStay\": 993111\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 93937626,\n     \"specialRestrictionTypeId\": 2195632,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nisi s\",\n       \"endTime\": \"cill\",\n       \"maxStay\": 76317298\n      },\n      {\n       \"startTime\": \"tempor irure sint sed qu\",\n       \"endTime\": \"velit cupidatat\",\n       \"maxStay\": 14736919\n      }\n     ]\n    }\n   ],\n   \"distance\": -8741729.0384534\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b8a91f2-d937-4099-85ed-af94b27acddf",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"deserunt irure Lorem\",\n            \"properties\": {\n                \"name\": \"est laboris sint do\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolor Lorem\",\n \"errors\": [\n  {\n   \"property\": \"aliqua\",\n   \"code\": \"irure in laboris\",\n   \"message\": \"commodo et in\"\n  },\n  {\n   \"property\": \"non qui nisi ut\",\n   \"code\": \"Lorem deserunt dolor proident\",\n   \"message\": \"quis incididunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "09a8e371-a66f-428d-a77a-902fd813ebab",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"deserunt irure Lorem\",\n            \"properties\": {\n                \"name\": \"est laboris sint do\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "10fdc929-4bb0-4317-b159-36f6fe680d21",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"deserunt irure Lorem\",\n            \"properties\": {\n                \"name\": \"est laboris sint do\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ffba28a0-122e-453a-b600-47e0c9f42f9f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"deserunt irure Lorem\",\n            \"properties\": {\n                \"name\": \"est laboris sint do\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "55541b02-7625-4ac5-a71b-b942def8296a",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "0b444474-7ff6-4b75-a981-86c1e215320b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7e347219-7e0f-4639-b3a7-ad091c02d016",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c1b47fc9-8c64-41b7-942d-5056528da1e0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "19af1f96-15ce-433c-bd81-b328b659fba5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "d6dfe2ef-e979-4c8f-8913-30f5a4906f3e",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
