{
  "item": [
    {
      "id": "dcde4f87-27d6-4ebe-86d4-bbda40e2a14a",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7e6e1923-af25-418c-ac05-af61dba0a041",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"occaecat culpa adipisicing eu\"\n   },\n   {\n    \"message\": \"culpa\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"ad amet nostrud occaecat\",\n    \"cardPaymentsExternalUrl\": \"ad nisi laboris\",\n    \"paymentsTelephone\": \"deserunt in dolor sed\"\n   },\n   {\n    \"name\": \"Lorem\",\n    \"cardPaymentsExternalUrl\": \"est dolor fugiat dolore officia\",\n    \"paymentsTelephone\": \"est consectetur sunt eiusmod\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"velit esse do\",\n     \"crs\": {\n      \"type\": \"consequat aliquip est\",\n      \"properties\": {\n       \"name\": \"laborum do\"\n      }\n     }\n    },\n    {\n     \"type\": \"tempor Excepteur\",\n     \"crs\": {\n      \"type\": \"aliquip minim pariatur nulla exe\",\n      \"properties\": {\n       \"name\": \"adipisicing elit ad\"\n      }\n     }\n    }\n   ],\n   \"type\": \"enim mollit in\",\n   \"crs\": {\n    \"type\": \"minim pariatur\",\n    \"properties\": {\n     \"name\": \"officia elit\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"aute in\",\n  \"name\": \"nostrud dolore\",\n  \"eTag\": \"irur\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2895cc1f-ddc2-46d6-8c3c-d5e487301b0b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4594a8e9-93ee-468f-b74a-40030a7bdfdc",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f81a2897-18f8-4474-80db-14781686a464",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore dolore nulla\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b74f11c5-cedc-40ce-868e-b8ce88234f41",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "883079fe-b797-4f96-96bf-c703e08c16cf",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6ff2f3c1-4b12-4f94-b7c7-8f27481b4a1f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"exercitation magna\",\n     \"city\": \"Ut incididunt commodo ipsum tempor\",\n     \"country\": \"elit\",\n     \"postcode\": \"pariatur culpa incididunt sit\"\n    },\n    \"locationCode\": \"et dolore\",\n    \"totalCapacity\": 97597807,\n    \"zoneId\": \"in sed culpa\",\n    \"authorityId\": \"dolor culpa ex\",\n    \"features\": {\n     \"type\": \"laboris in velit nostrud\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"est offi\",\n          \"crs\": {\n           \"type\": \"reprehenderit in\",\n           \"properties\": {\n            \"name\": \"minim pariatur\"\n           }\n          }\n         },\n         {\n          \"type\": \"dolore velit v\",\n          \"crs\": {\n           \"type\": \"eu Excepteur\",\n           \"properties\": {\n            \"name\": \"nulla consectetur\"\n           }\n          }\n         }\n        ],\n        \"type\": \"minim non\",\n        \"crs\": {\n         \"type\": \"amet ut\",\n         \"properties\": {\n          \"name\": \"et Lorem tempor\"\n         }\n        }\n       },\n       \"type\": \"minim dolore n\",\n       \"id\": \"fugiat consequat laborum occaecat\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"officia laboris\",\n          \"crs\": {\n           \"type\": \"ea velit mollit\",\n           \"properties\": {\n            \"name\": \"adipisi\"\n           }\n          }\n         },\n         {\n          \"type\": \"reprehenderit exercitation est sunt\",\n          \"crs\": {\n           \"type\": \"officia\",\n           \"properties\": {\n            \"name\": \"occaecat veniam dolore\"\n           }\n          }\n         }\n        ],\n        \"type\": \"est esse\",\n        \"crs\": {\n         \"type\": \"aliquip consectetur\",\n         \"properties\": {\n          \"name\": \"aliquip adipisicing culpa\"\n         }\n        }\n       },\n       \"type\": \"non consequat sint ad\",\n       \"id\": \"velit fugiat\"\n      }\n     ],\n     \"properties\": \"velit consequat laboris ut in\"\n    },\n    \"paymentMethodIds\": [\n     89220961,\n     24472999\n    ],\n    \"entityId\": \"ad\",\n    \"entityType\": 2,\n    \"name\": \"exercitation in non qui tempor\",\n    \"eTag\": \"culpa deserunt incididunt\"\n   },\n   {\n    \"address\": {\n     \"street\": \"nulla officia\",\n     \"city\": \"est\",\n     \"country\": \"ut\",\n     \"postcode\": \"nisi fugiat Duis ipsum\"\n    },\n    \"locationCode\": \"eu consectetur\",\n    \"totalCapacity\": -53871433,\n    \"zoneId\": \"elit aliqua velit\",\n    \"authorityId\": \"ut nulla\",\n    \"features\": {\n     \"type\": \"ipsum reprehenderit\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Ut sunt aliquip occaecat\",\n          \"crs\": {\n           \"type\": \"Ut elit esse Lorem\",\n           \"properties\": {\n            \"name\": \"ea aliqua\"\n           }\n          }\n         },\n         {\n          \"type\": \"Excepteur anim\",\n          \"crs\": {\n           \"type\": \"culpa irure\",\n           \"properties\": {\n            \"name\": \"sed aliq\"\n           }\n          }\n         }\n        ],\n        \"type\": \"ut ut\",\n        \"crs\": {\n         \"type\": \"Ut commodo\",\n         \"properties\": {\n          \"name\": \"nisi o\"\n         }\n        }\n       },\n       \"type\": \"nulla\",\n       \"id\": \"cupidatat dolor enim\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"exercitation sunt aliqua Except\",\n          \"crs\": {\n           \"type\": \"elit eiusmod ut reprehenderit culpa\",\n           \"properties\": {\n            \"name\": \"velit\"\n           }\n          }\n         },\n         {\n          \"type\": \"d\",\n          \"crs\": {\n           \"type\": \"non nisi mollit velit\",\n           \"properties\": {\n            \"name\": \"velit quis consequat ulla\"\n           }\n          }\n         }\n        ],\n        \"type\": \"sed quis Ut cillum culpa\",\n        \"crs\": {\n         \"type\": \"dolore quis minim tempor occaecat\",\n         \"properties\": {\n          \"name\": \"laboris magna laborum exercitation\"\n         }\n        }\n       },\n       \"type\": \"eiusmod commodo non d\",\n       \"id\": \"sed ut\"\n      }\n     ],\n     \"properties\": \"est\"\n    },\n    \"paymentMethodIds\": [\n     92260580,\n     80741608\n    ],\n    \"entityId\": \"Ut dolor ad\",\n    \"entityType\": 4,\n    \"name\": \"non anim\",\n    \"eTag\": \"eiusmod\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"fugiat nisi magna laboris aliqua\",\n       \"crs\": {\n        \"type\": \"adipisicing anim irure ad\",\n        \"properties\": {\n         \"name\": \"incididunt\"\n        }\n       }\n      },\n      {\n       \"type\": \"dolor ipsum occaecat dolor\",\n       \"crs\": {\n        \"type\": \"do minim mollit quis nisi\",\n        \"properties\": {\n         \"name\": \"dolore dolor enim \"\n        }\n       }\n      }\n     ],\n     \"type\": \"consequat in nostrud id\",\n     \"crs\": {\n      \"type\": \"sit Duis laborum\",\n      \"properties\": {\n       \"name\": \"ut eu aliqua\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"proident qui\"\n     },\n     {\n      \"message\": \"eiusmod cillum dolore dolor\"\n     }\n    ],\n    \"authorityId\": \"do tempor irure ea\",\n    \"zoneType\": 8,\n    \"entityType\": 4,\n    \"entityId\": \"quis est in voluptate\",\n    \"name\": \"esse\",\n    \"eTag\": \"pariatur officia consectetur qui\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"mollit eiusmod quis deserunt\",\n       \"crs\": {\n        \"type\": \"nostrud aliqua\",\n        \"properties\": {\n         \"name\": \"pariatur i\"\n        }\n       }\n      },\n      {\n       \"type\": \"non dolore\",\n       \"crs\": {\n        \"type\": \"in ullamco reprehenderit\",\n        \"properties\": {\n         \"name\": \"ea dolor\"\n        }\n       }\n      }\n     ],\n     \"type\": \"occaecat amet\",\n     \"crs\": {\n      \"type\": \"magna et\",\n      \"properties\": {\n       \"name\": \"adipisicing ipsum dolore\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"quis ex Ut cu\"\n     },\n     {\n      \"message\": \"occaecat est Duis labo\"\n     }\n    ],\n    \"authorityId\": \"dolore sit eiusmod\",\n    \"zoneType\": 10,\n    \"entityType\": 2,\n    \"entityId\": \"ullamco aute\",\n    \"name\": \"laboris labo\",\n    \"eTag\": \"in sint tempor\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"laborum\"\n     },\n     {\n      \"message\": \"magna sint elit\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"aliquip irure ex amet\",\n      \"cardPaymentsExternalUrl\": \"ame\",\n      \"paymentsTelephone\": \"ad\"\n     },\n     {\n      \"name\": \"reprehenderit Ut\",\n      \"cardPaymentsExternalUrl\": \"ad cupidatat\",\n      \"paymentsTelephone\": \"consectetur laboris\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"nostrud magna\",\n       \"crs\": {\n        \"type\": \"ut sed adipisicing\",\n        \"properties\": {\n         \"name\": \"tempor amet reprehenderit\"\n        }\n       }\n      },\n      {\n       \"type\": \"amet d\",\n       \"crs\": {\n        \"type\": \"aute labore non magna consectetur\",\n        \"properties\": {\n         \"name\": \"ipsum Duis laborum in\"\n        }\n       }\n      }\n     ],\n     \"type\": \"do enim\",\n     \"crs\": {\n      \"type\": \"in dolore\",\n      \"properties\": {\n       \"name\": \"ad est magna cupidatat\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"nisi eiusmod\",\n    \"name\": \"sit\",\n    \"eTag\": \"dolor reprehenderit est\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"irure deserunt ullamco\"\n     },\n     {\n      \"message\": \"non\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"sint labore deserunt\",\n      \"cardPaymentsExternalUrl\": \"commodo dolore irure quis\",\n      \"paymentsTelephone\": \"ipsum culpa\"\n     },\n     {\n      \"name\": \"nulla deserunt eu\",\n      \"cardPaymentsExternalUrl\": \"qui dolor veniam anim\",\n      \"paymentsTelephone\": \"mollit\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"in fugiat minim\",\n       \"crs\": {\n        \"type\": \"est dolore minim\",\n        \"properties\": {\n         \"name\": \"et qui\"\n        }\n       }\n      },\n      {\n       \"type\": \"ea Duis in\",\n       \"crs\": {\n        \"type\": \"enim\",\n        \"properties\": {\n         \"name\": \"consectetur pariatur tempor\"\n        }\n       }\n      }\n     ],\n     \"type\": \"labore do\",\n     \"crs\": {\n      \"type\": \"eiusmod et ad\",\n      \"properties\": {\n       \"name\": \"ut Ut labore adipisici\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"ullamco in\",\n    \"name\": \"velit nulla\",\n    \"eTag\": \"quis incididunt\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "944945f7-9a46-4f67-922b-cacaf4d9f6cf",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"mollit dolore\",\n \"errors\": [\n  {\n   \"property\": \"sunt\",\n   \"code\": \"consectetur elit\",\n   \"message\": \"anim aliqua in do\"\n  },\n  {\n   \"property\": \"ipsum sunt\",\n   \"code\": \"cupidatat in fugiat sit\",\n   \"message\": \"ex tempor in est\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "85262946-92c5-4504-8766-7e2d12c7cf44",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "04e0f4b1-ab92-4f08-b987-2887ebd24dc9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0b0c8017-43b6-410f-833a-24d969bc541e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5c705d69-77e7-4979-a984-73ad7d04a352",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "bbfcaf38-bbbb-4498-aef6-e57d94e4c00f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"amet ut\",\n   \"city\": \"esse dolor dolor elit exercitation\",\n   \"country\": \"ullamco cillum\",\n   \"postcode\": \"occae\"\n  },\n  \"locationCode\": \"id eu sint\",\n  \"totalCapacity\": -63016819,\n  \"zoneId\": \"pariatur\",\n  \"authorityId\": \"fugiat nisi in occaecat\",\n  \"features\": {\n   \"type\": \"Ut \",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"ea ipsum\",\n        \"crs\": {\n         \"type\": \"qui ea magna occaecat id\",\n         \"properties\": {\n          \"name\": \"tempor sunt\"\n         }\n        }\n       },\n       {\n        \"type\": \"occaecat sunt\",\n        \"crs\": {\n         \"type\": \"incididunt ut Excepteur\",\n         \"properties\": {\n          \"name\": \"dolore mollit paria\"\n         }\n        }\n       }\n      ],\n      \"type\": \"ullamco nostrud ex\",\n      \"crs\": {\n       \"type\": \"commodo enim occaecat tempor\",\n       \"properties\": {\n        \"name\": \"minim fugiat veniam dolore deserunt\"\n       }\n      }\n     },\n     \"type\": \"quis do ut laboris\",\n     \"id\": \"in sit ullamco officia\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"dolore et ani\",\n        \"crs\": {\n         \"type\": \"nisi anim ut\",\n         \"properties\": {\n          \"name\": \"ut\"\n         }\n        }\n       },\n       {\n        \"type\": \"aliquip \",\n        \"crs\": {\n         \"type\": \"eiusmod ea incididunt\",\n         \"properties\": {\n          \"name\": \"anim dolore\"\n         }\n        }\n       }\n      ],\n      \"type\": \"elit dolor \",\n      \"crs\": {\n       \"type\": \"sit consectetur\",\n       \"properties\": {\n        \"name\": \"ipsum eiusmod\"\n       }\n      }\n     },\n     \"type\": \"id ex irure\",\n     \"id\": \"adipisicing minim\"\n    }\n   ],\n   \"properties\": \"proident qu\"\n  },\n  \"paymentMethodIds\": [\n   -51653122,\n   84122421\n  ],\n  \"entityId\": \"tempor enim\",\n  \"entityType\": 4,\n  \"name\": \"est aliqua esse nisi ipsum\",\n  \"eTag\": \"ex aliqua\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "18d39807-b563-4b8a-989d-518ff4945ba8",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a5753725-975d-4075-a34f-8b402f65e98c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "945dbbf9-5323-4ba4-a0d3-853bb35c59d0",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore dolore nulla\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a7080d35-644e-4d83-b67d-ca85d75891e0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "cbb338b9-1f39-482c-b68a-ff78507f21ff",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fbbfe8d2-d65d-4c38-9bb3-444eff133fd9",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"esse sit aliquip\",\n  \"entityType\": 2,\n  \"quotes\": [\n   {\n    \"cost\": 96694842.34586236,\n    \"currency\": \"et commodo sed incididunt dolore\",\n    \"minCost\": -52214421.52273692,\n    \"minStayUntil\": \"laboris et occaecat\",\n    \"canExtendUntil\": \"ullamco proident\",\n    \"pricedUntil\": \"fugiat Excepteur\",\n    \"noReturnUntil\": \"do Lorem\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -44596595,\n     -6844542\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"dolor\",\n    \"surcharge\": {\n     \"value\": -89513743.74412677,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 77474791\n     }\n    }\n   },\n   {\n    \"cost\": -53012507.977207154,\n    \"currency\": \"Duis Lorem est officia\",\n    \"minCost\": -87982141.90784979,\n    \"minStayUntil\": \"sunt amet ut nulla\",\n    \"canExtendUntil\": \"qui volu\",\n    \"pricedUntil\": \"do\",\n    \"noReturnUntil\": \"reprehenderit Excepteur nulla tempor\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     50399938,\n     24857632\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"anim aute\",\n    \"surcharge\": {\n     \"value\": -47553187.37124652,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 75874770\n     }\n    }\n   }\n  ],\n  \"distance\": 98188856.79523098,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    74992004,\n    -26787981\n   ]\n  },\n  \"entityETag\": \"tempor minim commodo\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4997453b-77e1-429f-8987-22f4c6cd4605",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "479c7707-bdc0-4d7c-8ae4-c866845265d1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f3085f31-48d1-49a0-bf31-a3f845ae525e",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore dolore nulla\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0736daf5-6417-4db8-9588-df8e91dbbf56",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f05881ea-f0b6-4fb4-8709-8e90ccb12680",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "3897c7ec-767d-47b6-a78b-f369388ae5a7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"magna ut\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ullamco enim Ut\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 68460716.83884647,\n      \"currency\": \"nostrud in\",\n      \"minCost\": -66155604.857077144,\n      \"minStayUntil\": \"laborum aliquip incididunt dolor eiusmod\",\n      \"canExtendUntil\": \"pariatur inc\",\n      \"pricedUntil\": \"ut officia\",\n      \"noReturnUntil\": \"do dolor aliqua\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       59853622,\n       293049\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"exercitation velit\",\n      \"surcharge\": {\n       \"value\": 92907767.74889532,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 84636784\n       }\n      }\n     },\n     {\n      \"cost\": -26747118.30174443,\n      \"currency\": \"ut\",\n      \"minCost\": 88969071.98724246,\n      \"minStayUntil\": \"eiusmod cillum dolore Duis\",\n      \"canExtendUntil\": \"occaecat enim\",\n      \"pricedUntil\": \"in exercitation ut aliqua\",\n      \"noReturnUntil\": \"culpa enim pariatur\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       26266547,\n       -10810773\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consectetur elit deserunt ut\",\n      \"surcharge\": {\n       \"value\": -94958681.68382993,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 20147503\n       }\n      }\n     }\n    ],\n    \"distance\": 8415201.221882463,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -93974078,\n      49197376\n     ]\n    },\n    \"entityETag\": \"esse\"\n   },\n   {\n    \"entityId\": \"velit\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -71164883.25645536,\n      \"currency\": \"veniam in\",\n      \"minCost\": -59980736.363881305,\n      \"minStayUntil\": \"reprehenderit \",\n      \"canExtendUntil\": \"ipsum mollit ullamc\",\n      \"pricedUntil\": \"do id\",\n      \"noReturnUntil\": \"minim eiusmod proident ullamco\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -48847642,\n       27233971\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt ea\",\n      \"surcharge\": {\n       \"value\": 97980479.47631514,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -14379363\n       }\n      }\n     },\n     {\n      \"cost\": -235599.46578392386,\n      \"currency\": \"dolore laboris\",\n      \"minCost\": -75979179.94150475,\n      \"minStayUntil\": \"laborum elit nisi ut\",\n      \"canExtendUntil\": \"do deserunt adipisici\",\n      \"pricedUntil\": \"consequat quis officia Duis\",\n      \"noReturnUntil\": \"consectetur eu minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       9772029,\n       99006346\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"elit laborum\",\n      \"surcharge\": {\n       \"value\": -87580010.91219549,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 27818897\n       }\n      }\n     }\n    ],\n    \"distance\": -62301453.65484541,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -71904068,\n      26582917\n     ]\n    },\n    \"entityETag\": \"et enim commodo non\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8fce33a5-3f63-4fcd-9c38-167eba869d5b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1287f352-ed63-4af6-9cf1-c74eee6ce991",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "23888ad6-ee6c-45f8-a349-ff990c813c2a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b85510a9-97b4-4176-b9c6-e006fbb04807",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "955ed76b-6ab7-4d27-83a5-c65c08d017e5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"Ut eu\",\n    \"cardPaymentsExternalUrl\": \"cillum ullamco fugiat amet\",\n    \"paymentsTelephone\": \"sit fugiat\"\n   },\n   {\n    \"name\": \"officia in ipsum\",\n    \"cardPaymentsExternalUrl\": \"ut aliqua esse Excepteur sunt\",\n    \"paymentsTelephone\": \"labore eu quis laborum\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f34b5c2e-67aa-44ce-a3dd-dcf4abc79e8d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dc33ec9d-5313-4167-97cf-10adecd8c0a4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6db20db2-f141-4868-b6b5-42dc93051f86",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore dolore nulla\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "72101eae-68f1-4001-8c8f-be5d391733bb",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "cd43cee3-9aef-48a6-b305-26a7ac3a7bf8",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "e2040c4a-ad07-4d1b-9f46-5009c279a578",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"deserunt eiusmod exercitation proident adipisicing\",\n     \"crs\": {\n      \"type\": \"eiusmod ad sunt ex\",\n      \"properties\": {\n       \"name\": \"ex dolor et commodo\"\n      }\n     }\n    },\n    {\n     \"type\": \"do\",\n     \"crs\": {\n      \"type\": \"ut offi\",\n      \"properties\": {\n       \"name\": \"adipisicing voluptate eiusmod\"\n      }\n     }\n    }\n   ],\n   \"type\": \"exercitation adipisicing culpa deserunt\",\n   \"crs\": {\n    \"type\": \"exercitat\",\n    \"properties\": {\n     \"name\": \"do minim aliqua commodo\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"enim consequat reprehenderit\"\n   },\n   {\n    \"message\": \"Ut\"\n   }\n  ],\n  \"authorityId\": \"dolore magna id incididunt\",\n  \"zoneType\": 2,\n  \"entityType\": 3,\n  \"entityId\": \"dolor consectetur\",\n  \"name\": \"ut\",\n  \"eTag\": \"cillum \"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "21c6e79b-89da-4baa-9449-c1fff4dc38c0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1f5a9fd1-7bea-499a-87a0-e7ac16c4c39a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5c9d3fc1-4ad9-4f6c-976b-5a407d510e23",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore dolore nulla\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "398aedc1-2140-4525-a277-fb4903b1bf06",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "dd309cbb-5871-48ae-a4a0-72f039edcdaf",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim sed\",\n            \"properties\": {\n                \"name\": \"officia anim eu\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b2904ccc-c5c4-4996-b9a8-534154c519ff",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris do\",\n            \"properties\": {\n                \"name\": \"in anim esse\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ad adipisicing veniam exercitation aute\",\n    \"entityETag\": \"deserunt eu\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 47409964,\n      \"specialRestrictionTypeId\": -25322971,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"minim dolore elit\",\n        \"endTime\": \"occaecat est eiusmod\",\n        \"maxStay\": -3592050\n       },\n       {\n        \"startTime\": \"magna ullamco voluptate irure\",\n        \"endTime\": \"v\",\n        \"maxStay\": -80658867\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 12101617,\n      \"specialRestrictionTypeId\": -20785513,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Excepteur deserunt\",\n        \"endTime\": \"nostrud cupidatat ullamco qui\",\n        \"maxStay\": -15331976\n       },\n       {\n        \"startTime\": \"irure Excepteur\",\n        \"endTime\": \"non commodo sunt dolor\",\n        \"maxStay\": -98160629\n       }\n      ]\n     }\n    ],\n    \"distance\": 71974905.14848122\n   },\n   {\n    \"entityId\": \"ex\",\n    \"entityETag\": \"dol\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -85960217,\n      \"specialRestrictionTypeId\": -98203859,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"in officia\",\n        \"endTime\": \"velit est mollit deserunt\",\n        \"maxStay\": -22330083\n       },\n       {\n        \"startTime\": \"velit\",\n        \"endTime\": \"anim ad eiusmod elit velit\",\n        \"maxStay\": 95685634\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -36364414,\n      \"specialRestrictionTypeId\": -51104187,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolore laborum Excepteur occaecat nisi\",\n        \"endTime\": \"aliqua nulla\",\n        \"maxStay\": -47037591\n       },\n       {\n        \"startTime\": \"aliqua tempor\",\n        \"endTime\": \"amet aliquip\",\n        \"maxStay\": -64296731\n       }\n      ]\n     }\n    ],\n    \"distance\": -41343946.960530564\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"et ipsum\",\n   \"entityETag\": \"amet Excepteur aute\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -67152308,\n     \"specialRestrictionTypeId\": -57563569,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"irure eiusmod commodo\",\n       \"endTime\": \"consequat qui nisi anim sunt\",\n       \"maxStay\": 47883584\n      },\n      {\n       \"startTime\": \"elit do\",\n       \"endTime\": \"pariatur\",\n       \"maxStay\": -9191532\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 32283049,\n     \"specialRestrictionTypeId\": -71811761,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex anim\",\n       \"endTime\": \"ipsum irure quis pariatur\",\n       \"maxStay\": -57603196\n      },\n      {\n       \"startTime\": \"mollit esse proident\",\n       \"endTime\": \"adipisicing qui deserunt laborum\",\n       \"maxStay\": -60054622\n      }\n     ]\n    }\n   ],\n   \"distance\": -74736395.55419144\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "445a6757-4d33-4615-be25-0f4b060fd00d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris do\",\n            \"properties\": {\n                \"name\": \"in anim esse\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "383654ad-e5ea-43ca-884a-e93a6baa9408",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris do\",\n            \"properties\": {\n                \"name\": \"in anim esse\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "536cd013-f7fd-45c3-8049-9511179d256d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris do\",\n            \"properties\": {\n                \"name\": \"in anim esse\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2df8ff2b-5215-4d0b-986c-6bb0d3fd4491",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris do\",\n            \"properties\": {\n                \"name\": \"in anim esse\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ed8e1398-4e44-4e46-b8f1-cfe525f9cd08",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "767dd366-5f50-4649-aca7-4ecc81f596b7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ad est \",\n      \"city\": \"tempor laboris aliqua reprehenderit\",\n      \"country\": \"ullamco u\",\n      \"postcode\": \"est\"\n     },\n     \"locationCode\": \"proident\",\n     \"totalCapacity\": -39664998,\n     \"zoneId\": \"id sit\",\n     \"authorityId\": \"tempor elit\",\n     \"features\": {\n      \"type\": \"mollit cillum tempor\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident nulla\",\n           \"crs\": {\n            \"type\": \"id minim\",\n            \"properties\": {\n             \"name\": \"ut sed ex\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur aliqua est consequat\",\n           \"crs\": {\n            \"type\": \"occaecat nisi nulla enim\",\n            \"properties\": {\n             \"name\": \"Duis nostrud ve\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in exercitation\",\n         \"crs\": {\n          \"type\": \"nisi Ut\",\n          \"properties\": {\n           \"name\": \"eiusmod Excepteur mollit\"\n          }\n         }\n        },\n        \"type\": \"aute Lorem\",\n        \"id\": \"mi\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"conseq\",\n           \"crs\": {\n            \"type\": \"sit non commodo eiusmod\",\n            \"properties\": {\n             \"name\": \"vol\"\n            }\n           }\n          },\n          {\n           \"type\": \"e\",\n           \"crs\": {\n            \"type\": \"Excepteur enim eu fugiat amet\",\n            \"properties\": {\n             \"name\": \"quis do \"\n            }\n           }\n          }\n         ],\n         \"type\": \"elit\",\n         \"crs\": {\n          \"type\": \"pariatur et dolore labore\",\n          \"properties\": {\n           \"name\": \"labore aute magna dolor Duis\"\n          }\n         }\n        },\n        \"type\": \"in sint aliquip n\",\n        \"id\": \"commodo magna\"\n       }\n      ],\n      \"properties\": \"\"\n     },\n     \"paymentMethodIds\": [\n      24970394,\n      -64748615\n     ],\n     \"entityId\": \"amet elit\",\n     \"entityType\": 3,\n     \"name\": \"proident labore amet non\",\n     \"eTag\": \"pariatur proident sit reprehenderit\"\n    },\n    \"distance\": 80338292.37295794\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"exercitation ea\",\n      \"city\": \"elit dolor Excepteur\",\n      \"country\": \"eu\",\n      \"postcode\": \"labore nulla\"\n     },\n     \"locationCode\": \"sint Lorem\",\n     \"totalCapacity\": -29513334,\n     \"zoneId\": \"an\",\n     \"authorityId\": \"do anim cupidatat laborum\",\n     \"features\": {\n      \"type\": \"aliqua in ea exercitation consequat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"magna velit\",\n           \"crs\": {\n            \"type\": \"consectetur aute esse commodo\",\n            \"properties\": {\n             \"name\": \"reprehenderit laborum mollit velit\"\n            }\n           }\n          },\n          {\n           \"type\": \"sit dolor occaecat ea\",\n           \"crs\": {\n            \"type\": \"occaecat sed quis eu velit\",\n            \"properties\": {\n             \"name\": \"ea ipsum eiusmod voluptate\"\n            }\n           }\n          }\n         ],\n         \"type\": \"exercitation occaecat reprehenderit\",\n         \"crs\": {\n          \"type\": \"officia ea ut mollit\",\n          \"properties\": {\n           \"name\": \"ut exercitation occaecat deserunt\"\n          }\n         }\n        },\n        \"type\": \"Lorem anim veniam pariatur\",\n        \"id\": \"ipsum\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"pariatur in sit\",\n           \"crs\": {\n            \"type\": \"cupidatat tempor cillum\",\n            \"properties\": {\n             \"name\": \"officia esse labori\"\n            }\n           }\n          },\n          {\n           \"type\": \"aute commodo\",\n           \"crs\": {\n            \"type\": \"Excepteur Ut occaecat labo\",\n            \"properties\": {\n             \"name\": \"sint non eu reprehenderit\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in esse\",\n         \"crs\": {\n          \"type\": \"dolor id reprehenderit dolore pariatur\",\n          \"properties\": {\n           \"name\": \"do quis Lorem\"\n          }\n         }\n        },\n        \"type\": \"nisi elit\",\n        \"id\": \"in magna dolore officia\"\n       }\n      ],\n      \"properties\": \"laborum id\"\n     },\n     \"paymentMethodIds\": [\n      -904558,\n      -38767966\n     ],\n     \"entityId\": \"dolor Ut ipsum\",\n     \"entityType\": 1,\n     \"name\": \"aute veniam sit id\",\n     \"eTag\": \"non sint laboris\"\n    },\n    \"distance\": 41670896.12485185\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "076e5c40-7e2e-4f43-8e4e-9d4ce11d349f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0280890f-454b-4f1a-a9e6-e91f1c6a6ef6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a1b6cc49-906e-4d99-a82a-462817b976e7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "01133360-a7da-474c-86d8-061b2e5532fb",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "3374dc47-8def-4147-9404-cb9d6a5567b6",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et cupidatat culpa\",\n            \"properties\": {\n                \"name\": \"Duis consectetur\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "1629c16d-7f69-4adb-80cc-a6361270fdb6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"occaecat dolor dolore\",\n            \"properties\": {\n                \"name\": \"nisi exercitation\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ad est \",\n      \"city\": \"tempor laboris aliqua reprehenderit\",\n      \"country\": \"ullamco u\",\n      \"postcode\": \"est\"\n     },\n     \"locationCode\": \"proident\",\n     \"totalCapacity\": -39664998,\n     \"zoneId\": \"id sit\",\n     \"authorityId\": \"tempor elit\",\n     \"features\": {\n      \"type\": \"mollit cillum tempor\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident nulla\",\n           \"crs\": {\n            \"type\": \"id minim\",\n            \"properties\": {\n             \"name\": \"ut sed ex\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur aliqua est consequat\",\n           \"crs\": {\n            \"type\": \"occaecat nisi nulla enim\",\n            \"properties\": {\n             \"name\": \"Duis nostrud ve\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in exercitation\",\n         \"crs\": {\n          \"type\": \"nisi Ut\",\n          \"properties\": {\n           \"name\": \"eiusmod Excepteur mollit\"\n          }\n         }\n        },\n        \"type\": \"aute Lorem\",\n        \"id\": \"mi\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"conseq\",\n           \"crs\": {\n            \"type\": \"sit non commodo eiusmod\",\n            \"properties\": {\n             \"name\": \"vol\"\n            }\n           }\n          },\n          {\n           \"type\": \"e\",\n           \"crs\": {\n            \"type\": \"Excepteur enim eu fugiat amet\",\n            \"properties\": {\n             \"name\": \"quis do \"\n            }\n           }\n          }\n         ],\n         \"type\": \"elit\",\n         \"crs\": {\n          \"type\": \"pariatur et dolore labore\",\n          \"properties\": {\n           \"name\": \"labore aute magna dolor Duis\"\n          }\n         }\n        },\n        \"type\": \"in sint aliquip n\",\n        \"id\": \"commodo magna\"\n       }\n      ],\n      \"properties\": \"\"\n     },\n     \"paymentMethodIds\": [\n      24970394,\n      -64748615\n     ],\n     \"entityId\": \"amet elit\",\n     \"entityType\": 3,\n     \"name\": \"proident labore amet non\",\n     \"eTag\": \"pariatur proident sit reprehenderit\"\n    },\n    \"distance\": 80338292.37295794\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"exercitation ea\",\n      \"city\": \"elit dolor Excepteur\",\n      \"country\": \"eu\",\n      \"postcode\": \"labore nulla\"\n     },\n     \"locationCode\": \"sint Lorem\",\n     \"totalCapacity\": -29513334,\n     \"zoneId\": \"an\",\n     \"authorityId\": \"do anim cupidatat laborum\",\n     \"features\": {\n      \"type\": \"aliqua in ea exercitation consequat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"magna velit\",\n           \"crs\": {\n            \"type\": \"consectetur aute esse commodo\",\n            \"properties\": {\n             \"name\": \"reprehenderit laborum mollit velit\"\n            }\n           }\n          },\n          {\n           \"type\": \"sit dolor occaecat ea\",\n           \"crs\": {\n            \"type\": \"occaecat sed quis eu velit\",\n            \"properties\": {\n             \"name\": \"ea ipsum eiusmod voluptate\"\n            }\n           }\n          }\n         ],\n         \"type\": \"exercitation occaecat reprehenderit\",\n         \"crs\": {\n          \"type\": \"officia ea ut mollit\",\n          \"properties\": {\n           \"name\": \"ut exercitation occaecat deserunt\"\n          }\n         }\n        },\n        \"type\": \"Lorem anim veniam pariatur\",\n        \"id\": \"ipsum\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"pariatur in sit\",\n           \"crs\": {\n            \"type\": \"cupidatat tempor cillum\",\n            \"properties\": {\n             \"name\": \"officia esse labori\"\n            }\n           }\n          },\n          {\n           \"type\": \"aute commodo\",\n           \"crs\": {\n            \"type\": \"Excepteur Ut occaecat labo\",\n            \"properties\": {\n             \"name\": \"sint non eu reprehenderit\"\n            }\n           }\n          }\n         ],\n         \"type\": \"in esse\",\n         \"crs\": {\n          \"type\": \"dolor id reprehenderit dolore pariatur\",\n          \"properties\": {\n           \"name\": \"do quis Lorem\"\n          }\n         }\n        },\n        \"type\": \"nisi elit\",\n        \"id\": \"in magna dolore officia\"\n       }\n      ],\n      \"properties\": \"laborum id\"\n     },\n     \"paymentMethodIds\": [\n      -904558,\n      -38767966\n     ],\n     \"entityId\": \"dolor Ut ipsum\",\n     \"entityType\": 1,\n     \"name\": \"aute veniam sit id\",\n     \"eTag\": \"non sint laboris\"\n    },\n    \"distance\": 41670896.12485185\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5c6ad634-05e3-4903-8949-d89d8ea4675b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"occaecat dolor dolore\",\n            \"properties\": {\n                \"name\": \"nisi exercitation\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7f1b75a1-f51b-44b5-af5e-980b6225b66e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"occaecat dolor dolore\",\n            \"properties\": {\n                \"name\": \"nisi exercitation\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d11d97bd-ce9b-4c3d-b29a-3ccd2a912ab8",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"occaecat dolor dolore\",\n            \"properties\": {\n                \"name\": \"nisi exercitation\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2dea9904-af18-4c74-85da-65d8d9bf6c16",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"occaecat dolor dolore\",\n            \"properties\": {\n                \"name\": \"nisi exercitation\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2998d748-d912-429b-bdb7-ba6ca2d64131",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "034921d7-f5d5-46f3-91cf-d3105afe5d8e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"dolore Lorem ea occaecat Excepteur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"id dolor quis\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 7021593.446925193,\n      \"currency\": \"Duis\",\n      \"minCost\": 79774668.6646356,\n      \"minStayUntil\": \"ea \",\n      \"canExtendUntil\": \"magna proident reprehenderit Duis veniam\",\n      \"pricedUntil\": \"ex cupidatat velit enim\",\n      \"noReturnUntil\": \"voluptate enim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -71037570,\n       -2842954\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Duis in sit\",\n      \"surcharge\": {\n       \"value\": -45755754.46240547,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -32921100\n       }\n      }\n     },\n     {\n      \"cost\": 97725621.64517224,\n      \"currency\": \"id minim pariatur deserunt\",\n      \"minCost\": 92153738.22330788,\n      \"minStayUntil\": \"nulla voluptate ex\",\n      \"canExtendUntil\": \"consectetur non quis nisi sed\",\n      \"pricedUntil\": \"ex ipsum eiusmod laboris\",\n      \"noReturnUntil\": \"Ut laborum amet nulla\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -39190876,\n       -38776929\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"esse\",\n      \"surcharge\": {\n       \"value\": 47629075.92969778,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 46668926\n       }\n      }\n     }\n    ],\n    \"distance\": 62936981.53015602,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -67439756,\n      27546556\n     ]\n    },\n    \"entityETag\": \"laborum occaecat incididunt\"\n   },\n   {\n    \"entityId\": \"reprehenderit do enim\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 77004183.36450824,\n      \"currency\": \"ea eiusmod pariatur\",\n      \"minCost\": -82023799.07973883,\n      \"minStayUntil\": \"proident minim ullam\",\n      \"canExtendUntil\": \"dolore minim officia ut consequat\",\n      \"pricedUntil\": \"elit dolor\",\n      \"noReturnUntil\": \"cupidatat sed\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -22346017,\n       91842053\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cupidatat officia eiusmod\",\n      \"surcharge\": {\n       \"value\": -59614832.67450767,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 21556015\n       }\n      }\n     },\n     {\n      \"cost\": -62835341.67563971,\n      \"currency\": \"dolor cillum dolore aliqua dolor\",\n      \"minCost\": -16604890.846853778,\n      \"minStayUntil\": \"eiusmod ipsum\",\n      \"canExtendUntil\": \"elit proident tempor Ut\",\n      \"pricedUntil\": \"dolor in\",\n      \"noReturnUntil\": \"eiusmod ad in\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -91527755,\n       -76630330\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"fugiat occaecat in nulla\",\n      \"surcharge\": {\n       \"value\": 81949345.3115598,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -8321691\n       }\n      }\n     }\n    ],\n    \"distance\": 59505013.21380699,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -98671093,\n      19029272\n     ]\n    },\n    \"entityETag\": \"ex ad i\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "022356be-66f1-4d13-95ac-9c4a1f5b3275",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e6bcdd2f-a950-45c6-92dc-4db594523c4e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "83f7e5ef-fe42-4449-9f15-75902c0a4364",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c4e2cd24-873f-432d-ba1b-4ac457e2a8f2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "af769b57-266a-4b28-9b04-94cfbf838afd",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip dolore\",\n            \"properties\": {\n                \"name\": \"incididunt ex eu laborum\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "d71cabd3-185f-404f-b0a3-9e4efe50df4e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliqua quis sit\",\n            \"properties\": {\n                \"name\": \"nulla id magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"dolore Lorem ea occaecat Excepteur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"id dolor quis\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 7021593.446925193,\n      \"currency\": \"Duis\",\n      \"minCost\": 79774668.6646356,\n      \"minStayUntil\": \"ea \",\n      \"canExtendUntil\": \"magna proident reprehenderit Duis veniam\",\n      \"pricedUntil\": \"ex cupidatat velit enim\",\n      \"noReturnUntil\": \"voluptate enim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -71037570,\n       -2842954\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Duis in sit\",\n      \"surcharge\": {\n       \"value\": -45755754.46240547,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -32921100\n       }\n      }\n     },\n     {\n      \"cost\": 97725621.64517224,\n      \"currency\": \"id minim pariatur deserunt\",\n      \"minCost\": 92153738.22330788,\n      \"minStayUntil\": \"nulla voluptate ex\",\n      \"canExtendUntil\": \"consectetur non quis nisi sed\",\n      \"pricedUntil\": \"ex ipsum eiusmod laboris\",\n      \"noReturnUntil\": \"Ut laborum amet nulla\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -39190876,\n       -38776929\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"esse\",\n      \"surcharge\": {\n       \"value\": 47629075.92969778,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 46668926\n       }\n      }\n     }\n    ],\n    \"distance\": 62936981.53015602,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -67439756,\n      27546556\n     ]\n    },\n    \"entityETag\": \"laborum occaecat incididunt\"\n   },\n   {\n    \"entityId\": \"reprehenderit do enim\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 77004183.36450824,\n      \"currency\": \"ea eiusmod pariatur\",\n      \"minCost\": -82023799.07973883,\n      \"minStayUntil\": \"proident minim ullam\",\n      \"canExtendUntil\": \"dolore minim officia ut consequat\",\n      \"pricedUntil\": \"elit dolor\",\n      \"noReturnUntil\": \"cupidatat sed\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -22346017,\n       91842053\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cupidatat officia eiusmod\",\n      \"surcharge\": {\n       \"value\": -59614832.67450767,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 21556015\n       }\n      }\n     },\n     {\n      \"cost\": -62835341.67563971,\n      \"currency\": \"dolor cillum dolore aliqua dolor\",\n      \"minCost\": -16604890.846853778,\n      \"minStayUntil\": \"eiusmod ipsum\",\n      \"canExtendUntil\": \"elit proident tempor Ut\",\n      \"pricedUntil\": \"dolor in\",\n      \"noReturnUntil\": \"eiusmod ad in\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -91527755,\n       -76630330\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"fugiat occaecat in nulla\",\n      \"surcharge\": {\n       \"value\": 81949345.3115598,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -8321691\n       }\n      }\n     }\n    ],\n    \"distance\": 59505013.21380699,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -98671093,\n      19029272\n     ]\n    },\n    \"entityETag\": \"ex ad i\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "73b7e40f-a794-429b-9b79-ced340ef3259",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliqua quis sit\",\n            \"properties\": {\n                \"name\": \"nulla id magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fa9a57cf-c500-4492-8cc9-d7abcf8b98d7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliqua quis sit\",\n            \"properties\": {\n                \"name\": \"nulla id magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7e1bc8fb-bcda-45f8-a7f2-b35f3945b333",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliqua quis sit\",\n            \"properties\": {\n                \"name\": \"nulla id magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4edd8068-0371-474e-a802-a8ec6ac7c8d5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliqua quis sit\",\n            \"properties\": {\n                \"name\": \"nulla id magna\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "38ab12b0-2cad-4178-92a7-3bae9bc880d1",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse dolor\",\n            \"properties\": {\n                \"name\": \"in consequat fugiat sint ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "59740ab8-02af-472e-91c5-401dc551daaa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore qui\",\n            \"properties\": {\n                \"name\": \"commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"sint velit\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"ut fugiat proident\",\n     \"crs\": {\n      \"type\": \"ex et esse\",\n      \"properties\": {\n       \"name\": \"anim cupidatat\"\n      }\n     }\n    },\n    \"type\": \"sit quis\",\n    \"id\": \"nulla cupidatat\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"elit E\",\n     \"crs\": {\n      \"type\": \"do commodo laboris amet\",\n      \"properties\": {\n       \"name\": \"aliqua dolore\"\n      }\n     }\n    },\n    \"type\": \"ea\",\n    \"id\": \"cupidat\"\n   }\n  ],\n  \"properties\": \"consecte\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5f199f23-b3b9-498c-860c-6d139c30cf0a",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore qui\",\n            \"properties\": {\n                \"name\": \"commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fb8e1503-4def-42fc-bde4-2eac63d03e48",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore qui\",\n            \"properties\": {\n                \"name\": \"commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "12a426fb-c33d-4bb5-ba9e-8cba7fd12a36",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore qui\",\n            \"properties\": {\n                \"name\": \"commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "225176b3-6ca4-4a41-b0f5-41c2cb4352a7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore qui\",\n            \"properties\": {\n                \"name\": \"commodo\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "be95acc8-b31f-4470-a10e-523a77677d19",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"labore ni\",\n            \"properties\": {\n                \"name\": \"laboris dolor\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "856fbb50-c79d-4e91-ad02-ad27f5735ff7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum fugiat officia consequat\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ad adipisicing veniam exercitation aute\",\n    \"entityETag\": \"deserunt eu\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 47409964,\n      \"specialRestrictionTypeId\": -25322971,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"minim dolore elit\",\n        \"endTime\": \"occaecat est eiusmod\",\n        \"maxStay\": -3592050\n       },\n       {\n        \"startTime\": \"magna ullamco voluptate irure\",\n        \"endTime\": \"v\",\n        \"maxStay\": -80658867\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 12101617,\n      \"specialRestrictionTypeId\": -20785513,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Excepteur deserunt\",\n        \"endTime\": \"nostrud cupidatat ullamco qui\",\n        \"maxStay\": -15331976\n       },\n       {\n        \"startTime\": \"irure Excepteur\",\n        \"endTime\": \"non commodo sunt dolor\",\n        \"maxStay\": -98160629\n       }\n      ]\n     }\n    ],\n    \"distance\": 71974905.14848122\n   },\n   {\n    \"entityId\": \"ex\",\n    \"entityETag\": \"dol\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -85960217,\n      \"specialRestrictionTypeId\": -98203859,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"in officia\",\n        \"endTime\": \"velit est mollit deserunt\",\n        \"maxStay\": -22330083\n       },\n       {\n        \"startTime\": \"velit\",\n        \"endTime\": \"anim ad eiusmod elit velit\",\n        \"maxStay\": 95685634\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -36364414,\n      \"specialRestrictionTypeId\": -51104187,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolore laborum Excepteur occaecat nisi\",\n        \"endTime\": \"aliqua nulla\",\n        \"maxStay\": -47037591\n       },\n       {\n        \"startTime\": \"aliqua tempor\",\n        \"endTime\": \"amet aliquip\",\n        \"maxStay\": -64296731\n       }\n      ]\n     }\n    ],\n    \"distance\": -41343946.960530564\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"et ipsum\",\n   \"entityETag\": \"amet Excepteur aute\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -67152308,\n     \"specialRestrictionTypeId\": -57563569,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"irure eiusmod commodo\",\n       \"endTime\": \"consequat qui nisi anim sunt\",\n       \"maxStay\": 47883584\n      },\n      {\n       \"startTime\": \"elit do\",\n       \"endTime\": \"pariatur\",\n       \"maxStay\": -9191532\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 32283049,\n     \"specialRestrictionTypeId\": -71811761,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex anim\",\n       \"endTime\": \"ipsum irure quis pariatur\",\n       \"maxStay\": -57603196\n      },\n      {\n       \"startTime\": \"mollit esse proident\",\n       \"endTime\": \"adipisicing qui deserunt laborum\",\n       \"maxStay\": -60054622\n      }\n     ]\n    }\n   ],\n   \"distance\": -74736395.55419144\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bb40c43f-a866-4757-91d6-5564003d02ef",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum fugiat officia consequat\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua mollit minim\",\n \"errors\": [\n  {\n   \"property\": \"ea quis\",\n   \"code\": \"ut\",\n   \"message\": \"amet do aliqua nostrud\"\n  },\n  {\n   \"property\": \"laborum ut\",\n   \"code\": \"sint nulla et dolore amet\",\n   \"message\": \"cupidatat dolor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "30ad4f22-907d-428d-84fa-06711e8f5acf",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum fugiat officia consequat\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d587cc3d-1cd0-41a1-98a3-f7c991a9cbae",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum fugiat officia consequat\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7ef69249-2b79-497e-b514-6d74702933dc",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum fugiat officia consequat\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4e99ae13-bce5-4fbb-b14c-5ecc86ccd78d",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "3ed51448-9e43-455d-8603-cfaec5afc4e7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f571b1da-fec3-4b86-948b-deb7934e45ad",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f0256249-442a-4236-b476-c9ff6749c408",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "17a7f236-cdb1-4c01-b304-455a296b943e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "c760e13a-96bd-4c22-aec9-654e5b367ab7",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
