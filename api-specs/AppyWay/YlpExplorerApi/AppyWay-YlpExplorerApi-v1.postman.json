{
  "item": [
    {
      "id": "be1fe184-9230-46c4-8f5e-86665a4b930c",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "10b3169b-5503-451f-b1f5-06a5febdd163",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"esse reprehenderit\"\n   },\n   {\n    \"message\": \"Ut commodo es\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"eu esse Excepteur\",\n    \"cardPaymentsExternalUrl\": \"elit aliqua in\",\n    \"paymentsTelephone\": \"cillum amet\"\n   },\n   {\n    \"name\": \"anim ex exercitation consectetur\",\n    \"cardPaymentsExternalUrl\": \"anim\",\n    \"paymentsTelephone\": \"exercitation in\"\n   }\n  ],\n  \"entityType\": 3,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"qui reprehenderit ut\",\n     \"crs\": {\n      \"type\": \"consectetur pariatur\",\n      \"properties\": {\n       \"name\": \"laborum cillum irure in\"\n      }\n     }\n    },\n    {\n     \"type\": \"nulla\",\n     \"crs\": {\n      \"type\": \"nostrud non\",\n      \"properties\": {\n       \"name\": \"ut velit mollit dolor\"\n      }\n     }\n    }\n   ],\n   \"type\": \"tempor officia adipisicing est occaecat\",\n   \"crs\": {\n    \"type\": \"ad dolor in\",\n    \"properties\": {\n     \"name\": \"cillum non\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"nulla eu dolor\",\n  \"name\": \"sunt Excepteur est \",\n  \"eTag\": \"Duis nisi et do\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1329b2bf-732e-4452-b23c-bf6b16d78e5c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1616bd3d-64f9-4b06-b240-f102b4239b31",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2d4c7e62-0088-4c8b-9eeb-7dc9ba93722d",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0a91093d-e9f8-458f-98e7-161c5ea3b397",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "90b9cd7d-5f55-47a9-9f66-46270ae4ee9b",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2f91266d-810f-42f8-8242-150a3da0d005",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"in culpa eiusmod officia\",\n     \"city\": \"ipsum reprehenderit\",\n     \"country\": \"incididunt elit sit\",\n     \"postcode\": \"deserunt\"\n    },\n    \"locationCode\": \"magna eu qui velit occaecat\",\n    \"totalCapacity\": 24251378,\n    \"zoneId\": \"ex Duis dolor\",\n    \"authorityId\": \"proident sit irure Ex\",\n    \"features\": {\n     \"type\": \"exercitation ex ut\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"do laborum veniam ex ad\",\n          \"crs\": {\n           \"type\": \"eiusmod qui t\",\n           \"properties\": {\n            \"name\": \"ut Lorem\"\n           }\n          }\n         },\n         {\n          \"type\": \"elit pariatur voluptat\",\n          \"crs\": {\n           \"type\": \"reprehend\",\n           \"properties\": {\n            \"name\": \"in qui dolore anim\"\n           }\n          }\n         }\n        ],\n        \"type\": \"do fugiat\",\n        \"crs\": {\n         \"type\": \"exercitation fugiat Lorem\",\n         \"properties\": {\n          \"name\": \"dolore enim\"\n         }\n        }\n       },\n       \"type\": \"mollit officia\",\n       \"id\": \"nostrud labore\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"reprehenderit dolore adipisicing do\",\n          \"crs\": {\n           \"type\": \"sit dolore id in\",\n           \"properties\": {\n            \"name\": \"cupidatat Ut et sint\"\n           }\n          }\n         },\n         {\n          \"type\": \"aliquip ut laborum sit\",\n          \"crs\": {\n           \"type\": \"culpa in proident Excepteur sint\",\n           \"properties\": {\n            \"name\": \"eu Ut sint fugiat deserunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"esse aute\",\n        \"crs\": {\n         \"type\": \"ex enim nisi\",\n         \"properties\": {\n          \"name\": \"fugiat tempor adipisicing\"\n         }\n        }\n       },\n       \"type\": \"occaeca\",\n       \"id\": \"officia veniam Lorem\"\n      }\n     ],\n     \"properties\": \"occaecat Duis\"\n    },\n    \"paymentMethodIds\": [\n     -81446994,\n     -56747127\n    ],\n    \"entityId\": \"nulla\",\n    \"entityType\": 2,\n    \"name\": \"nulla cillum \",\n    \"eTag\": \"in Ut mollit\"\n   },\n   {\n    \"address\": {\n     \"street\": \"eu\",\n     \"city\": \"labore mollit cupidatat in\",\n     \"country\": \"occaecat voluptate\",\n     \"postcode\": \"culpa sunt laborum eu\"\n    },\n    \"locationCode\": \"in mollit ea enim minim\",\n    \"totalCapacity\": -17739748,\n    \"zoneId\": \"ut Excepteur est\",\n    \"authorityId\": \"quis anim\",\n    \"features\": {\n     \"type\": \"Lorem\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ipsum\",\n          \"crs\": {\n           \"type\": \"labore ut\",\n           \"properties\": {\n            \"name\": \"sed non veniam culpa\"\n           }\n          }\n         },\n         {\n          \"type\": \"laborum nostrud consequat\",\n          \"crs\": {\n           \"type\": \"quis elit dolore laborum\",\n           \"properties\": {\n            \"name\": \"proident quis Duis\"\n           }\n          }\n         }\n        ],\n        \"type\": \"nostrud dolore incididunt adipisicing\",\n        \"crs\": {\n         \"type\": \"aliqua culpa nisi consectetur\",\n         \"properties\": {\n          \"name\": \"nulla nostrud ad\"\n         }\n        }\n       },\n       \"type\": \"nisi deserunt culpa\",\n       \"id\": \"deserunt laboris\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Lorem\",\n          \"crs\": {\n           \"type\": \"dolor do labore deserunt mollit\",\n           \"properties\": {\n            \"name\": \"et\"\n           }\n          }\n         },\n         {\n          \"type\": \"ess\",\n          \"crs\": {\n           \"type\": \"sunt aliqua eiusmod laboris\",\n           \"properties\": {\n            \"name\": \"nostrud\"\n           }\n          }\n         }\n        ],\n        \"type\": \"id ut\",\n        \"crs\": {\n         \"type\": \"eu et ipsum in\",\n         \"properties\": {\n          \"name\": \"minim\"\n         }\n        }\n       },\n       \"type\": \"reprehenderit mollit laboris Ut\",\n       \"id\": \"laborum\"\n      }\n     ],\n     \"properties\": \"in aliquip ullamco\"\n    },\n    \"paymentMethodIds\": [\n     42697432,\n     -82619860\n    ],\n    \"entityId\": \"fugiat ex amet\",\n    \"entityType\": 3,\n    \"name\": \"dolore fugiat ea\",\n    \"eTag\": \"nostrud eiusmod culpa\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"do commodo nostrud sed\",\n       \"crs\": {\n        \"type\": \"aliquip sint deserunt aute\",\n        \"properties\": {\n         \"name\": \"laborum Duis anim ad\"\n        }\n       }\n      },\n      {\n       \"type\": \"deserunt ad commodo\",\n       \"crs\": {\n        \"type\": \"Ut qui\",\n        \"properties\": {\n         \"name\": \"qui voluptate proident\"\n        }\n       }\n      }\n     ],\n     \"type\": \"irure est sit occaecat in\",\n     \"crs\": {\n      \"type\": \"ut \",\n      \"properties\": {\n       \"name\": \"consectetur dolor\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"occaecat cupidatat officia\"\n     },\n     {\n      \"message\": \"aute deserunt\"\n     }\n    ],\n    \"authorityId\": \"labori\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"magna est fugiat non dolor\",\n    \"name\": \"nisi aliquip\",\n    \"eTag\": \"veniam occae\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ea minim ad\",\n       \"crs\": {\n        \"type\": \"ipsum non est aliq\",\n        \"properties\": {\n         \"name\": \"in Lorem aliquip\"\n        }\n       }\n      },\n      {\n       \"type\": \"dolore cupidatat com\",\n       \"crs\": {\n        \"type\": \"ut\",\n        \"properties\": {\n         \"name\": \"qui cillum anim consectetur\"\n        }\n       }\n      }\n     ],\n     \"type\": \"veniam esse et\",\n     \"crs\": {\n      \"type\": \"l\",\n      \"properties\": {\n       \"name\": \"exercitation ea culpa deserunt\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"nostrud\"\n     },\n     {\n      \"message\": \"reprehenderit incididunt\"\n     }\n    ],\n    \"authorityId\": \"minim exe\",\n    \"zoneType\": 1,\n    \"entityType\": 4,\n    \"entityId\": \"exercitation eiusmod in enim\",\n    \"name\": \"reprehenderit pariatur eiusmod\",\n    \"eTag\": \"exercitation proident adipisicing veniam Excepteur\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"enim an\"\n     },\n     {\n      \"message\": \"sed Excepteur pariatur laborum culpa\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ut eiusmod cupidatat est aliquip\",\n      \"cardPaymentsExternalUrl\": \"voluptate Excepteur mollit\",\n      \"paymentsTelephone\": \"reprehenderit adipisicing eu\"\n     },\n     {\n      \"name\": \"adipisicing id elit sint\",\n      \"cardPaymentsExternalUrl\": \"in ad enim nisi sunt\",\n      \"paymentsTelephone\": \"exercitation irure in\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"id in dolor ea cupidatat\",\n       \"crs\": {\n        \"type\": \"laboris cupidatat Duis eiusmod\",\n        \"properties\": {\n         \"name\": \"\"\n        }\n       }\n      },\n      {\n       \"type\": \"ad fugiat ipsum dolore\",\n       \"crs\": {\n        \"type\": \"Duis aliqua cupidatat non\",\n        \"properties\": {\n         \"name\": \"elit in qui ipsum\"\n        }\n       }\n      }\n     ],\n     \"type\": \"et officia cupidatat\",\n     \"crs\": {\n      \"type\": \"fugiat commodo laboris sunt\",\n      \"properties\": {\n       \"name\": \"ipsum minim ea\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"veniam Duis laborum laboris\",\n    \"name\": \"fugiat ea aliqua consequat\",\n    \"eTag\": \"veniam\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"Duis labore aliquip\"\n     },\n     {\n      \"message\": \"aliquip Duis minim Ut\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"qui mollit\",\n      \"cardPaymentsExternalUrl\": \"in proident\",\n      \"paymentsTelephone\": \"enim dolore ipsum\"\n     },\n     {\n      \"name\": \"velit magna in\",\n      \"cardPaymentsExternalUrl\": \"eu eiusmod\",\n      \"paymentsTelephone\": \"irure quis\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"qui Lorem\",\n       \"crs\": {\n        \"type\": \"non\",\n        \"properties\": {\n         \"name\": \"laborum consequat\"\n        }\n       }\n      },\n      {\n       \"type\": \"sed nostrud u\",\n       \"crs\": {\n        \"type\": \"dolore\",\n        \"properties\": {\n         \"name\": \"dolor anim\"\n        }\n       }\n      }\n     ],\n     \"type\": \"non qui\",\n     \"crs\": {\n      \"type\": \"dolore ex cillum eiusmod\",\n      \"properties\": {\n       \"name\": \"dolor voluptate aute comm\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"dolore sed nisi non labore\",\n    \"name\": \"commodo amet\",\n    \"eTag\": \"et\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6d4641e0-fe1a-409a-905b-a0e29278e329",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Ut non irure\",\n \"errors\": [\n  {\n   \"property\": \"cupidatat ex anim\",\n   \"code\": \"cillum sunt adipisicing\",\n   \"message\": \"minim enim ipsum officia labore\"\n  },\n  {\n   \"property\": \"veniam cillum laborum\",\n   \"code\": \"exercitation occaecat ut\",\n   \"message\": \"ex nisi\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8eb12fea-5776-4b1b-866b-84561c056c36",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "45157a50-d6b6-4c1c-bb9d-22e9e61eb023",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0e983d6a-379d-4213-a1b3-6f580d6ca0c2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5d72597d-4faa-47c4-b94c-dc1deabcc3ae",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f99fa85d-cc4e-4ddf-98d5-27c46ca865ce",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"occaecat veniam anim culpa\",\n   \"city\": \"Lorem adipisicing ex\",\n   \"country\": \"incididunt irure voluptate\",\n   \"postcode\": \"commodo proide\"\n  },\n  \"locationCode\": \"\",\n  \"totalCapacity\": 57048196,\n  \"zoneId\": \"culpa ex aliquip\",\n  \"authorityId\": \"ad anim veniam\",\n  \"features\": {\n   \"type\": \"officia Ut dolore eiusmod\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"veniam ea\",\n        \"crs\": {\n         \"type\": \"eu\",\n         \"properties\": {\n          \"name\": \"aliqua deserunt sint sunt\"\n         }\n        }\n       },\n       {\n        \"type\": \"ex Duis ut\",\n        \"crs\": {\n         \"type\": \"eu ullamco eiusmod\",\n         \"properties\": {\n          \"name\": \"dolore labore incididunt\"\n         }\n        }\n       }\n      ],\n      \"type\": \"velit in ea esse\",\n      \"crs\": {\n       \"type\": \"incididunt velit quis\",\n       \"properties\": {\n        \"name\": \"est nulla\"\n       }\n      }\n     },\n     \"type\": \"eiusmo\",\n     \"id\": \"in officia est fugiat\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"qui fugiat laborum Ut\",\n        \"crs\": {\n         \"type\": \"quis exercitation laboris irure\",\n         \"properties\": {\n          \"name\": \"reprehenderit anim incididunt\"\n         }\n        }\n       },\n       {\n        \"type\": \"sit irure ipsum dolore ex\",\n        \"crs\": {\n         \"type\": \"enim minim\",\n         \"properties\": {\n          \"name\": \"minim sunt elit\"\n         }\n        }\n       }\n      ],\n      \"type\": \"sed sunt\",\n      \"crs\": {\n       \"type\": \"Lorem labore consectetur dolore\",\n       \"properties\": {\n        \"name\": \"commodo proident do ea\"\n       }\n      }\n     },\n     \"type\": \"veniam eiusmod do in ut\",\n     \"id\": \"sed anim dolore\"\n    }\n   ],\n   \"properties\": \"ut consectetur\"\n  },\n  \"paymentMethodIds\": [\n   -21576543,\n   -98515466\n  ],\n  \"entityId\": \"exercitation\",\n  \"entityType\": 4,\n  \"name\": \"sed sint\",\n  \"eTag\": \"occaeca\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7885a5e8-f833-4043-a642-af1ef2a63f10",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b875b304-0dc6-44a8-8367-3dce01ad9c29",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c010a20d-7ae3-4225-b5a2-6e31838d3cf8",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b5d8d912-af2d-4996-a278-cfbd0ca1d22d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "517037cd-ce05-4fd0-8177-35d5f90b8673",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "d6107235-f0e8-4637-9948-82ded4459c1e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"eu proident eiusmod\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": -60808852.02875619,\n    \"currency\": \"adipisicing ullamco laboris voluptate veniam\",\n    \"minCost\": 11446584.599527925,\n    \"minStayUntil\": \"quis laborum nisi consecte\",\n    \"canExtendUntil\": \"deserunt sit\",\n    \"pricedUntil\": \"ut fugiat\",\n    \"noReturnUntil\": \"enim ad nulla et\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -26376756,\n     -45562854\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"sed ipsum occaecat\",\n    \"surcharge\": {\n     \"value\": 86779855.21429697,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 63085305\n     }\n    }\n   },\n   {\n    \"cost\": -36817374.442463405,\n    \"currency\": \"consequat in qui\",\n    \"minCost\": 79275554.6374194,\n    \"minStayUntil\": \"pa\",\n    \"canExtendUntil\": \"minim laboris exercitation ipsum\",\n    \"pricedUntil\": \"eu fugiat veni\",\n    \"noReturnUntil\": \"dolore exercitation ea in\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -14541503,\n     -914314\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"dolore et ex proident\",\n    \"surcharge\": {\n     \"value\": 26788444.386015624,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 43524594\n     }\n    }\n   }\n  ],\n  \"distance\": 27932269.521599814,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    85011291,\n    -50870209\n   ]\n  },\n  \"entityETag\": \"in dolor non\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "92573658-d1a7-4f26-9f37-843c5c66e499",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4e0f1729-5389-408d-a965-3e7f166004a0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0f1bba42-d888-4c18-81a6-2278d1c74d6d",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "17ef2501-08c7-4aec-b37d-b2ea6c7f5bff",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "afaa169a-b6e9-40d0-b538-d9cfea9434ba",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e9065349-3dd2-43b9-a241-05d1e7f03c99",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"ipsum cupidatat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"eiusmod anim sunt non\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -43758084.993401036,\n      \"currency\": \"laboris quis commodo adipisicing\",\n      \"minCost\": -3366419.8108005077,\n      \"minStayUntil\": \"commodo est dolor cillu\",\n      \"canExtendUntil\": \"ut\",\n      \"pricedUntil\": \"Duis in\",\n      \"noReturnUntil\": \"aute incididunt labore\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       23556454,\n       -99853067\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"reprehenderit pariatur\",\n      \"surcharge\": {\n       \"value\": -82325038.06147781,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -20201848\n       }\n      }\n     },\n     {\n      \"cost\": 38024227.68622056,\n      \"currency\": \"elit dolore mollit occaecat\",\n      \"minCost\": -4086614.1794044375,\n      \"minStayUntil\": \"ut aliquip\",\n      \"canExtendUntil\": \"sunt\",\n      \"pricedUntil\": \"dolor fugiat\",\n      \"noReturnUntil\": \"sunt mollit\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       68858414,\n       -15217421\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sed in ea deserunt\",\n      \"surcharge\": {\n       \"value\": -87858329.90635094,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 62027693\n       }\n      }\n     }\n    ],\n    \"distance\": -67303411.4159814,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -39062232,\n      44089369\n     ]\n    },\n    \"entityETag\": \"Excepteur Lorem in\"\n   },\n   {\n    \"entityId\": \"aliquip quis cupidatat mollit commodo\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -40789667.71988033,\n      \"currency\": \"in laborum\",\n      \"minCost\": 36881841.77778283,\n      \"minStayUntil\": \"ullamco aliquip nisi\",\n      \"canExtendUntil\": \"et velit ex\",\n      \"pricedUntil\": \"dolore anim pariatur\",\n      \"noReturnUntil\": \"Duis anim voluptate dolor\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -14215964,\n       -33795766\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"exercitation dolore reprehenderit et\",\n      \"surcharge\": {\n       \"value\": -21673008.843555495,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 99092257\n       }\n      }\n     },\n     {\n      \"cost\": 44290352.279943556,\n      \"currency\": \"Duis nostrud anim sed aute\",\n      \"minCost\": -24532672.373011395,\n      \"minStayUntil\": \"in veniam fugiat est elit\",\n      \"canExtendUntil\": \"deserunt est elit ullamco\",\n      \"pricedUntil\": \"occaecat dolore deserunt quis dolor\",\n      \"noReturnUntil\": \"officia Duis in aliqua minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -23559410,\n       79866001\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"exercitation cupidatat\",\n      \"surcharge\": {\n       \"value\": 63036964.877514064,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -74820586\n       }\n      }\n     }\n    ],\n    \"distance\": 45568710.74438554,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      78001414,\n      -76391006\n     ]\n    },\n    \"entityETag\": \"culpa\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a42f0604-1de4-425b-86a1-c748403e8abd",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fa02a5ca-3f44-4cdd-a1dd-f033ad6bdd1a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c603060d-8705-4169-96fe-60c62f04b8c5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5451d6b1-db9e-4e49-8aa3-8270d45913b2",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "376a727f-4dcd-43aa-b4c1-3c785f86ea42",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"in occaecat\",\n    \"cardPaymentsExternalUrl\": \"est in ut aliquip\",\n    \"paymentsTelephone\": \"aliquip dolor\"\n   },\n   {\n    \"name\": \"et id dolor \",\n    \"cardPaymentsExternalUrl\": \"aute laboris minim\",\n    \"paymentsTelephone\": \"Lorem cupidatat enim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2aef0d1f-2d80-4566-b7fd-3e20bcb7469b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f37b3c97-2875-4771-afd3-2518180438d0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "39baf27d-fca5-498e-a937-bfa21e68787f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6b1e908d-976c-4e64-946d-de5d9f703ba4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "942e8b10-c4df-42f5-a2e4-396dca77318a",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "ba7af048-a825-4aaa-a93d-efe02fd3d797",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"Ut do deserunt\",\n     \"crs\": {\n      \"type\": \"sit aliquip labore\",\n      \"properties\": {\n       \"name\": \"consectetur proident\"\n      }\n     }\n    },\n    {\n     \"type\": \"ut sit ipsum commodo\",\n     \"crs\": {\n      \"type\": \"voluptate Ut laborum\",\n      \"properties\": {\n       \"name\": \"cupidatat non enim ut\"\n      }\n     }\n    }\n   ],\n   \"type\": \"Duis aute sunt eu\",\n   \"crs\": {\n    \"type\": \"in Lorem in\",\n    \"properties\": {\n     \"name\": \"Excepteur esse consectetur incididunt\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"qui Duis ipsum fugiat\"\n   },\n   {\n    \"message\": \"et occaecat ut\"\n   }\n  ],\n  \"authorityId\": \"nisi aliquip\",\n  \"zoneType\": 2,\n  \"entityType\": 3,\n  \"entityId\": \"cupidatat\",\n  \"name\": \"proident Duis non et\",\n  \"eTag\": \"minim dolore deserunt consectetur in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7782b170-3a0d-4a45-8061-046b5756edc0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e6fe4752-8cb5-4811-80cb-e0420a458e41",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "385b19b4-47ec-400d-bc43-f21cc04c30a7",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ba5ba033-fabc-4965-977f-f69f00d0b23d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5eebd143-f32c-49e1-be4e-aed50d6aa191",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"rep\",\n            \"properties\": {\n                \"name\": \"commodo ullamco ea qui\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "667af04e-b81f-44fd-811e-7b88be944ffa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum velit do\",\n            \"properties\": {\n                \"name\": \"co\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"do dolor nisi labore\",\n    \"entityETag\": \"magna sed anim nisi\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -95586166,\n      \"specialRestrictionTypeId\": -9573480,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ut incididunt proident ut\",\n        \"endTime\": \"nulla ut in\",\n        \"maxStay\": -7243403\n       },\n       {\n        \"startTime\": \"commodo voluptate\",\n        \"endTime\": \"eu non occaecat nisi\",\n        \"maxStay\": -24543768\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -89536332,\n      \"specialRestrictionTypeId\": 18371300,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud veniam adipisicing non\",\n        \"endTime\": \"aute \",\n        \"maxStay\": 46142482\n       },\n       {\n        \"startTime\": \"nostrud irure\",\n        \"endTime\": \"in Ut dol\",\n        \"maxStay\": -54721773\n       }\n      ]\n     }\n    ],\n    \"distance\": -12781552.748409197\n   },\n   {\n    \"entityId\": \"et ipsum sunt\",\n    \"entityETag\": \"Ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 59600645,\n      \"specialRestrictionTypeId\": 40097678,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"labore consectetur\",\n        \"endTime\": \"velit qui ea ipsum\",\n        \"maxStay\": -83880740\n       },\n       {\n        \"startTime\": \"pariatur et veniam sed irure\",\n        \"endTime\": \"irure qui\",\n        \"maxStay\": -40054710\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -68442930,\n      \"specialRestrictionTypeId\": 18843134,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex consectetur\",\n        \"endTime\": \"do cillum id\",\n        \"maxStay\": 60094593\n       },\n       {\n        \"startTime\": \"do dolor\",\n        \"endTime\": \"inci\",\n        \"maxStay\": 61440169\n       }\n      ]\n     }\n    ],\n    \"distance\": -33566134.36128986\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"enim\",\n   \"entityETag\": \"dolore tempor no\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -1778929,\n     \"specialRestrictionTypeId\": 33075810,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"Duis\",\n       \"endTime\": \"proide\",\n       \"maxStay\": 32272139\n      },\n      {\n       \"startTime\": \"quis aliqua\",\n       \"endTime\": \"deserunt fugiat labore\",\n       \"maxStay\": 363440\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -16141001,\n     \"specialRestrictionTypeId\": 10818371,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"eiusmod\",\n       \"endTime\": \"laboris q\",\n       \"maxStay\": 89961881\n      },\n      {\n       \"startTime\": \"aliquip ut\",\n       \"endTime\": \"Excepteur ad nulla et reprehenderit\",\n       \"maxStay\": -76486757\n      }\n     ]\n    }\n   ],\n   \"distance\": 15795402.500650853\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6ae5187b-0dc3-4da8-97ca-d0f14dbd2379",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum velit do\",\n            \"properties\": {\n                \"name\": \"co\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0993e864-7660-46e7-a583-f2181208a22a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum velit do\",\n            \"properties\": {\n                \"name\": \"co\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c539929b-f573-4996-a6a5-f82d27da824b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum velit do\",\n            \"properties\": {\n                \"name\": \"co\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "df9f2b40-20ca-46ca-87d6-f8b5cc8d742a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum velit do\",\n            \"properties\": {\n                \"name\": \"co\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "706e5158-4dc1-49bd-846a-baf3b78d0ca9",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "a2dfdc34-794b-43fd-b0c2-589bb7e77f8c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"labore\",\n      \"city\": \"fugiat in\",\n      \"country\": \"reprehenderit pariatur ipsum\",\n      \"postcode\": \"et minim occaecat ut\"\n     },\n     \"locationCode\": \"in eu\",\n     \"totalCapacity\": -94118461,\n     \"zoneId\": \"cupidatat et sed\",\n     \"authorityId\": \"sit in\",\n     \"features\": {\n      \"type\": \"esse ullamco ipsum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sint tempor dolor\",\n           \"crs\": {\n            \"type\": \"anim \",\n            \"properties\": {\n             \"name\": \"elit dolor ex\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut in consectetur Lorem\",\n           \"crs\": {\n            \"type\": \"sint amet qui\",\n            \"properties\": {\n             \"name\": \"Lorem aute cupi\"\n            }\n           }\n          }\n         ],\n         \"type\": \"voluptat\",\n         \"crs\": {\n          \"type\": \"reprehenderit esse sint irure\",\n          \"properties\": {\n           \"name\": \"consectetur exercitation sunt\"\n          }\n         }\n        },\n        \"type\": \"adipisicing laboris eu est\",\n        \"id\": \"magna anim E\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident in exercitation\",\n           \"crs\": {\n            \"type\": \"irure Ut aliqua exercitation Excepteur\",\n            \"properties\": {\n             \"name\": \"pariatur anim dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"Duis irure ex laborum deserunt\",\n           \"crs\": {\n            \"type\": \"in quis\",\n            \"properties\": {\n             \"name\": \"\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore eiusmod esse officia Excepteur\",\n         \"crs\": {\n          \"type\": \"qui\",\n          \"properties\": {\n           \"name\": \"minim sit ut commodo\"\n          }\n         }\n        },\n        \"type\": \"ut labore dolor\",\n        \"id\": \"sed reprehenderi\"\n       }\n      ],\n      \"properties\": \"sunt fug\"\n     },\n     \"paymentMethodIds\": [\n      -31261179,\n      26933763\n     ],\n     \"entityId\": \"mollit incididunt amet\",\n     \"entityType\": 4,\n     \"name\": \"pariatur qui\",\n     \"eTag\": \"ut sunt minim labore aliquip\"\n    },\n    \"distance\": -40666369.460383356\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ut tempor\",\n      \"city\": \"dolor qui incididunt\",\n      \"country\": \"sit ullamco amet el\",\n      \"postcode\": \"anim occaecat\"\n     },\n     \"locationCode\": \"sed commod\",\n     \"totalCapacity\": -72003621,\n     \"zoneId\": \"sit\",\n     \"authorityId\": \"officia in dolore consectetur\",\n     \"features\": {\n      \"type\": \"ipsum Duis\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"aliqua pariatur ea irure\",\n           \"crs\": {\n            \"type\": \"ipsum commodo ut sed\",\n            \"properties\": {\n             \"name\": \"dolore do enim\"\n            }\n           }\n          },\n          {\n           \"type\": \"veniam in\",\n           \"crs\": {\n            \"type\": \"in amet\",\n            \"properties\": {\n             \"name\": \"occaecat Excepteur elit aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"fug\",\n         \"crs\": {\n          \"type\": \"nostrud cillum\",\n          \"properties\": {\n           \"name\": \"veniam tempor\"\n          }\n         }\n        },\n        \"type\": \"eu incididunt minim dol\",\n        \"id\": \"amet culpa eu\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ullamco nisi nulla\",\n           \"crs\": {\n            \"type\": \"mi\",\n            \"properties\": {\n             \"name\": \"labore\"\n            }\n           }\n          },\n          {\n           \"type\": \"aliquip ex laborum aliqua\",\n           \"crs\": {\n            \"type\": \"dolor proident\",\n            \"properties\": {\n             \"name\": \"reprehenderit ex labore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"magna adipisicing sit eu do\",\n         \"crs\": {\n          \"type\": \"occaecat et\",\n          \"properties\": {\n           \"name\": \"tempor laboris\"\n          }\n         }\n        },\n        \"type\": \"culpa nisi ea sed\",\n        \"id\": \"qui cillum L\"\n       }\n      ],\n      \"properties\": \"qui eu reprehenderit aliquip\"\n     },\n     \"paymentMethodIds\": [\n      -67267903,\n      76471065\n     ],\n     \"entityId\": \"in \",\n     \"entityType\": 2,\n     \"name\": \"consequat laborum\",\n     \"eTag\": \"ipsum voluptate occaecat Lorem do\"\n    },\n    \"distance\": 81939407.99661389\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e1a10175-2dde-4230-a332-b94bf92139a5",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "04c0e2eb-1740-4102-b358-87ff7017379f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "95871d17-3d6f-4007-854c-da32d1d891e4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "504b01b0-ad30-41b7-ac01-76af946f2f84",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b21617a0-4e98-4d24-9f07-24ba6b3f1264",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in veniam pariatur\",\n            \"properties\": {\n                \"name\": \"sint tempor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "e3e5fa33-c4f8-4b52-b105-bc874ce2b8cc",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem\",\n            \"properties\": {\n                \"name\": \"ex velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"labore\",\n      \"city\": \"fugiat in\",\n      \"country\": \"reprehenderit pariatur ipsum\",\n      \"postcode\": \"et minim occaecat ut\"\n     },\n     \"locationCode\": \"in eu\",\n     \"totalCapacity\": -94118461,\n     \"zoneId\": \"cupidatat et sed\",\n     \"authorityId\": \"sit in\",\n     \"features\": {\n      \"type\": \"esse ullamco ipsum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sint tempor dolor\",\n           \"crs\": {\n            \"type\": \"anim \",\n            \"properties\": {\n             \"name\": \"elit dolor ex\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut in consectetur Lorem\",\n           \"crs\": {\n            \"type\": \"sint amet qui\",\n            \"properties\": {\n             \"name\": \"Lorem aute cupi\"\n            }\n           }\n          }\n         ],\n         \"type\": \"voluptat\",\n         \"crs\": {\n          \"type\": \"reprehenderit esse sint irure\",\n          \"properties\": {\n           \"name\": \"consectetur exercitation sunt\"\n          }\n         }\n        },\n        \"type\": \"adipisicing laboris eu est\",\n        \"id\": \"magna anim E\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"proident in exercitation\",\n           \"crs\": {\n            \"type\": \"irure Ut aliqua exercitation Excepteur\",\n            \"properties\": {\n             \"name\": \"pariatur anim dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"Duis irure ex laborum deserunt\",\n           \"crs\": {\n            \"type\": \"in quis\",\n            \"properties\": {\n             \"name\": \"\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore eiusmod esse officia Excepteur\",\n         \"crs\": {\n          \"type\": \"qui\",\n          \"properties\": {\n           \"name\": \"minim sit ut commodo\"\n          }\n         }\n        },\n        \"type\": \"ut labore dolor\",\n        \"id\": \"sed reprehenderi\"\n       }\n      ],\n      \"properties\": \"sunt fug\"\n     },\n     \"paymentMethodIds\": [\n      -31261179,\n      26933763\n     ],\n     \"entityId\": \"mollit incididunt amet\",\n     \"entityType\": 4,\n     \"name\": \"pariatur qui\",\n     \"eTag\": \"ut sunt minim labore aliquip\"\n    },\n    \"distance\": -40666369.460383356\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ut tempor\",\n      \"city\": \"dolor qui incididunt\",\n      \"country\": \"sit ullamco amet el\",\n      \"postcode\": \"anim occaecat\"\n     },\n     \"locationCode\": \"sed commod\",\n     \"totalCapacity\": -72003621,\n     \"zoneId\": \"sit\",\n     \"authorityId\": \"officia in dolore consectetur\",\n     \"features\": {\n      \"type\": \"ipsum Duis\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"aliqua pariatur ea irure\",\n           \"crs\": {\n            \"type\": \"ipsum commodo ut sed\",\n            \"properties\": {\n             \"name\": \"dolore do enim\"\n            }\n           }\n          },\n          {\n           \"type\": \"veniam in\",\n           \"crs\": {\n            \"type\": \"in amet\",\n            \"properties\": {\n             \"name\": \"occaecat Excepteur elit aute\"\n            }\n           }\n          }\n         ],\n         \"type\": \"fug\",\n         \"crs\": {\n          \"type\": \"nostrud cillum\",\n          \"properties\": {\n           \"name\": \"veniam tempor\"\n          }\n         }\n        },\n        \"type\": \"eu incididunt minim dol\",\n        \"id\": \"amet culpa eu\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ullamco nisi nulla\",\n           \"crs\": {\n            \"type\": \"mi\",\n            \"properties\": {\n             \"name\": \"labore\"\n            }\n           }\n          },\n          {\n           \"type\": \"aliquip ex laborum aliqua\",\n           \"crs\": {\n            \"type\": \"dolor proident\",\n            \"properties\": {\n             \"name\": \"reprehenderit ex labore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"magna adipisicing sit eu do\",\n         \"crs\": {\n          \"type\": \"occaecat et\",\n          \"properties\": {\n           \"name\": \"tempor laboris\"\n          }\n         }\n        },\n        \"type\": \"culpa nisi ea sed\",\n        \"id\": \"qui cillum L\"\n       }\n      ],\n      \"properties\": \"qui eu reprehenderit aliquip\"\n     },\n     \"paymentMethodIds\": [\n      -67267903,\n      76471065\n     ],\n     \"entityId\": \"in \",\n     \"entityType\": 2,\n     \"name\": \"consequat laborum\",\n     \"eTag\": \"ipsum voluptate occaecat Lorem do\"\n    },\n    \"distance\": 81939407.99661389\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9ef23f70-14fd-4643-883e-18300f75d928",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem\",\n            \"properties\": {\n                \"name\": \"ex velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1c94d6eb-c160-44df-b513-b1b37e26ad70",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem\",\n            \"properties\": {\n                \"name\": \"ex velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f2e04f0e-e292-484e-aa49-b0877928ade8",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem\",\n            \"properties\": {\n                \"name\": \"ex velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b53a99e9-99e0-40db-a64f-0dd86f9e6cee",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem\",\n            \"properties\": {\n                \"name\": \"ex velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0e30f3f3-3b14-4578-a719-a154e506d12d",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "40cb28bd-6a08-4004-bcda-6d06dd1b1d26",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"esse pariatur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"aute sint\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -83650527.59411298,\n      \"currency\": \"in ex Duis\",\n      \"minCost\": -42590648.55788148,\n      \"minStayUntil\": \"proident vel\",\n      \"canExtendUntil\": \"occaecat\",\n      \"pricedUntil\": \"aliqua culpa aute\",\n      \"noReturnUntil\": \"qui dolore velit Ut\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       64739693,\n       22426310\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia sed anim\",\n      \"surcharge\": {\n       \"value\": 58781213.62371895,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 44543160\n       }\n      }\n     },\n     {\n      \"cost\": -60763642.209317446,\n      \"currency\": \"dolor s\",\n      \"minCost\": -56080721.45081895,\n      \"minStayUntil\": \"eu irure cillum\",\n      \"canExtendUntil\": \"aute Lorem deserunt eu exercitation\",\n      \"pricedUntil\": \"labore in officia\",\n      \"noReturnUntil\": \"officia in aute enim\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       87471820,\n       88128101\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis magna elit Excepteur\",\n      \"surcharge\": {\n       \"value\": -47832306.99106467,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -56257944\n       }\n      }\n     }\n    ],\n    \"distance\": 61351757.214826465,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      46504366,\n      -71042721\n     ]\n    },\n    \"entityETag\": \"voluptate\"\n   },\n   {\n    \"entityId\": \"Excepteur in \",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 38949433.712501824,\n      \"currency\": \"in aute Ut Duis\",\n      \"minCost\": -1386964.2623152584,\n      \"minStayUntil\": \"sed culpa fugiat in\",\n      \"canExtendUntil\": \"ut reprehenderit sunt dolore minim\",\n      \"pricedUntil\": \"aute consequat\",\n      \"noReturnUntil\": \"proident\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -65007412,\n       98863088\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore cupidatat do id\",\n      \"surcharge\": {\n       \"value\": 45461617.514027655,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 72646790\n       }\n      }\n     },\n     {\n      \"cost\": -10926477.591623217,\n      \"currency\": \"culpa aliquip consequat\",\n      \"minCost\": -60954265.261110276,\n      \"minStayUntil\": \"ut tempor\",\n      \"canExtendUntil\": \"dolor elit\",\n      \"pricedUntil\": \"quis adipisicing Excepteur tempor\",\n      \"noReturnUntil\": \"aliq\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -74945132,\n       8858558\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris pariatur qui sed\",\n      \"surcharge\": {\n       \"value\": 55933783.57165921,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 73627168\n       }\n      }\n     }\n    ],\n    \"distance\": 92093021.5809026,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -78371168,\n      -25459147\n     ]\n    },\n    \"entityETag\": \"enim in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5d04e04f-d4d5-466a-80d5-29f7bd7d6b1c",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6b781a17-0d5d-4217-bad2-e607ef13f67f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "77e78c2e-83b7-438d-8426-c244f4fe0d24",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c339100c-cf67-4c58-a99d-b39e460c162e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "719aa7cb-5ee3-4d53-9d70-fc847ba03483",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Duis Ut\",\n            \"properties\": {\n                \"name\": \"irure mollit eiusmod\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e4a9a9d3-04c1-48de-b156-c700cebec9aa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt reprehende\",\n            \"properties\": {\n                \"name\": \"dolore deserunt dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"esse pariatur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"aute sint\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -83650527.59411298,\n      \"currency\": \"in ex Duis\",\n      \"minCost\": -42590648.55788148,\n      \"minStayUntil\": \"proident vel\",\n      \"canExtendUntil\": \"occaecat\",\n      \"pricedUntil\": \"aliqua culpa aute\",\n      \"noReturnUntil\": \"qui dolore velit Ut\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       64739693,\n       22426310\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia sed anim\",\n      \"surcharge\": {\n       \"value\": 58781213.62371895,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 44543160\n       }\n      }\n     },\n     {\n      \"cost\": -60763642.209317446,\n      \"currency\": \"dolor s\",\n      \"minCost\": -56080721.45081895,\n      \"minStayUntil\": \"eu irure cillum\",\n      \"canExtendUntil\": \"aute Lorem deserunt eu exercitation\",\n      \"pricedUntil\": \"labore in officia\",\n      \"noReturnUntil\": \"officia in aute enim\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       87471820,\n       88128101\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis magna elit Excepteur\",\n      \"surcharge\": {\n       \"value\": -47832306.99106467,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -56257944\n       }\n      }\n     }\n    ],\n    \"distance\": 61351757.214826465,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      46504366,\n      -71042721\n     ]\n    },\n    \"entityETag\": \"voluptate\"\n   },\n   {\n    \"entityId\": \"Excepteur in \",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 38949433.712501824,\n      \"currency\": \"in aute Ut Duis\",\n      \"minCost\": -1386964.2623152584,\n      \"minStayUntil\": \"sed culpa fugiat in\",\n      \"canExtendUntil\": \"ut reprehenderit sunt dolore minim\",\n      \"pricedUntil\": \"aute consequat\",\n      \"noReturnUntil\": \"proident\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -65007412,\n       98863088\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore cupidatat do id\",\n      \"surcharge\": {\n       \"value\": 45461617.514027655,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 72646790\n       }\n      }\n     },\n     {\n      \"cost\": -10926477.591623217,\n      \"currency\": \"culpa aliquip consequat\",\n      \"minCost\": -60954265.261110276,\n      \"minStayUntil\": \"ut tempor\",\n      \"canExtendUntil\": \"dolor elit\",\n      \"pricedUntil\": \"quis adipisicing Excepteur tempor\",\n      \"noReturnUntil\": \"aliq\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -74945132,\n       8858558\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris pariatur qui sed\",\n      \"surcharge\": {\n       \"value\": 55933783.57165921,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 73627168\n       }\n      }\n     }\n    ],\n    \"distance\": 92093021.5809026,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -78371168,\n      -25459147\n     ]\n    },\n    \"entityETag\": \"enim in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1d6c48ae-7b04-46cb-b364-83aa65d21064",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt reprehende\",\n            \"properties\": {\n                \"name\": \"dolore deserunt dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1e267d10-bdaf-4bb9-969c-25087af1734b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt reprehende\",\n            \"properties\": {\n                \"name\": \"dolore deserunt dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8351ac4b-a696-4238-940f-26fa5a3ece33",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt reprehende\",\n            \"properties\": {\n                \"name\": \"dolore deserunt dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6798c8d5-7e7f-42dc-bff5-8d71a16a54bc",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"incididunt reprehende\",\n            \"properties\": {\n                \"name\": \"dolore deserunt dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7c82694a-4af3-4c8c-8c54-4f875668238e",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut sint\",\n            \"properties\": {\n                \"name\": \"Excepteur do in\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "b8aea686-b6d4-4149-9d6c-98383bab79d0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut d\",\n            \"properties\": {\n                \"name\": \"amet enim occaecat in aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"mollit magna reprehenderit ipsum\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"officia\",\n     \"crs\": {\n      \"type\": \"dolore do commodo al\",\n      \"properties\": {\n       \"name\": \"anim consequat \"\n      }\n     }\n    },\n    \"type\": \"ullamco labore sed\",\n    \"id\": \"consequat commodo Lor\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"Excepteur\",\n     \"crs\": {\n      \"type\": \"aliquip amet tempo\",\n      \"properties\": {\n       \"name\": \"nulla sint anim Duis ut\"\n      }\n     }\n    },\n    \"type\": \"fugiat id velit mollit\",\n    \"id\": \"dolor reprehenderit dolore ut\"\n   }\n  ],\n  \"properties\": \"cupidatat est velit\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e83cba42-96aa-421a-a93f-b6fe1a7a1c02",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut d\",\n            \"properties\": {\n                \"name\": \"amet enim occaecat in aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cceeedd7-11d7-47e6-8a7c-db5574813bd1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut d\",\n            \"properties\": {\n                \"name\": \"amet enim occaecat in aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "93caf27c-3d3d-4093-9146-af99ba6f9b2e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut d\",\n            \"properties\": {\n                \"name\": \"amet enim occaecat in aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a818f4f4-8cb3-4ea0-a34c-82db759c8330",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut d\",\n            \"properties\": {\n                \"name\": \"amet enim occaecat in aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "51d56573-02d9-4903-935c-9e9bc1b5e4af",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut dolore in\",\n            \"properties\": {\n                \"name\": \"deserunt ea aliqua labore veniam\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1fd61a71-399a-4283-b587-fc3aae48eca6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor\",\n            \"properties\": {\n                \"name\": \"exercitation reprehenderit commodo\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"do dolor nisi labore\",\n    \"entityETag\": \"magna sed anim nisi\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -95586166,\n      \"specialRestrictionTypeId\": -9573480,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ut incididunt proident ut\",\n        \"endTime\": \"nulla ut in\",\n        \"maxStay\": -7243403\n       },\n       {\n        \"startTime\": \"commodo voluptate\",\n        \"endTime\": \"eu non occaecat nisi\",\n        \"maxStay\": -24543768\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -89536332,\n      \"specialRestrictionTypeId\": 18371300,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud veniam adipisicing non\",\n        \"endTime\": \"aute \",\n        \"maxStay\": 46142482\n       },\n       {\n        \"startTime\": \"nostrud irure\",\n        \"endTime\": \"in Ut dol\",\n        \"maxStay\": -54721773\n       }\n      ]\n     }\n    ],\n    \"distance\": -12781552.748409197\n   },\n   {\n    \"entityId\": \"et ipsum sunt\",\n    \"entityETag\": \"Ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 59600645,\n      \"specialRestrictionTypeId\": 40097678,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"labore consectetur\",\n        \"endTime\": \"velit qui ea ipsum\",\n        \"maxStay\": -83880740\n       },\n       {\n        \"startTime\": \"pariatur et veniam sed irure\",\n        \"endTime\": \"irure qui\",\n        \"maxStay\": -40054710\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -68442930,\n      \"specialRestrictionTypeId\": 18843134,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex consectetur\",\n        \"endTime\": \"do cillum id\",\n        \"maxStay\": 60094593\n       },\n       {\n        \"startTime\": \"do dolor\",\n        \"endTime\": \"inci\",\n        \"maxStay\": 61440169\n       }\n      ]\n     }\n    ],\n    \"distance\": -33566134.36128986\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"enim\",\n   \"entityETag\": \"dolore tempor no\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -1778929,\n     \"specialRestrictionTypeId\": 33075810,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"Duis\",\n       \"endTime\": \"proide\",\n       \"maxStay\": 32272139\n      },\n      {\n       \"startTime\": \"quis aliqua\",\n       \"endTime\": \"deserunt fugiat labore\",\n       \"maxStay\": 363440\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -16141001,\n     \"specialRestrictionTypeId\": 10818371,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"eiusmod\",\n       \"endTime\": \"laboris q\",\n       \"maxStay\": 89961881\n      },\n      {\n       \"startTime\": \"aliquip ut\",\n       \"endTime\": \"Excepteur ad nulla et reprehenderit\",\n       \"maxStay\": -76486757\n      }\n     ]\n    }\n   ],\n   \"distance\": 15795402.500650853\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "16987696-f0e6-4e77-930b-7f3fc0f7c5e5",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor\",\n            \"properties\": {\n                \"name\": \"exercitation reprehenderit commodo\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ullamco\",\n \"errors\": [\n  {\n   \"property\": \"voluptate aute qui\",\n   \"code\": \"aliquip non consectetur reprehenderit enim\",\n   \"message\": \"dolor\"\n  },\n  {\n   \"property\": \"in in consequat culpa\",\n   \"code\": \"reprehenderit laborum\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "780d78f1-6626-4e3d-812d-3aea8e6d8a0e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor\",\n            \"properties\": {\n                \"name\": \"exercitation reprehenderit commodo\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "39d003f0-564f-484c-b957-30476960d8e7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor\",\n            \"properties\": {\n                \"name\": \"exercitation reprehenderit commodo\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "57626af5-072d-4fb5-bb3c-cba10b551192",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor\",\n            \"properties\": {\n                \"name\": \"exercitation reprehenderit commodo\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c1633cee-5846-4887-af68-ee3360536a9a",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "56b06c15-e9b0-422a-a55b-5389953c00d4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3e855877-ba6f-4c87-830a-6e9417e143c7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3104eb69-4bf9-4478-92be-a49254478ef6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "678e0034-ffd9-4e05-9bde-f7a6fa263851",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "b0bccb07-73dc-443c-a744-1433fd450b1b",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
