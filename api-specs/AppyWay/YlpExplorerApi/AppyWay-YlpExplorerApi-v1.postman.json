{
  "item": [
    {
      "id": "ceac68be-7655-4691-996f-fd04dc2071dc",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "709805e3-7b1d-410f-9058-9ca0c49e49c5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"incididunt adip\"\n   },\n   {\n    \"message\": \"Lorem occaecat cupidatat\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"minim sunt mollit cupidatat incididunt\",\n    \"cardPaymentsExternalUrl\": \"qui incididunt consectetur nisi\",\n    \"paymentsTelephone\": \"cillum v\"\n   },\n   {\n    \"name\": \"\",\n    \"cardPaymentsExternalUrl\": \"elit\",\n    \"paymentsTelephone\": \"proident\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"voluptate reprehenderit nulla\",\n     \"crs\": {\n      \"type\": \"ad reprehenderit\",\n      \"properties\": {\n       \"name\": \"ullamco laborum\"\n      }\n     }\n    },\n    {\n     \"type\": \"proident ea Lorem dolore\",\n     \"crs\": {\n      \"type\": \"culpa qui sunt mollit consequat\",\n      \"properties\": {\n       \"name\": \"sint\"\n      }\n     }\n    }\n   ],\n   \"type\": \"magna et ut est ipsum\",\n   \"crs\": {\n    \"type\": \"aliquip dolor sunt nisi\",\n    \"properties\": {\n     \"name\": \"exercitation ea irure consectetur\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"dolor\",\n  \"name\": \"ipsum\",\n  \"eTag\": \"occaecat ut ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "03d83905-765e-4048-beaf-ee7428d36ad7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "58725703-0324-458f-b921-fcb12e09e847",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5e43cdbd-366d-4daf-b8a4-37ec4a7d22e0",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua dolore eiusmod reprehenderit ad\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "281307ea-5778-4371-b96b-13da2e63259e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "487d32bb-039c-4f3a-854c-72335208dcb9",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "f73ba477-9cb2-41b3-8b3f-5fe8fc439d77",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"fugiat voluptate aliquip mag\",\n     \"city\": \"dolor exercitation nulla fugiat\",\n     \"country\": \"laborum et in ipsum\",\n     \"postcode\": \"fugiat ullamco\"\n    },\n    \"locationCode\": \"anim in incididunt\",\n    \"totalCapacity\": -64148322,\n    \"zoneId\": \"aliqua nisi ut\",\n    \"authorityId\": \"ex labor\",\n    \"features\": {\n     \"type\": \"fugiat sit aliquip aliqua et\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"commodo pariatur\",\n          \"crs\": {\n           \"type\": \"cupidatat labori\",\n           \"properties\": {\n            \"name\": \"sit culpa aliqua\"\n           }\n          }\n         },\n         {\n          \"type\": \"fugiat tempor aliquip labore\",\n          \"crs\": {\n           \"type\": \"ex dolor in in aute\",\n           \"properties\": {\n            \"name\": \"aute ut Ut nisi incididunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"cillum et\",\n        \"crs\": {\n         \"type\": \"anim\",\n         \"properties\": {\n          \"name\": \"fugiat aliqua\"\n         }\n        }\n       },\n       \"type\": \"occaecat Excepteur tempor fu\",\n       \"id\": \"Excepteur adipisicing ea tempor\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"in Ut incididunt anim\",\n          \"crs\": {\n           \"type\": \"Lorem nisi dolor ut proident\",\n           \"properties\": {\n            \"name\": \"nisi anim dolore nulla\"\n           }\n          }\n         },\n         {\n          \"type\": \"occaecat do proident sunt\",\n          \"crs\": {\n           \"type\": \"quis minim anim\",\n           \"properties\": {\n            \"name\": \"dolor veniam in\"\n           }\n          }\n         }\n        ],\n        \"type\": \"in et\",\n        \"crs\": {\n         \"type\": \"dolore Excepteur\",\n         \"properties\": {\n          \"name\": \"sit aute\"\n         }\n        }\n       },\n       \"type\": \"deserunt esse\",\n       \"id\": \"veniam laborum anim fugiat nulla\"\n      }\n     ],\n     \"properties\": \"ex non qui labore dolor\"\n    },\n    \"paymentMethodIds\": [\n     -98353750,\n     14994234\n    ],\n    \"entityId\": \"nisi ipsum sit Lorem ut\",\n    \"entityType\": 1,\n    \"name\": \"non dolore dolor\",\n    \"eTag\": \"esse\"\n   },\n   {\n    \"address\": {\n     \"street\": \"dolore culpa\",\n     \"city\": \"dolore eu\",\n     \"country\": \"et dolor cillum\",\n     \"postcode\": \"exercitation dolore\"\n    },\n    \"locationCode\": \"culpa voluptate Lorem sunt\",\n    \"totalCapacity\": -9044944,\n    \"zoneId\": \"laboris sint in ut\",\n    \"authorityId\": \"laborum cupidatat veniam irure nisi\",\n    \"features\": {\n     \"type\": \"nisi enim in id\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"occaecat et\",\n          \"crs\": {\n           \"type\": \"est dolor elit ut\",\n           \"properties\": {\n            \"name\": \"ullamco quis\"\n           }\n          }\n         },\n         {\n          \"type\": \"sit dolor\",\n          \"crs\": {\n           \"type\": \"laboris in dolore sint\",\n           \"properties\": {\n            \"name\": \"dolore cillum ad amet ullamco\"\n           }\n          }\n         }\n        ],\n        \"type\": \"mollit reprehenderit minim cillum\",\n        \"crs\": {\n         \"type\": \"aute sunt\",\n         \"properties\": {\n          \"name\": \"dolor\"\n         }\n        }\n       },\n       \"type\": \"non do ut\",\n       \"id\": \"est \"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"quis id esse sit veniam\",\n          \"crs\": {\n           \"type\": \"aliquip consequat minim reprehenderit exercitation\",\n           \"properties\": {\n            \"name\": \"esse enim\"\n           }\n          }\n         },\n         {\n          \"type\": \"nostrud laboris\",\n          \"crs\": {\n           \"type\": \"sed ullamco ut\",\n           \"properties\": {\n            \"name\": \"mollit aliquip amet\"\n           }\n          }\n         }\n        ],\n        \"type\": \"labore Excepteur anim Duis sunt\",\n        \"crs\": {\n         \"type\": \"in\",\n         \"properties\": {\n          \"name\": \"officia adipisicing consequat pariatur\"\n         }\n        }\n       },\n       \"type\": \"id sed occaecat aute\",\n       \"id\": \"do consectetur labore velit\"\n      }\n     ],\n     \"properties\": \"id ipsum\"\n    },\n    \"paymentMethodIds\": [\n     -11654322,\n     -63621797\n    ],\n    \"entityId\": \"do Ut id fugiat\",\n    \"entityType\": 4,\n    \"name\": \"officia\",\n    \"eTag\": \"incididunt nisi\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"reprehenderit irure laboris minim\",\n       \"crs\": {\n        \"type\": \"Lorem dolor\",\n        \"properties\": {\n         \"name\": \"culpa irure quis eu\"\n        }\n       }\n      },\n      {\n       \"type\": \"aute culpa Excepteur\",\n       \"crs\": {\n        \"type\": \"est culpa pariatur reprehenderit\",\n        \"properties\": {\n         \"name\": \"anim deserunt quis ipsum ea\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Excepteur eiusmod nostrud\",\n     \"crs\": {\n      \"type\": \"sit qui minim ex\",\n      \"properties\": {\n       \"name\": \"occaecat ut sit sunt quis\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"in laboris\"\n     },\n     {\n      \"message\": \"eiusmod eu laborum\"\n     }\n    ],\n    \"authorityId\": \"eiusmod\",\n    \"zoneType\": 1,\n    \"entityType\": 1,\n    \"entityId\": \"pariatur nulla consequat\",\n    \"name\": \"magna\",\n    \"eTag\": \"mollit eiusmod nulla officia\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"fugiat mollit\",\n       \"crs\": {\n        \"type\": \"labore reprehenderit sed esse\",\n        \"properties\": {\n         \"name\": \"fugiat sed enim est\"\n        }\n       }\n      },\n      {\n       \"type\": \"amet laborum eu id mollit\",\n       \"crs\": {\n        \"type\": \"Ut\",\n        \"properties\": {\n         \"name\": \"ullamco\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Ut qui esse incididunt\",\n     \"crs\": {\n      \"type\": \"c\",\n      \"properties\": {\n       \"name\": \"sunt\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"fugiat dolore do\"\n     },\n     {\n      \"message\": \"commodo ad deserunt\"\n     }\n    ],\n    \"authorityId\": \"magna exercitation sint Duis\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"incididunt occaecat est proident\",\n    \"name\": \"dolor cupidatat ullamco nisi\",\n    \"eTag\": \"dolor enim Ut quis\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"labore aliqua\"\n     },\n     {\n      \"message\": \"Duis incididunt\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"labore\",\n      \"cardPaymentsExternalUrl\": \"Duis\",\n      \"paymentsTelephone\": \"nostrud non ut sit\"\n     },\n     {\n      \"name\": \"ex laboris in eiusmod\",\n      \"cardPaymentsExternalUrl\": \"quis occaecat\",\n      \"paymentsTelephone\": \"est tempor\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"in id minim ex\",\n       \"crs\": {\n        \"type\": \"incididunt\",\n        \"properties\": {\n         \"name\": \"enim nisi mollit consequat voluptate\"\n        }\n       }\n      },\n      {\n       \"type\": \"reprehenderit in dolor quis\",\n       \"crs\": {\n        \"type\": \"sint est consectetur\",\n        \"properties\": {\n         \"name\": \"proident sint sit ipsum\"\n        }\n       }\n      }\n     ],\n     \"type\": \"nulla veniam velit\",\n     \"crs\": {\n      \"type\": \"consequat anim elit\",\n      \"properties\": {\n       \"name\": \"consectetur proident ut sit\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"incididunt\",\n    \"name\": \"occaecat enim\",\n    \"eTag\": \"laborum pariatur consectetur esse\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"minim ipsum\"\n     },\n     {\n      \"message\": \"Ut\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"nostrud aliqua eiusmod venia\",\n      \"cardPaymentsExternalUrl\": \"officia in est deserunt\",\n      \"paymentsTelephone\": \"ea nulla\"\n     },\n     {\n      \"name\": \"magna esse\",\n      \"cardPaymentsExternalUrl\": \"esse voluptate\",\n      \"paymentsTelephone\": \"aute exercitation dolore tempor\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"Duis commodo esse mollit amet\",\n       \"crs\": {\n        \"type\": \"Duis do dolore qui\",\n        \"properties\": {\n         \"name\": \"exercitation est\"\n        }\n       }\n      },\n      {\n       \"type\": \"sunt deserunt\",\n       \"crs\": {\n        \"type\": \"laboris cupidatat irure \",\n        \"properties\": {\n         \"name\": \"laboris eu\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ut in nulla\",\n     \"crs\": {\n      \"type\": \"dolore eiusmod consequat\",\n      \"properties\": {\n       \"name\": \"deserunt reprehenderit amet veniam ull\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"eiusmod aute ut\",\n    \"name\": \"nulla qui in quis et\",\n    \"eTag\": \"exercitation ex officia\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f70c9d21-4e21-4947-8390-9a9b4709265c",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"qui culpa\",\n \"errors\": [\n  {\n   \"property\": \"laborum ullamco velit magna\",\n   \"code\": \"cillum voluptate \",\n   \"message\": \"minim velit veniam dolore\"\n  },\n  {\n   \"property\": \"est amet in ad\",\n   \"code\": \"qui enim magna\",\n   \"message\": \"proident occaecat elit deserunt nulla\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2986f73f-19a7-4ef2-b2ac-1c2f88e23a62",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6bc59b9f-8ee2-4db9-9c45-b142d52c0f94",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "be26bd54-c613-4b47-945e-8fba7e91e6d2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "39c98d08-4c21-4369-b561-3207ae3dfe00",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3fb98de8-bd2e-482c-96b4-f2e3c222ba40",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"mollit minim labore\",\n   \"city\": \"quis sit ipsum\",\n   \"country\": \"Lorem Excepteur aute\",\n   \"postcode\": \"cillum\"\n  },\n  \"locationCode\": \"incididunt cupidatat irure fugiat\",\n  \"totalCapacity\": -43784157,\n  \"zoneId\": \"Lorem consequat ut\",\n  \"authorityId\": \"qui dolor in\",\n  \"features\": {\n   \"type\": \"nulla dolore in\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"eiusmod exercitation enim veniam\",\n        \"crs\": {\n         \"type\": \"cillum aute do\",\n         \"properties\": {\n          \"name\": \"qui culpa sunt\"\n         }\n        }\n       },\n       {\n        \"type\": \"dolore est commodo qui\",\n        \"crs\": {\n         \"type\": \"exercitation voluptate\",\n         \"properties\": {\n          \"name\": \"fugiat\"\n         }\n        }\n       }\n      ],\n      \"type\": \"dolore\",\n      \"crs\": {\n       \"type\": \"qui dolore proident sunt\",\n       \"properties\": {\n        \"name\": \"aute sint do\"\n       }\n      }\n     },\n     \"type\": \"elit\",\n     \"id\": \"voluptate do eiusmod\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"proident dolor et amet\",\n        \"crs\": {\n         \"type\": \"eu proident eiusmod\",\n         \"properties\": {\n          \"name\": \"nostrud Duis id dolore\"\n         }\n        }\n       },\n       {\n        \"type\": \"Lorem magna occaecat\",\n        \"crs\": {\n         \"type\": \"consequat minim\",\n         \"properties\": {\n          \"name\": \"labore et ipsum velit\"\n         }\n        }\n       }\n      ],\n      \"type\": \"Excepteur ut velit\",\n      \"crs\": {\n       \"type\": \"dolor\",\n       \"properties\": {\n        \"name\": \"ipsum non\"\n       }\n      }\n     },\n     \"type\": \"lab\",\n     \"id\": \"et\"\n    }\n   ],\n   \"properties\": \"sit dolore quis\"\n  },\n  \"paymentMethodIds\": [\n   -16566493,\n   -55689329\n  ],\n  \"entityId\": \"minim\",\n  \"entityType\": 3,\n  \"name\": \"eiusmod est\",\n  \"eTag\": \"est\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "06b145b6-fecf-4313-9035-ba4697cfd5d9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "271fd282-28bf-435e-8c4d-7ebef6a74e92",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "16aecd14-ae32-4823-9b78-1d1c5e7128b5",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua dolore eiusmod reprehenderit ad\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "06bc6544-37a7-4d1a-b57b-de70b8bbd41b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9d71a3b6-75e6-4967-9d25-80166a927dd9",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "cea4c8fc-b44d-43f5-91cf-ae92ccb99069",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"reprehender\",\n  \"entityType\": 2,\n  \"quotes\": [\n   {\n    \"cost\": 43921520.97073084,\n    \"currency\": \"anim\",\n    \"minCost\": 45643715.62105554,\n    \"minStayUntil\": \"voluptate\",\n    \"canExtendUntil\": \"dolore sit eu\",\n    \"pricedUntil\": \"adipisicing occaecat\",\n    \"noReturnUntil\": \"dolore dolor quis\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     34644866,\n     9947059\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"adipisicing veniam\",\n    \"surcharge\": {\n     \"value\": 33171996.00771454,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 76084888\n     }\n    }\n   },\n   {\n    \"cost\": 3919848.181401834,\n    \"currency\": \"ut dolore nisi\",\n    \"minCost\": 49756907.75081056,\n    \"minStayUntil\": \"aute do est se\",\n    \"canExtendUntil\": \"aute laborum cillum nostrud\",\n    \"pricedUntil\": \"laborum ad\",\n    \"noReturnUntil\": \"aliquip\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -48161339,\n     99414191\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"labore cillum anim\",\n    \"surcharge\": {\n     \"value\": 74213660.75245997,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 87482234\n     }\n    }\n   }\n  ],\n  \"distance\": 43745769.1916424,\n  \"parkingAllowed\": 3,\n  \"noParkingReason\": {\n   \"reasonType\": 2,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -87315386,\n    48677870\n   ]\n  },\n  \"entityETag\": \"et Lorem Ut nulla magna\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e6b6c7c0-fbf8-4206-a518-7d8913b15dd5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "80019625-1440-43e7-90e7-012228280033",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7a251c7d-c68f-41fd-a655-33707a90a8f4",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua dolore eiusmod reprehenderit ad\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "16b52c55-52ea-4c70-aa93-7e61ce5abf3c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "be6758c0-9fc1-452c-a745-f7adbb71fca5",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "5c37e296-3d3d-42f3-be49-6c97efbc3dcb",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"deserunt ad officia velit\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"incididunt Excepteur in exercitation oc\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 10161542.730545968,\n      \"currency\": \"sit cupidatat fugiat exercitation\",\n      \"minCost\": 5109688.985204965,\n      \"minStayUntil\": \"non dolor ut Ut officia\",\n      \"canExtendUntil\": \"sed\",\n      \"pricedUntil\": \"tempor Excepteur\",\n      \"noReturnUntil\": \"et proident\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       86994256,\n       68155833\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"adipisicing cillum\",\n      \"surcharge\": {\n       \"value\": -76220838.84479848,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -40328821\n       }\n      }\n     },\n     {\n      \"cost\": 44837060.84357366,\n      \"currency\": \"Excepteur dolore fugiat\",\n      \"minCost\": 62193410.48317966,\n      \"minStayUntil\": \"ut\",\n      \"canExtendUntil\": \"est ut dolore\",\n      \"pricedUntil\": \"cillum dolor dolore et\",\n      \"noReturnUntil\": \"amet veniam eiusmod aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       93395240,\n       99415000\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ea tempor sint\",\n      \"surcharge\": {\n       \"value\": 89564153.81428352,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 99391606\n       }\n      }\n     }\n    ],\n    \"distance\": 9205960.12343444,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      75975958,\n      -34316079\n     ]\n    },\n    \"entityETag\": \"sed voluptate ad laboris dolore\"\n   },\n   {\n    \"entityId\": \"in adipisi\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 12167677.237203822,\n      \"currency\": \"id adipisicing\",\n      \"minCost\": -87851201.97831824,\n      \"minStayUntil\": \"dolore reprehenderit in\",\n      \"canExtendUntil\": \"esse\",\n      \"pricedUntil\": \"commodo labore eu voluptate\",\n      \"noReturnUntil\": \"in mi\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       3745276,\n       68099976\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ipsum incididunt veniam nulla pariatur\",\n      \"surcharge\": {\n       \"value\": -26887578.71388772,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 18768938\n       }\n      }\n     },\n     {\n      \"cost\": -64021964.60186867,\n      \"currency\": \"dolor irure do in Lo\",\n      \"minCost\": 85307896.1932101,\n      \"minStayUntil\": \"commodo laboris ex non\",\n      \"canExtendUntil\": \"id et\",\n      \"pricedUntil\": \"ven\",\n      \"noReturnUntil\": \"nulla id sit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -29783350,\n       40101316\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ullamco Lorem dolor in\",\n      \"surcharge\": {\n       \"value\": 73854173.04184204,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -14263377\n       }\n      }\n     }\n    ],\n    \"distance\": 2206262.9324890077,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -14781241,\n      -74105742\n     ]\n    },\n    \"entityETag\": \"nisi ut dolore\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6d14ff97-e6a0-437d-9ce2-c84d1e4caf9e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f40bdebd-7e03-4b21-be43-eb2ecdb7afdb",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3bd7351f-f098-437b-9c32-97763e689bb9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "17c309d9-273b-4231-9c27-b3bd7a7ba0f0",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "a2368ff6-eed6-43cf-a930-95ff14139e73",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"quis consequat aliquip ullam\",\n    \"cardPaymentsExternalUrl\": \"magna esse dolor in\",\n    \"paymentsTelephone\": \"Ut fugiat enim\"\n   },\n   {\n    \"name\": \"amet deserunt\",\n    \"cardPaymentsExternalUrl\": \"tempor ullamco\",\n    \"paymentsTelephone\": \"in esse consequat\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ef2ed34e-337b-4ee4-9ee2-2a5da5b901a1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a6eb8de7-0ab3-4f29-9eea-e0c033f1e14f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d5e4bfdd-03c5-475c-897c-6954f4c3f1b1",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua dolore eiusmod reprehenderit ad\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8535e6b5-eb95-4dc7-9607-5f9a1a548836",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5ddd8237-f0e4-4668-b795-d49d97f5553a",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3e76ac44-4f90-49ee-8865-ce1700932dd2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"consequat ullamco qui in\",\n     \"crs\": {\n      \"type\": \"id commodo sit laborum\",\n      \"properties\": {\n       \"name\": \"elit\"\n      }\n     }\n    },\n    {\n     \"type\": \"ex incididunt quis\",\n     \"crs\": {\n      \"type\": \"in Excepte\",\n      \"properties\": {\n       \"name\": \"in\"\n      }\n     }\n    }\n   ],\n   \"type\": \"officia dolor\",\n   \"crs\": {\n    \"type\": \"quis in dolore\",\n    \"properties\": {\n     \"name\": \"in quis\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"tempor anim in\"\n   },\n   {\n    \"message\": \"ipsum enim aliquip dolore\"\n   }\n  ],\n  \"authorityId\": \"ut\",\n  \"zoneType\": 3,\n  \"entityType\": 2,\n  \"entityId\": \"occaecat ut sunt pariatur elit\",\n  \"name\": \"adipisicing\",\n  \"eTag\": \"culpa ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2d85111c-270e-4cce-87b8-92e952dbc6bc",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4e237cc2-2cff-47ec-a772-41a21fb03b28",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "663674eb-f198-4457-bf01-a3c0d06b31c4",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua dolore eiusmod reprehenderit ad\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ef267055-7281-4fa9-a6a3-956381ca3d09",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6294ff54-c545-4bc4-bd9b-dc69a118a133",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna\",\n            \"properties\": {\n                \"name\": \"consectetur\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1b6ac2d8-c363-4382-8ea3-b39133852224",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing nostrud nisi fugiat cillum\",\n            \"properties\": {\n                \"name\": \"veniam incididunt officia labore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ex occaecat dolore veniam minim\",\n    \"entityETag\": \"nulla ut reprehenderit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -40638193,\n      \"specialRestrictionTypeId\": -33793487,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"est\",\n        \"endTime\": \"in\",\n        \"maxStay\": -95418683\n       },\n       {\n        \"startTime\": \"laboris exercitation\",\n        \"endTime\": \"labore in\",\n        \"maxStay\": -45047148\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -66253923,\n      \"specialRestrictionTypeId\": -52414722,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed cillum\",\n        \"endTime\": \"exercitation dolor minim aute dolor\",\n        \"maxStay\": -40594738\n       },\n       {\n        \"startTime\": \"culpa sed\",\n        \"endTime\": \"ipsum laborum\",\n        \"maxStay\": 57662011\n       }\n      ]\n     }\n    ],\n    \"distance\": -42373890.468124606\n   },\n   {\n    \"entityId\": \"dolor culpa proident ipsum non\",\n    \"entityETag\": \"sunt pariatur dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 60760749,\n      \"specialRestrictionTypeId\": -3375381,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Ut nisi in do\",\n        \"endTime\": \"aliquip magna nisi labore\",\n        \"maxStay\": -41629271\n       },\n       {\n        \"startTime\": \"ut aliqua anim officia\",\n        \"endTime\": \"dolor voluptate cupidatat commodo tempor\",\n        \"maxStay\": 43266971\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 10353555,\n      \"specialRestrictionTypeId\": -86530361,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi dolor aliquip veni\",\n        \"endTime\": \"ipsum nostrud\",\n        \"maxStay\": -60436590\n       },\n       {\n        \"startTime\": \"quis incididunt\",\n        \"endTime\": \"consequat quis\",\n        \"maxStay\": 54327313\n       }\n      ]\n     }\n    ],\n    \"distance\": 98370035.95006832\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"dolore ip\",\n   \"entityETag\": \"dolor in eiusmod cillum consectetur\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 56192032,\n     \"specialRestrictionTypeId\": 31238866,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nisi magna\",\n       \"endTime\": \"esse ad\",\n       \"maxStay\": -82589454\n      },\n      {\n       \"startTime\": \"nostrud consectetur velit\",\n       \"endTime\": \"incididunt culpa\",\n       \"maxStay\": 54680774\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -73312558,\n     \"specialRestrictionTypeId\": -32748367,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"mollit elit ut anim\",\n       \"endTime\": \"labore ex sint magna quis\",\n       \"maxStay\": -55077908\n      },\n      {\n       \"startTime\": \"reprehenderit tempor\",\n       \"endTime\": \"aliqua\",\n       \"maxStay\": -46876638\n      }\n     ]\n    }\n   ],\n   \"distance\": 29589982.442241818\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8127d2cb-fdb3-48c7-a391-211d0eb15598",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing nostrud nisi fugiat cillum\",\n            \"properties\": {\n                \"name\": \"veniam incididunt officia labore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "de662f1f-0d88-40ec-9d73-44c8a2b83fd1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing nostrud nisi fugiat cillum\",\n            \"properties\": {\n                \"name\": \"veniam incididunt officia labore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c89c279d-1812-4c92-899a-faf503b7d5bd",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing nostrud nisi fugiat cillum\",\n            \"properties\": {\n                \"name\": \"veniam incididunt officia labore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6d8fc02b-3762-43a0-915a-f748b1066211",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing nostrud nisi fugiat cillum\",\n            \"properties\": {\n                \"name\": \"veniam incididunt officia labore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "89af178c-0703-433a-b9fc-512951c532f5",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "40b20432-a894-4cab-befa-e52c9da8beb1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"co\",\n      \"city\": \"ipsum dolore id\",\n      \"country\": \"nulla laborum eu ipsum\",\n      \"postcode\": \"Duis labore\"\n     },\n     \"locationCode\": \"reprehenderit consequat\",\n     \"totalCapacity\": 6419716,\n     \"zoneId\": \"non velit\",\n     \"authorityId\": \"culpa occaecat\",\n     \"features\": {\n      \"type\": \"ut dese\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"consequat culpa dolore\",\n           \"crs\": {\n            \"type\": \"ipsum adipisicing anim\",\n            \"properties\": {\n             \"name\": \"ex culpa consequat\"\n            }\n           }\n          },\n          {\n           \"type\": \"dese\",\n           \"crs\": {\n            \"type\": \"labore exercitation voluptate\",\n            \"properties\": {\n             \"name\": \"Lorem culpa in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"consequat minim officia\",\n         \"crs\": {\n          \"type\": \"ipsum irure\",\n          \"properties\": {\n           \"name\": \"irure laboris\"\n          }\n         }\n        },\n        \"type\": \"fugiat mollit ullamco magna\",\n        \"id\": \"ea minim do consectetur ut\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt commodo mollit dolor\",\n           \"crs\": {\n            \"type\": \"laborum pariatur\",\n            \"properties\": {\n             \"name\": \"amet ipsum cillum e\"\n            }\n           }\n          },\n          {\n           \"type\": \"eu incididunt enim dolor in\",\n           \"crs\": {\n            \"type\": \"proident nisi incididunt\",\n            \"properties\": {\n             \"name\": \"do eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"qui voluptate cupidatat irure occaecat\",\n         \"crs\": {\n          \"type\": \"eiusmod\",\n          \"properties\": {\n           \"name\": \"incididunt exercitation consectetur eiusmod deserunt\"\n          }\n         }\n        },\n        \"type\": \"Ut exercitation\",\n        \"id\": \"Ut veniam adipi\"\n       }\n      ],\n      \"properties\": \"in sunt Excepteur\"\n     },\n     \"paymentMethodIds\": [\n      91762010,\n      -7147946\n     ],\n     \"entityId\": \"in irure aliquip deserunt\",\n     \"entityType\": 3,\n     \"name\": \"sed eu\",\n     \"eTag\": \"aliquip aute reprehenderit occaecat\"\n    },\n    \"distance\": -68499412.01625067\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"voluptate labore\",\n      \"city\": \"in et nulla voluptate\",\n      \"country\": \"sint\",\n      \"postcode\": \"ut ex reprehenderit ut\"\n     },\n     \"locationCode\": \"s\",\n     \"totalCapacity\": 83812372,\n     \"zoneId\": \"officia culpa consequat eiusmod\",\n     \"authorityId\": \"amet ad sint\",\n     \"features\": {\n      \"type\": \"aute enim nulla ad\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"magna aliquip cupidatat Ut\",\n           \"crs\": {\n            \"type\": \"nulla\",\n            \"properties\": {\n             \"name\": \"officia\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis esse\",\n           \"crs\": {\n            \"type\": \"eu dolore\",\n            \"properties\": {\n             \"name\": \"magna eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ullamco ut reprehenderit\",\n         \"crs\": {\n          \"type\": \"es\",\n          \"properties\": {\n           \"name\": \"in ad sit fugiat commodo\"\n          }\n         }\n        },\n        \"type\": \"consectetur adipisicing mollit\",\n        \"id\": \"anim cupidatat laboris in eu\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"quis est\",\n           \"crs\": {\n            \"type\": \"elit officia ullamco minim\",\n            \"properties\": {\n             \"name\": \"minim ullamco culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"proident in qui ex magna\",\n           \"crs\": {\n            \"type\": \"labore ea cillum dolore\",\n            \"properties\": {\n             \"name\": \"Duis sit minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nostrud exercitation\",\n         \"crs\": {\n          \"type\": \"magna ea\",\n          \"properties\": {\n           \"name\": \"consequat Ut irure do tempor\"\n          }\n         }\n        },\n        \"type\": \"anim dolore\",\n        \"id\": \"sunt dolor deserunt consequat\"\n       }\n      ],\n      \"properties\": \"amet ex officia nostrud mollit\"\n     },\n     \"paymentMethodIds\": [\n      -96434518,\n      -22257143\n     ],\n     \"entityId\": \"sint est do\",\n     \"entityType\": 2,\n     \"name\": \"Lorem commodo amet aliqua\",\n     \"eTag\": \"voluptate sunt et labore\"\n    },\n    \"distance\": 93940254.77678207\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "45b38c1a-293d-4673-95ec-4ca1e9dab218",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f8f7045b-558d-4970-b9e0-73d4f48fdbc7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9c5c5d8b-3e51-4d5e-8dd5-185d4b9a15ba",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b4fec8f4-b85f-40ca-92b1-a7da42def855",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "cf35ec11-0bb0-4402-94ff-73d04ce8e5ca",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut\",\n            \"properties\": {\n                \"name\": \"sint commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "94213f44-5838-422d-b6d1-d2ada2b202fa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident\",\n            \"properties\": {\n                \"name\": \"nisi enim tempor commodo sed\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"co\",\n      \"city\": \"ipsum dolore id\",\n      \"country\": \"nulla laborum eu ipsum\",\n      \"postcode\": \"Duis labore\"\n     },\n     \"locationCode\": \"reprehenderit consequat\",\n     \"totalCapacity\": 6419716,\n     \"zoneId\": \"non velit\",\n     \"authorityId\": \"culpa occaecat\",\n     \"features\": {\n      \"type\": \"ut dese\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"consequat culpa dolore\",\n           \"crs\": {\n            \"type\": \"ipsum adipisicing anim\",\n            \"properties\": {\n             \"name\": \"ex culpa consequat\"\n            }\n           }\n          },\n          {\n           \"type\": \"dese\",\n           \"crs\": {\n            \"type\": \"labore exercitation voluptate\",\n            \"properties\": {\n             \"name\": \"Lorem culpa in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"consequat minim officia\",\n         \"crs\": {\n          \"type\": \"ipsum irure\",\n          \"properties\": {\n           \"name\": \"irure laboris\"\n          }\n         }\n        },\n        \"type\": \"fugiat mollit ullamco magna\",\n        \"id\": \"ea minim do consectetur ut\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt commodo mollit dolor\",\n           \"crs\": {\n            \"type\": \"laborum pariatur\",\n            \"properties\": {\n             \"name\": \"amet ipsum cillum e\"\n            }\n           }\n          },\n          {\n           \"type\": \"eu incididunt enim dolor in\",\n           \"crs\": {\n            \"type\": \"proident nisi incididunt\",\n            \"properties\": {\n             \"name\": \"do eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"qui voluptate cupidatat irure occaecat\",\n         \"crs\": {\n          \"type\": \"eiusmod\",\n          \"properties\": {\n           \"name\": \"incididunt exercitation consectetur eiusmod deserunt\"\n          }\n         }\n        },\n        \"type\": \"Ut exercitation\",\n        \"id\": \"Ut veniam adipi\"\n       }\n      ],\n      \"properties\": \"in sunt Excepteur\"\n     },\n     \"paymentMethodIds\": [\n      91762010,\n      -7147946\n     ],\n     \"entityId\": \"in irure aliquip deserunt\",\n     \"entityType\": 3,\n     \"name\": \"sed eu\",\n     \"eTag\": \"aliquip aute reprehenderit occaecat\"\n    },\n    \"distance\": -68499412.01625067\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"voluptate labore\",\n      \"city\": \"in et nulla voluptate\",\n      \"country\": \"sint\",\n      \"postcode\": \"ut ex reprehenderit ut\"\n     },\n     \"locationCode\": \"s\",\n     \"totalCapacity\": 83812372,\n     \"zoneId\": \"officia culpa consequat eiusmod\",\n     \"authorityId\": \"amet ad sint\",\n     \"features\": {\n      \"type\": \"aute enim nulla ad\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"magna aliquip cupidatat Ut\",\n           \"crs\": {\n            \"type\": \"nulla\",\n            \"properties\": {\n             \"name\": \"officia\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis esse\",\n           \"crs\": {\n            \"type\": \"eu dolore\",\n            \"properties\": {\n             \"name\": \"magna eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ullamco ut reprehenderit\",\n         \"crs\": {\n          \"type\": \"es\",\n          \"properties\": {\n           \"name\": \"in ad sit fugiat commodo\"\n          }\n         }\n        },\n        \"type\": \"consectetur adipisicing mollit\",\n        \"id\": \"anim cupidatat laboris in eu\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"quis est\",\n           \"crs\": {\n            \"type\": \"elit officia ullamco minim\",\n            \"properties\": {\n             \"name\": \"minim ullamco culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"proident in qui ex magna\",\n           \"crs\": {\n            \"type\": \"labore ea cillum dolore\",\n            \"properties\": {\n             \"name\": \"Duis sit minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nostrud exercitation\",\n         \"crs\": {\n          \"type\": \"magna ea\",\n          \"properties\": {\n           \"name\": \"consequat Ut irure do tempor\"\n          }\n         }\n        },\n        \"type\": \"anim dolore\",\n        \"id\": \"sunt dolor deserunt consequat\"\n       }\n      ],\n      \"properties\": \"amet ex officia nostrud mollit\"\n     },\n     \"paymentMethodIds\": [\n      -96434518,\n      -22257143\n     ],\n     \"entityId\": \"sint est do\",\n     \"entityType\": 2,\n     \"name\": \"Lorem commodo amet aliqua\",\n     \"eTag\": \"voluptate sunt et labore\"\n    },\n    \"distance\": 93940254.77678207\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "856461a9-7a4e-4cce-ada2-2b4e3bebece8",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident\",\n            \"properties\": {\n                \"name\": \"nisi enim tempor commodo sed\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bb1f35a3-5d9d-414e-a702-bb55aca057e2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident\",\n            \"properties\": {\n                \"name\": \"nisi enim tempor commodo sed\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "af3179aa-92b3-4114-89ef-bfa97cb7d02b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident\",\n            \"properties\": {\n                \"name\": \"nisi enim tempor commodo sed\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "57039663-a9c0-4edc-9699-06d806ef9ab5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident\",\n            \"properties\": {\n                \"name\": \"nisi enim tempor commodo sed\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f30f399f-8f64-4eed-8344-5efae08e92f5",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fb21d775-855c-44da-831a-63922045fde0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 3,\n  \"requestedStartTime\": \"eu sunt in fugiat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"consequat\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -37777423.777692795,\n      \"currency\": \"nulla adipisicing id\",\n      \"minCost\": -12949163.528500035,\n      \"minStayUntil\": \"exercitation\",\n      \"canExtendUntil\": \"qui elit\",\n      \"pricedUntil\": \"consequat mollit\",\n      \"noReturnUntil\": \"quis ullamco voluptate ut elit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       70961766,\n       -5036043\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"est Duis ad\",\n      \"surcharge\": {\n       \"value\": -15382545.200639218,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -32340751\n       }\n      }\n     },\n     {\n      \"cost\": 27558870.34845972,\n      \"currency\": \"enim aute labore\",\n      \"minCost\": 51504255.68366042,\n      \"minStayUntil\": \"nisi ea voluptate\",\n      \"canExtendUntil\": \"fugiat labore tempor dolor\",\n      \"pricedUntil\": \"esse elit\",\n      \"noReturnUntil\": \"anim quis sint est\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       63486320,\n       -7375403\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nisi Ut ea cillum\",\n      \"surcharge\": {\n       \"value\": 91592102.1526623,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 22314663\n       }\n      }\n     }\n    ],\n    \"distance\": 13126617.33552903,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -73798630,\n      -8594870\n     ]\n    },\n    \"entityETag\": \"sint dolore officia\"\n   },\n   {\n    \"entityId\": \"in adipisicing nisi\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 11838402.75404346,\n      \"currency\": \"aute\",\n      \"minCost\": 15773360.992710829,\n      \"minStayUntil\": \"incididunt qui Lorem\",\n      \"canExtendUntil\": \"proident\",\n      \"pricedUntil\": \"Lorem ipsum\",\n      \"noReturnUntil\": \"volupta\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -30666597,\n       32612189\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aliquip ut\",\n      \"surcharge\": {\n       \"value\": 42478199.5700669,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 12523026\n       }\n      }\n     },\n     {\n      \"cost\": 18168499.660548627,\n      \"currency\": \"dolor elit laboru\",\n      \"minCost\": -68957533.6197624,\n      \"minStayUntil\": \"elit est\",\n      \"canExtendUntil\": \"fugiat elit in et\",\n      \"pricedUntil\": \"dolor dolore pariatur\",\n      \"noReturnUntil\": \"adipisicing occaecat in in\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -13471313,\n       20279290\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ut exercitation sunt veniam\",\n      \"surcharge\": {\n       \"value\": 42914211.08848038,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 76219593\n       }\n      }\n     }\n    ],\n    \"distance\": 48891781.401040465,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -2273083,\n      -37919000\n     ]\n    },\n    \"entityETag\": \"dolor et irure magna\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7f81d41c-dc12-4cdd-8298-7eab30f26a3b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c0b61105-f714-4f21-8009-a0a6c90136fc",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "27e83ee4-c960-4c98-afb5-6b82f118532b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2f8b26e4-9382-467f-8ba8-9afc35dcc0a3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e01050a5-c300-4967-a02b-857a378a3acd",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit\",\n            \"properties\": {\n                \"name\": \"sunt amet reprehenderit ad\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "aecbba1d-76e6-4130-a69c-e8498007d97f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur voluptate et non\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 3,\n  \"requestedStartTime\": \"eu sunt in fugiat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"consequat\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -37777423.777692795,\n      \"currency\": \"nulla adipisicing id\",\n      \"minCost\": -12949163.528500035,\n      \"minStayUntil\": \"exercitation\",\n      \"canExtendUntil\": \"qui elit\",\n      \"pricedUntil\": \"consequat mollit\",\n      \"noReturnUntil\": \"quis ullamco voluptate ut elit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       70961766,\n       -5036043\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"est Duis ad\",\n      \"surcharge\": {\n       \"value\": -15382545.200639218,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -32340751\n       }\n      }\n     },\n     {\n      \"cost\": 27558870.34845972,\n      \"currency\": \"enim aute labore\",\n      \"minCost\": 51504255.68366042,\n      \"minStayUntil\": \"nisi ea voluptate\",\n      \"canExtendUntil\": \"fugiat labore tempor dolor\",\n      \"pricedUntil\": \"esse elit\",\n      \"noReturnUntil\": \"anim quis sint est\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       63486320,\n       -7375403\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nisi Ut ea cillum\",\n      \"surcharge\": {\n       \"value\": 91592102.1526623,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 22314663\n       }\n      }\n     }\n    ],\n    \"distance\": 13126617.33552903,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -73798630,\n      -8594870\n     ]\n    },\n    \"entityETag\": \"sint dolore officia\"\n   },\n   {\n    \"entityId\": \"in adipisicing nisi\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 11838402.75404346,\n      \"currency\": \"aute\",\n      \"minCost\": 15773360.992710829,\n      \"minStayUntil\": \"incididunt qui Lorem\",\n      \"canExtendUntil\": \"proident\",\n      \"pricedUntil\": \"Lorem ipsum\",\n      \"noReturnUntil\": \"volupta\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -30666597,\n       32612189\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aliquip ut\",\n      \"surcharge\": {\n       \"value\": 42478199.5700669,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 12523026\n       }\n      }\n     },\n     {\n      \"cost\": 18168499.660548627,\n      \"currency\": \"dolor elit laboru\",\n      \"minCost\": -68957533.6197624,\n      \"minStayUntil\": \"elit est\",\n      \"canExtendUntil\": \"fugiat elit in et\",\n      \"pricedUntil\": \"dolor dolore pariatur\",\n      \"noReturnUntil\": \"adipisicing occaecat in in\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -13471313,\n       20279290\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ut exercitation sunt veniam\",\n      \"surcharge\": {\n       \"value\": 42914211.08848038,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 76219593\n       }\n      }\n     }\n    ],\n    \"distance\": 48891781.401040465,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -2273083,\n      -37919000\n     ]\n    },\n    \"entityETag\": \"dolor et irure magna\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9a756e47-dec6-4ef8-841f-340664505eea",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur voluptate et non\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4843d377-6b45-4dd8-b979-f0abe0bd4ed8",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur voluptate et non\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "717313d5-359e-4df6-80a2-7b3ddb4de756",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur voluptate et non\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cd8258c7-e607-446f-8e01-ff3e9a4d0b4b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"consectetur voluptate et non\",\n            \"properties\": {\n                \"name\": \"et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4cda9d65-d91f-45c5-876e-b4f5104e972e",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum quis\",\n            \"properties\": {\n                \"name\": \"in aliqua Ut u\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "27681671-827a-4edd-91cd-c447725bab7c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est in aliquip\",\n            \"properties\": {\n                \"name\": \"labore eiusmod\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"sunt velit pariatur magna qui\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"cillum voluptate id\",\n     \"crs\": {\n      \"type\": \"ut ut veniam enim\",\n      \"properties\": {\n       \"name\": \"fugiat elit sit sed in\"\n      }\n     }\n    },\n    \"type\": \"consequat et\",\n    \"id\": \"dolore est dolor Duis\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"et commodo ea\",\n     \"crs\": {\n      \"type\": \"id culpa enim officia\",\n      \"properties\": {\n       \"name\": \"ullamco in incididunt ad id\"\n      }\n     }\n    },\n    \"type\": \"velit consectetur\",\n    \"id\": \"tempor non aliquip nostrud\"\n   }\n  ],\n  \"properties\": \"cillum ad aliqua in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9217fba1-2a86-457c-9e37-d3b56734877b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est in aliquip\",\n            \"properties\": {\n                \"name\": \"labore eiusmod\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3446eb1b-bb58-419d-9466-82b7b38ac905",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est in aliquip\",\n            \"properties\": {\n                \"name\": \"labore eiusmod\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b0be4173-b83b-4b67-8764-204683e7a751",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est in aliquip\",\n            \"properties\": {\n                \"name\": \"labore eiusmod\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b40fb529-2e99-4446-a868-f70704de4cbf",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est in aliquip\",\n            \"properties\": {\n                \"name\": \"labore eiusmod\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "de7d3f11-7c70-45aa-8e9a-f27c33e83255",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit in eu in ullamco\",\n            \"properties\": {\n                \"name\": \"ut sunt reprehenderit\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "63771660-5855-4afb-aa12-fcfec3711050",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor non tempor culpa\",\n            \"properties\": {\n                \"name\": \"dolore Excepteur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"ex occaecat dolore veniam minim\",\n    \"entityETag\": \"nulla ut reprehenderit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -40638193,\n      \"specialRestrictionTypeId\": -33793487,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"est\",\n        \"endTime\": \"in\",\n        \"maxStay\": -95418683\n       },\n       {\n        \"startTime\": \"laboris exercitation\",\n        \"endTime\": \"labore in\",\n        \"maxStay\": -45047148\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -66253923,\n      \"specialRestrictionTypeId\": -52414722,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed cillum\",\n        \"endTime\": \"exercitation dolor minim aute dolor\",\n        \"maxStay\": -40594738\n       },\n       {\n        \"startTime\": \"culpa sed\",\n        \"endTime\": \"ipsum laborum\",\n        \"maxStay\": 57662011\n       }\n      ]\n     }\n    ],\n    \"distance\": -42373890.468124606\n   },\n   {\n    \"entityId\": \"dolor culpa proident ipsum non\",\n    \"entityETag\": \"sunt pariatur dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 60760749,\n      \"specialRestrictionTypeId\": -3375381,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Ut nisi in do\",\n        \"endTime\": \"aliquip magna nisi labore\",\n        \"maxStay\": -41629271\n       },\n       {\n        \"startTime\": \"ut aliqua anim officia\",\n        \"endTime\": \"dolor voluptate cupidatat commodo tempor\",\n        \"maxStay\": 43266971\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 10353555,\n      \"specialRestrictionTypeId\": -86530361,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi dolor aliquip veni\",\n        \"endTime\": \"ipsum nostrud\",\n        \"maxStay\": -60436590\n       },\n       {\n        \"startTime\": \"quis incididunt\",\n        \"endTime\": \"consequat quis\",\n        \"maxStay\": 54327313\n       }\n      ]\n     }\n    ],\n    \"distance\": 98370035.95006832\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"dolore ip\",\n   \"entityETag\": \"dolor in eiusmod cillum consectetur\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 56192032,\n     \"specialRestrictionTypeId\": 31238866,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nisi magna\",\n       \"endTime\": \"esse ad\",\n       \"maxStay\": -82589454\n      },\n      {\n       \"startTime\": \"nostrud consectetur velit\",\n       \"endTime\": \"incididunt culpa\",\n       \"maxStay\": 54680774\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -73312558,\n     \"specialRestrictionTypeId\": -32748367,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"mollit elit ut anim\",\n       \"endTime\": \"labore ex sint magna quis\",\n       \"maxStay\": -55077908\n      },\n      {\n       \"startTime\": \"reprehenderit tempor\",\n       \"endTime\": \"aliqua\",\n       \"maxStay\": -46876638\n      }\n     ]\n    }\n   ],\n   \"distance\": 29589982.442241818\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9e380ee5-bcaa-4c18-a9e2-c3b79841998f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor non tempor culpa\",\n            \"properties\": {\n                \"name\": \"dolore Excepteur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod adipisicing\",\n \"errors\": [\n  {\n   \"property\": \"id fugiat pariatur\",\n   \"code\": \"ad pariatur\",\n   \"message\": \"reprehenderit est nulla non\"\n  },\n  {\n   \"property\": \"cillum sit pariatur\",\n   \"code\": \"pariatur proident \",\n   \"message\": \"esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3e8502e0-cd8a-411f-b0c4-0bb30f12210f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor non tempor culpa\",\n            \"properties\": {\n                \"name\": \"dolore Excepteur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8377ce59-c1f7-4891-9fb2-75c77c85fe3c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor non tempor culpa\",\n            \"properties\": {\n                \"name\": \"dolore Excepteur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d920796c-8021-4709-81b7-7dbab6ed97ba",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor non tempor culpa\",\n            \"properties\": {\n                \"name\": \"dolore Excepteur\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "34cd6df5-7ff0-4c55-84c6-ad7b28943fd6",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "50c2a381-7ca9-409e-b6f8-213c2d4f6693",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0c233f00-27cb-4756-9c3f-3c6e1f0fe760",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7cb34815-27e2-46d6-b94f-952d266edab5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ed82060b-1f33-498d-a8fe-80a14f7fbb4a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "c7c331e8-1dd0-4ac1-bc1c-64b8f09bba82",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
