{
  "item": [
    {
      "id": "81be29dd-4c4e-4aca-87c1-bc46ed7c8cc2",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "6dd3fd9d-d01c-4085-b7fe-cc8a4891b9f4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"aliqua mollit cillum velit\"\n   },\n   {\n    \"message\": \"esse ut eu dolor\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"eiusmod commodo anim ea\",\n    \"cardPaymentsExternalUrl\": \"consequat in\",\n    \"paymentsTelephone\": \"id aliqua labore do\"\n   },\n   {\n    \"name\": \"occaecat pariatur irure reprehenderit amet\",\n    \"cardPaymentsExternalUrl\": \"nulla aliqua est ut\",\n    \"paymentsTelephone\": \"laborum eu\"\n   }\n  ],\n  \"entityType\": 3,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"Lorem proident\",\n     \"crs\": {\n      \"type\": \"ad non ut Ut\",\n      \"properties\": {\n       \"name\": \"amet aliquip eiusmod\"\n      }\n     }\n    },\n    {\n     \"type\": \"in laborum\",\n     \"crs\": {\n      \"type\": \"laboris quis\",\n      \"properties\": {\n       \"name\": \"laboris\"\n      }\n     }\n    }\n   ],\n   \"type\": \"sit ea commodo\",\n   \"crs\": {\n    \"type\": \"ea sit dolore\",\n    \"properties\": {\n     \"name\": \"tempor veniam nulla\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"in proident tempor occaecat et\",\n  \"name\": \"eiusmod est\",\n  \"eTag\": \"nostrud ea\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "35e8a94a-cc1b-4639-915d-a9b34aaf5f8b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "88aa1fb7-c8a6-4df7-a0df-ed63d2eb38ab",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ee461ee3-70dd-4d2c-ab96-7fbbf66d21be",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bfe45a10-8a7c-42d2-9b62-334304bbe2e2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2c423cf7-7b37-4236-b009-6d3bd2401d57",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "52b4ede0-c7fb-4627-a143-778177856dfe",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"est aliquip consequat\",\n     \"city\": \"deserunt labore proident ea\",\n     \"country\": \"officia nulla et\",\n     \"postcode\": \"ut quis minim\"\n    },\n    \"locationCode\": \"aliqua est labore aute\",\n    \"totalCapacity\": 59825341,\n    \"zoneId\": \"sunt dolore Excepteur\",\n    \"authorityId\": \"ea deserunt Duis quis\",\n    \"features\": {\n     \"type\": \"ipsum do\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"velit in magna cupidatat\",\n          \"crs\": {\n           \"type\": \"tempor\",\n           \"properties\": {\n            \"name\": \"occaecat consec\"\n           }\n          }\n         },\n         {\n          \"type\": \"non\",\n          \"crs\": {\n           \"type\": \"exercitation aliquip mollit Duis pariatur\",\n           \"properties\": {\n            \"name\": \"sed aute\"\n           }\n          }\n         }\n        ],\n        \"type\": \"est irure eiusmod\",\n        \"crs\": {\n         \"type\": \"est fugiat ad\",\n         \"properties\": {\n          \"name\": \"sint laborum proident\"\n         }\n        }\n       },\n       \"type\": \"ut\",\n       \"id\": \"inci\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"eiusmod labore fugiat nisi veniam\",\n          \"crs\": {\n           \"type\": \"pariatur nulla\",\n           \"properties\": {\n            \"name\": \"minim proident\"\n           }\n          }\n         },\n         {\n          \"type\": \"enim Duis\",\n          \"crs\": {\n           \"type\": \"deserunt minim nisi\",\n           \"properties\": {\n            \"name\": \"Ut minim culpa\"\n           }\n          }\n         }\n        ],\n        \"type\": \"vol\",\n        \"crs\": {\n         \"type\": \"adipisicing occaecat enim quis\",\n         \"properties\": {\n          \"name\": \"mollit est\"\n         }\n        }\n       },\n       \"type\": \"non dolor et\",\n       \"id\": \"ut enim\"\n      }\n     ],\n     \"properties\": \"enim anim\"\n    },\n    \"paymentMethodIds\": [\n     72213688,\n     -84311743\n    ],\n    \"entityId\": \"aute\",\n    \"entityType\": 1,\n    \"name\": \"Duis elit ullamco dolore\",\n    \"eTag\": \"culpa consectetur aliquip exercitation dolor\",\n    \"operator\": {\n     \"telephone\": \"minim\",\n     \"website\": \"minim exercitation labo\",\n     \"name\": \"qui Lorem proident\",\n     \"cardPaymentsExternalUrl\": \"velit veniam nisi\",\n     \"paymentsTelephone\": \"deserunt\"\n    },\n    \"onStreetParkingTypeIds\": [\n     6,\n     9\n    ],\n    \"facilityTypeIds\": [\n     49119216,\n     -98270579\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"est Lorem dolor ex dolore\",\n     \"city\": \"Ut ipsum id labore\",\n     \"country\": \"in\",\n     \"postcode\": \"Lorem in tempor\"\n    },\n    \"locationCode\": \"voluptate sit\",\n    \"totalCapacity\": 81888103,\n    \"zoneId\": \"mollit consectetur sint tempor\",\n    \"authorityId\": \"fugiat tempor cillum veniam\",\n    \"features\": {\n     \"type\": \"aliquip adipisicing labore\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"pariatur aliquip in\",\n          \"crs\": {\n           \"type\": \"labore exercitation\",\n           \"properties\": {\n            \"name\": \"min\"\n           }\n          }\n         },\n         {\n          \"type\": \"aliquip incididunt Duis\",\n          \"crs\": {\n           \"type\": \"cupidatat Lorem incididunt velit\",\n           \"properties\": {\n            \"name\": \"Duis do\"\n           }\n          }\n         }\n        ],\n        \"type\": \"aliqua incididunt\",\n        \"crs\": {\n         \"type\": \"commodo amet\",\n         \"properties\": {\n          \"name\": \"occaecat enim dolore cupidatat\"\n         }\n        }\n       },\n       \"type\": \"dolore voluptate proident aliquip velit\",\n       \"id\": \"non laboris\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"sit mollit id Lorem non\",\n          \"crs\": {\n           \"type\": \"Lorem in\",\n           \"properties\": {\n            \"name\": \"in commodo\"\n           }\n          }\n         },\n         {\n          \"type\": \"cillum exercitation do\",\n          \"crs\": {\n           \"type\": \"dolore ipsum aliquip\",\n           \"properties\": {\n            \"name\": \"culpa do\"\n           }\n          }\n         }\n        ],\n        \"type\": \"adipisicing sunt amet\",\n        \"crs\": {\n         \"type\": \"in\",\n         \"properties\": {\n          \"name\": \"i\"\n         }\n        }\n       },\n       \"type\": \"voluptate esse aliqua occaec\",\n       \"id\": \"enim irure adipisicing cupidatat proident\"\n      }\n     ],\n     \"properties\": \"proident cillum cupidatat\"\n    },\n    \"paymentMethodIds\": [\n     9349304,\n     -86552116\n    ],\n    \"entityId\": \"ullamco incididunt\",\n    \"entityType\": 3,\n    \"name\": \"voluptate dolor qui laborum\",\n    \"eTag\": \"reprehend\",\n    \"operator\": {\n     \"telephone\": \"in tempor voluptate\",\n     \"website\": \"proident aliquip\",\n     \"name\": \"esse ut dolore sed\",\n     \"cardPaymentsExternalUrl\": \"fugiat qui\",\n     \"paymentsTelephone\": \"aliquip amet ut\"\n    },\n    \"onStreetParkingTypeIds\": [\n     11,\n     5\n    ],\n    \"facilityTypeIds\": [\n     33092751,\n     -51807787\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sint\",\n       \"crs\": {\n        \"type\": \"Ut dolore\",\n        \"properties\": {\n         \"name\": \"Excepteur aliquip\"\n        }\n       }\n      },\n      {\n       \"type\": \"Ut\",\n       \"crs\": {\n        \"type\": \"in nulla cupidatat\",\n        \"properties\": {\n         \"name\": \"enim nisi veniam laborum sunt\"\n        }\n       }\n      }\n     ],\n     \"type\": \"magna\",\n     \"crs\": {\n      \"type\": \"nulla\",\n      \"properties\": {\n       \"name\": \"ullamc\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"Lorem proident\"\n     },\n     {\n      \"message\": \"aute eu deserunt id\"\n     }\n    ],\n    \"authorityId\": \"culpa minim deserunt incididunt\",\n    \"zoneType\": 5,\n    \"entityType\": 2,\n    \"entityId\": \"cupidatat laborum\",\n    \"name\": \"veniam mollit\",\n    \"eTag\": \"dolor velit anim ut\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sunt est ex p\",\n       \"crs\": {\n        \"type\": \"esse sint\",\n        \"properties\": {\n         \"name\": \"reprehenderit ullam\"\n        }\n       }\n      },\n      {\n       \"type\": \"irure sed mollit officia eiusmod\",\n       \"crs\": {\n        \"type\": \"qui dolor cillum incididunt sint\",\n        \"properties\": {\n         \"name\": \"veniam aute\"\n        }\n       }\n      }\n     ],\n     \"type\": \"culpa do occaecat\",\n     \"crs\": {\n      \"type\": \"deserunt Duis\",\n      \"properties\": {\n       \"name\": \"esse dolore\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"ex veniam\"\n     },\n     {\n      \"message\": \"ut et\"\n     }\n    ],\n    \"authorityId\": \"ipsum ullamco deserunt\",\n    \"zoneType\": 4,\n    \"entityType\": 1,\n    \"entityId\": \"id reprehenderit\",\n    \"name\": \"ea do nostrud aliqua\",\n    \"eTag\": \"elit velit sunt irure\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"nulla eiusmod\"\n     },\n     {\n      \"message\": \"elit nostrud\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"Excepteur sunt laborum cupidatat\",\n      \"cardPaymentsExternalUrl\": \"elit\",\n      \"paymentsTelephone\": \"fugiat dolore dolor non\"\n     },\n     {\n      \"name\": \"est sit incididunt\",\n      \"cardPaymentsExternalUrl\": \"m\",\n      \"paymentsTelephone\": \"pariatur ut\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"esse adipisicing est\",\n       \"crs\": {\n        \"type\": \"dolor et\",\n        \"properties\": {\n         \"name\": \"sint velit\"\n        }\n       }\n      },\n      {\n       \"type\": \"tempor irure in occaecat\",\n       \"crs\": {\n        \"type\": \"irure id\",\n        \"properties\": {\n         \"name\": \"dolor ad\"\n        }\n       }\n      }\n     ],\n     \"type\": \"reprehenderit dolor\",\n     \"crs\": {\n      \"type\": \"dolore nisi ad officia\",\n      \"properties\": {\n       \"name\": \"aute magna cupidatat do dolore\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"quis\",\n    \"name\": \"ullamco occaecat\",\n    \"eTag\": \"tempor deserunt cillum nulla\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"Lorem aliq\"\n     },\n     {\n      \"message\": \"Lorem u\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ipsum laborum consectetur ad anim\",\n      \"cardPaymentsExternalUrl\": \"cupidatat exercitation mollit Lorem dolor\",\n      \"paymentsTelephone\": \"labore in Lorem sunt exercitation\"\n     },\n     {\n      \"name\": \"consequat nisi pr\",\n      \"cardPaymentsExternalUrl\": \"exercitation minim\",\n      \"paymentsTelephone\": \"in sit anim\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"aliquip mollit do ipsum\",\n       \"crs\": {\n        \"type\": \"commodo fugiat incididunt quis\",\n        \"properties\": {\n         \"name\": \"fugiat magna\"\n        }\n       }\n      },\n      {\n       \"type\": \"incididunt dolore cupidatat nisi\",\n       \"crs\": {\n        \"type\": \"enim\",\n        \"properties\": {\n         \"name\": \"ad\"\n        }\n       }\n      }\n     ],\n     \"type\": \"Ut sed adipisicing mollit\",\n     \"crs\": {\n      \"type\": \"non exercitation qui velit\",\n      \"properties\": {\n       \"name\": \"tempor voluptate elit aliquip\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"quis reprehenderit exercitation in\",\n    \"name\": \"cillum anim ut proident\",\n    \"eTag\": \"non\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bf1b59db-40f4-402f-8fe5-10993143b836",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"enim commodo\",\n   \"code\": \"qui eu a\",\n   \"message\": \"Lorem eu velit culpa\"\n  },\n  {\n   \"property\": \"eu elit ea dolor\",\n   \"code\": \"commodo laborum irure Ut elit\",\n   \"message\": \"labore in proident et\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b3310011-92a0-4a0b-822f-38b2e39ec7bb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cef7049a-9cf6-43ab-99c6-1de07cbf7a7a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0de6a6a5-56cd-4ad1-a511-cb12e923448d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b01de23a-5a32-4b69-a7cc-fe7fe915e585",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3942176d-df58-4350-ae85-4b2befe2ea53",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"amet nisi consectetur laboris\",\n  \"entityType\": 3,\n  \"entityETag\": \"ip\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -66759993,\n     -2724155\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     -77726516,\n     3419573\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "02c8d291-6247-4ab2-9883-1f6db35dbe9d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "018c2bf4-e66a-43b2-b10c-e528770f3484",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "14af43db-2ced-4372-bf71-5d940a9ce7ec",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "701db619-020a-4bda-bdeb-43853a5f1d0b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5032c5bc-36ae-4a64-a97b-cdd3db154ada",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "ed6551db-afbf-484b-9d2e-e4799f53f844",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"consequat qui Excepteur adipisicing\",\n   \"city\": \"dolore sit esse\",\n   \"country\": \"sed qui nostrud\",\n   \"postcode\": \"tem\"\n  },\n  \"locationCode\": \"adipisicing incididunt\",\n  \"totalCapacity\": -74323364,\n  \"zoneId\": \"eiusmod adipisicing dolore Duis\",\n  \"authorityId\": \"irure\",\n  \"features\": {\n   \"type\": \"commodo sed\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"exercitation esse\",\n        \"crs\": {\n         \"type\": \"ut est ex sed\",\n         \"properties\": {\n          \"name\": \"consectetur\"\n         }\n        }\n       },\n       {\n        \"type\": \"sit\",\n        \"crs\": {\n         \"type\": \"irure eiusmod ea in minim\",\n         \"properties\": {\n          \"name\": \"in et sed adipisicing sit\"\n         }\n        }\n       }\n      ],\n      \"type\": \"eiusmod commodo incididunt aute ad\",\n      \"crs\": {\n       \"type\": \"ad non tempor aute ipsum\",\n       \"properties\": {\n        \"name\": \"mollit ut et\"\n       }\n      }\n     },\n     \"type\": \"veniam dolor sint\",\n     \"id\": \"enim est lab\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"Excepteur laborum sint\",\n        \"crs\": {\n         \"type\": \"labore est sed ut\",\n         \"properties\": {\n          \"name\": \"ad Excepteur in\"\n         }\n        }\n       },\n       {\n        \"type\": \"occaecat aliquip deserunt sed\",\n        \"crs\": {\n         \"type\": \"culpa\",\n         \"properties\": {\n          \"name\": \"amet magna commodo\"\n         }\n        }\n       }\n      ],\n      \"type\": \"mollit labore\",\n      \"crs\": {\n       \"type\": \"proident in adipisicing\",\n       \"properties\": {\n        \"name\": \"Excepteur dolor minim\"\n       }\n      }\n     },\n     \"type\": \"Duis velit ullamco\",\n     \"id\": \"sint in dolore mollit\"\n    }\n   ],\n   \"properties\": \"ipsum\"\n  },\n  \"paymentMethodIds\": [\n   -35738605,\n   36189030\n  ],\n  \"entityId\": \"magna laborum commodo dolore\",\n  \"entityType\": 2,\n  \"name\": \"ex sed\",\n  \"eTag\": \"officia ex magna\",\n  \"operator\": {\n   \"telephone\": \"sed aliquip\",\n   \"website\": \"dolor aliquip dolore\",\n   \"name\": \"Excepteur sint in magna est\",\n   \"cardPaymentsExternalUrl\": \"mollit incididunt\",\n   \"paymentsTelephone\": \"ut aliquip aute reprehenderit\"\n  },\n  \"onStreetParkingTypeIds\": [\n   3,\n   14\n  ],\n  \"facilityTypeIds\": [\n   -42144979,\n   -32109856\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "41f1497b-c6f7-4043-ba66-e32492b2337c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "12427178-f757-4f86-81d3-8a836f946a04",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bf7faa6a-c230-452d-baf8-944e86e89b80",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0b86d3a1-3704-4aaf-8659-b0f52313bee4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f519ef1c-7b2d-4564-9e70-8d35108f1e19",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "179a8281-fef7-43b2-9e42-f4893f157b84",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"officia anim irure Lorem\",\n  \"entityType\": 1,\n  \"quotes\": [\n   {\n    \"cost\": -7131688.10400559,\n    \"currency\": \"minim\",\n    \"minCost\": 44377085.37084854,\n    \"minStayUntil\": \"do volup\",\n    \"canExtendUntil\": \"magna est ad eiusmod\",\n    \"pricedUntil\": \"enim nostrud adipisicing Duis\",\n    \"noReturnUntil\": \"sed magna deserun\",\n    \"freeUntil\": \"aliquip eiusmod in dolor elit\",\n    \"becomesFreeAt\": \"eiusmod dolore Lorem sunt\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -67939361,\n     8409768\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"Lorem\",\n    \"surcharge\": {\n     \"value\": 65148625.07939112,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -44753104\n     }\n    }\n   },\n   {\n    \"cost\": -55638103.27940253,\n    \"currency\": \"deserunt incididunt sint velit\",\n    \"minCost\": -91523549.75937644,\n    \"minStayUntil\": \"ut laborum eiusmod velit\",\n    \"canExtendUntil\": \"cupida\",\n    \"pricedUntil\": \"Duis ad Excepteur\",\n    \"noReturnUntil\": \"et deseru\",\n    \"freeUntil\": \"laboris\",\n    \"becomesFreeAt\": \"officia proident eu\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     68578293,\n     88435717\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ipsum elit cupidatat\",\n    \"surcharge\": {\n     \"value\": 77479599.86364791,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 57363404\n     }\n    }\n   }\n  ],\n  \"distance\": -3139518.7554641813,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    91201787,\n    -95867359\n   ]\n  },\n  \"entityETag\": \"in ullamco occaecat eu dolore\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4b3a7aeb-5ad1-4a03-a9c9-9317448871f8",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0f4c1aa6-e9c6-4f50-9ac3-0d39f41bce91",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "06f405a6-9f2a-424a-8934-9f63832a2b8f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f660f873-6016-405b-8a44-fa54fad100d9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "75972cf3-c26a-45fa-abde-9e5536650535",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "568e6f48-1937-4d96-a2c5-89d6f14d1d2b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"in\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"proiden\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 34938256.79650411,\n      \"currency\": \"irure anim amet\",\n      \"minCost\": -48288012.09987317,\n      \"minStayUntil\": \"dolore tempor\",\n      \"canExtendUntil\": \"in Lorem aute dolore\",\n      \"pricedUntil\": \"aliquip nostrud cillum\",\n      \"noReturnUntil\": \"laborum\",\n      \"freeUntil\": \"minim occaecat voluptate nostrud\",\n      \"becomesFreeAt\": \"id consectetur in inc\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -78217712,\n       34736836\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"exercitation cillum pariatur dolore\",\n      \"surcharge\": {\n       \"value\": 89112159.67767358,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 88593681\n       }\n      }\n     },\n     {\n      \"cost\": 78035862.49187186,\n      \"currency\": \"nulla magna fugiat\",\n      \"minCost\": 66886779.106711626,\n      \"minStayUntil\": \"tempor ve\",\n      \"canExtendUntil\": \"aute dolore\",\n      \"pricedUntil\": \"enim nisi ullamco consequat\",\n      \"noReturnUntil\": \"ipsum\",\n      \"freeUntil\": \"Duis reprehenderit\",\n      \"becomesFreeAt\": \"in dolor\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -63861458,\n       74565495\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nostrud deserunt ullamco\",\n      \"surcharge\": {\n       \"value\": 85388846.58613902,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 49513637\n       }\n      }\n     }\n    ],\n    \"distance\": 31501909.484995276,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -33232045,\n      66189925\n     ]\n    },\n    \"entityETag\": \"in laboris ad occaecat\"\n   },\n   {\n    \"entityId\": \"laboris occaecat\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -25722709.801480904,\n      \"currency\": \"id commodo\",\n      \"minCost\": 120854.57999715209,\n      \"minStayUntil\": \"ex\",\n      \"canExtendUntil\": \"eiusmod\",\n      \"pricedUntil\": \"reprehenderit aliqua\",\n      \"noReturnUntil\": \"in in dolor consequat\",\n      \"freeUntil\": \"Duis exercitation\",\n      \"becomesFreeAt\": \"in deserunt proident\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       17955088,\n       -60100144\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"\",\n      \"surcharge\": {\n       \"value\": 84922149.47145781,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -61324975\n       }\n      }\n     },\n     {\n      \"cost\": 39426557.50694826,\n      \"currency\": \"dolor ad deserunt qui do\",\n      \"minCost\": 72415934.62021711,\n      \"minStayUntil\": \"velit tempor ull\",\n      \"canExtendUntil\": \"Excepteur nulla qui su\",\n      \"pricedUntil\": \"ipsum cillum\",\n      \"noReturnUntil\": \"esse anim dolor\",\n      \"freeUntil\": \"sint Ut\",\n      \"becomesFreeAt\": \"occaecat qui\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -48515781,\n       92420656\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"exercitation\",\n      \"surcharge\": {\n       \"value\": -30369439.11354965,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -35500403\n       }\n      }\n     }\n    ],\n    \"distance\": 16404627.345627397,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      14572380,\n      93076634\n     ]\n    },\n    \"entityETag\": \"est esse nulla\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "69662c76-8edf-4528-9409-42831a04f948",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6b35f114-f030-4292-a7b7-ae7673a890ac",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "319f3e5d-49d3-49ab-84a2-ce916c46525f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "265a82a5-3786-403d-b343-e81f0fea73fc",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "2ed3af1e-73b5-45db-b08d-e186b94dd125",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"sit nulla\",\n    \"cardPaymentsExternalUrl\": \"veniam fugiat laboris\",\n    \"paymentsTelephone\": \"reprehenderit ad dolor qui\"\n   },\n   {\n    \"name\": \"cupidatat sint\",\n    \"cardPaymentsExternalUrl\": \"reprehenderit in cupidatat ullamco fugiat\",\n    \"paymentsTelephone\": \"elit veniam quis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0d245985-6fb4-423b-941f-f9085a93825f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "07986898-14ae-4190-ba09-e42937639077",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c8025b0f-0315-4e14-9726-bb510e90fb80",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7f9c5d67-6f31-4f0d-bf5a-68b49efbf990",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5af48c56-3be1-4cd6-be9b-5465d107fcf0",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "81c87d1d-fa05-430d-ac73-4bc3fc0e97e6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"mollit\",\n     \"crs\": {\n      \"type\": \"aliqua ullamco\",\n      \"properties\": {\n       \"name\": \"deserunt ad\"\n      }\n     }\n    },\n    {\n     \"type\": \"dolor labore\",\n     \"crs\": {\n      \"type\": \"exercitation dolore irure anim\",\n      \"properties\": {\n       \"name\": \"pariatur do velit adipisicing\"\n      }\n     }\n    }\n   ],\n   \"type\": \"in consectetur deserunt irure Lorem\",\n   \"crs\": {\n    \"type\": \"sint est sit ut\",\n    \"properties\": {\n     \"name\": \"dolor reprehenderit sint\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"sit Ut sed Lorem\"\n   },\n   {\n    \"message\": \"incididunt\"\n   }\n  ],\n  \"authorityId\": \"occaecat minim\",\n  \"zoneType\": 2,\n  \"entityType\": 3,\n  \"entityId\": \"eiusmod laborum id qui\",\n  \"name\": \"quis\",\n  \"eTag\": \"cupidata\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "abb57e5f-9fc1-4e78-9c29-ab8929d5bcc4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8dc03f8a-1b11-4d01-b103-fdeb5fb37eb7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9e3923b2-a64b-4fb7-9e70-d1bc7762db18",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ullamco Lorem culpa laboris\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d7046d4b-1864-43e3-aff3-72ed62fb7f44",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d9387315-9e20-48d3-af0e-09f9d8afa08d",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eu exercitation sed amet do\",\n            \"properties\": {\n                \"name\": \"sunt sint cupidatat Excepteur\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "571e9c23-289a-459a-b3cd-62384cfd2c32",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n                \"name\": \"irure occaecat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in Lorem ullamco proident\",\n    \"entityETag\": \"adipisicin\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 10,\n      \"specialRestrictionTypeId\": -40125683,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"incididunt adipisicing nulla in officia\",\n        \"endTime\": \"nostrud mollit cillum\",\n        \"maxStay\": 64232550\n       },\n       {\n        \"startTime\": \"mollit fugiat nisi\",\n        \"endTime\": \"consequat ullamco\",\n        \"maxStay\": 92513859\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 5,\n      \"specialRestrictionTypeId\": 81938901,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla adipisicing sint eu cillum\",\n        \"endTime\": \"nulla labore commodo aliquip\",\n        \"maxStay\": 63613397\n       },\n       {\n        \"startTime\": \"ex est eiusmod dolore labore\",\n        \"endTime\": \"mollit cupidatat in\",\n        \"maxStay\": 40700769\n       }\n      ]\n     }\n    ],\n    \"distance\": -39932366.119068116\n   },\n   {\n    \"entityId\": \"pariatur esse sunt\",\n    \"entityETag\": \"do incididunt nulla nostrud\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 12,\n      \"specialRestrictionTypeId\": 48434333,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt magna voluptate aliqua\",\n        \"endTime\": \"id culpa cillum quis\",\n        \"maxStay\": -67303641\n       },\n       {\n        \"startTime\": \"ea dolor et ut\",\n        \"endTime\": \"ut minim consectetur adipisicing\",\n        \"maxStay\": 69614336\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 16,\n      \"specialRestrictionTypeId\": -38153912,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"aliquip et aliqua\",\n        \"endTime\": \"labore dolor amet quis Ut\",\n        \"maxStay\": 71526837\n       },\n       {\n        \"startTime\": \"sit Lorem ullamco sint\",\n        \"endTime\": \"esse cupidatat\",\n        \"maxStay\": 65624887\n       }\n      ]\n     }\n    ],\n    \"distance\": -92767325.27113336\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"non cupidatat n\",\n   \"entityETag\": \"mollit veniam id \",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 16,\n     \"specialRestrictionTypeId\": -60487528,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"non veniam ut est in\",\n       \"endTime\": \"ex officia\",\n       \"maxStay\": -9170989\n      },\n      {\n       \"startTime\": \"eu ut voluptate occaecat consequat\",\n       \"endTime\": \"incididunt ut\",\n       \"maxStay\": 21771219\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -93979104,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nulla amet\",\n       \"endTime\": \"laborum laboris \",\n       \"maxStay\": -31227366\n      },\n      {\n       \"startTime\": \"anim cillum aute ullamco enim\",\n       \"endTime\": \"a\",\n       \"maxStay\": 9487750\n      }\n     ]\n    }\n   ],\n   \"distance\": -63404206.937533125\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cf6baf1d-831f-44bb-a4a5-3785e95920f7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n                \"name\": \"irure occaecat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cc828be5-6502-4765-8772-ccd6898d0261",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n                \"name\": \"irure occaecat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9c1943a2-f9d5-4091-b100-ca6b403c7c9c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n                \"name\": \"irure occaecat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f1c1b37d-ce73-49cc-8d6c-1378480a682c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n                \"name\": \"irure occaecat\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4c565fd7-0390-4280-8907-8aff16bc8378",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1,\n        5\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "1a3f111b-1c5b-4211-b3e1-88623558bf19",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        15\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"esse irure tempor\",\n      \"city\": \"fugiat\",\n      \"country\": \"dolor labore\",\n      \"postcode\": \"sunt esse\"\n     },\n     \"locationCode\": \"aute\",\n     \"totalCapacity\": 60558643,\n     \"zoneId\": \"aliqua dolor\",\n     \"authorityId\": \"occaecat adipisicing magna\",\n     \"features\": {\n      \"type\": \"qui occaecat ad\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"in velit dolor\",\n           \"crs\": {\n            \"type\": \"Ut ea\",\n            \"properties\": {\n             \"name\": \"fugiat Excepteur\"\n            }\n           }\n          },\n          {\n           \"type\": \"tempor\",\n           \"crs\": {\n            \"type\": \"Duis ut\",\n            \"properties\": {\n             \"name\": \"reprehenderit in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod nisi veniam d\",\n         \"crs\": {\n          \"type\": \"in veniam est quis\",\n          \"properties\": {\n           \"name\": \"est\"\n          }\n         }\n        },\n        \"type\": \"ex nisi minim in culpa\",\n        \"id\": \"non Lorem ad\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ullamco enim\",\n           \"crs\": {\n            \"type\": \"eiusmod amet in\",\n            \"properties\": {\n             \"name\": \"ut non cillum nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"enim irure non consequat\",\n           \"crs\": {\n            \"type\": \"laborum sit do\",\n            \"properties\": {\n             \"name\": \"aliquip officia\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aute dolor aliqua incididunt\",\n         \"crs\": {\n          \"type\": \"reprehenderit\",\n          \"properties\": {\n           \"name\": \"velit consectetur ut reprehenderit\"\n          }\n         }\n        },\n        \"type\": \"officia enim magna ut est\",\n        \"id\": \"reprehenderit ea in\"\n       }\n      ],\n      \"properties\": \"incididunt occaecat\"\n     },\n     \"paymentMethodIds\": [\n      -92792544,\n      24966872\n     ],\n     \"entityId\": \"deserunt quis\",\n     \"entityType\": 3,\n     \"name\": \"dolor cupidat\",\n     \"eTag\": \"esse sed magna ullamco\",\n     \"operator\": {\n      \"telephone\": \"voluptate aute veniam in eiusmod\",\n      \"website\": \"commodo proident cillum \",\n      \"name\": \"ea Excepteur\",\n      \"cardPaymentsExternalUrl\": \"nostrud ullamco moll\",\n      \"paymentsTelephone\": \"cillum fugiat tempor in ex\"\n     },\n     \"onStreetParkingTypeIds\": [\n      2,\n      1\n     ],\n     \"facilityTypeIds\": [\n      -87664797,\n      -27396557\n     ]\n    },\n    \"distance\": -87686879.89878958\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"qui reprehenderit non dolore\",\n      \"city\": \"reprehenderit in sed ea\",\n      \"country\": \"dolore\",\n      \"postcode\": \"et nisi eiusmod\"\n     },\n     \"locationCode\": \"deserunt consectetur Duis\",\n     \"totalCapacity\": -46536433,\n     \"zoneId\": \"dolore cupidatat est\",\n     \"authorityId\": \"eiusmod\",\n     \"features\": {\n      \"type\": \"ex cillum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"minim nul\",\n           \"crs\": {\n            \"type\": \"magna Excepteur nisi\",\n            \"properties\": {\n             \"name\": \"dolor minim Ut deserunt\"\n            }\n           }\n          },\n          {\n           \"type\": \"Duis Ut qui sunt\",\n           \"crs\": {\n            \"type\": \"velit sint\",\n            \"properties\": {\n             \"name\": \"proident et nostrud\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore\",\n         \"crs\": {\n          \"type\": \"eiusmod est\",\n          \"properties\": {\n           \"name\": \"in magna ipsum labore\"\n          }\n         }\n        },\n        \"type\": \"laboris Ut\",\n        \"id\": \"sunt irure commodo\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"id aut\",\n           \"crs\": {\n            \"type\": \"repr\",\n            \"properties\": {\n             \"name\": \"consectetur\"\n            }\n           }\n          },\n          {\n           \"type\": \"velit fugi\",\n           \"crs\": {\n            \"type\": \"dolor officia qui occaecat et\",\n            \"properties\": {\n             \"name\": \"eu et aute id\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Ut\",\n         \"crs\": {\n          \"type\": \"proident labore consequat\",\n          \"properties\": {\n           \"name\": \"magna do cupidatat\"\n          }\n         }\n        },\n        \"type\": \"Lorem magna laboris\",\n        \"id\": \"quis voluptate\"\n       }\n      ],\n      \"properties\": \"velit Ut\"\n     },\n     \"paymentMethodIds\": [\n      90045247,\n      -94649751\n     ],\n     \"entityId\": \"id deserunt\",\n     \"entityType\": 2,\n     \"name\": \"dolore cupidatat labore\",\n     \"eTag\": \"in Lorem Duis\",\n     \"operator\": {\n      \"telephone\": \"consequat aliqua ut et\",\n      \"website\": \"nisi Lorem\",\n      \"name\": \"qui incididunt\",\n      \"cardPaymentsExternalUrl\": \"sed\",\n      \"paymentsTelephone\": \"enim sed ipsum\"\n     },\n     \"onStreetParkingTypeIds\": [\n      1,\n      2\n     ],\n     \"facilityTypeIds\": [\n      24943235,\n      -83635065\n     ]\n    },\n    \"distance\": -54415780.49354723\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bc653304-a442-423d-a4b1-577650d4a110",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        15\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a88758e4-9f17-498f-92c7-4f2faef7e4f4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        15\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c752f3f0-56c5-4c28-b3ad-de68fe09a103",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        15\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0f86e879-d3a1-4abc-bdec-62d977bd9a7d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        15\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "38add4fb-54f7-4844-afd2-867acbfd92b2",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad voluptate\",\n            \"properties\": {\n                \"name\": \"sit esse ex reprehenderit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        12,\n        11\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "d5f637b6-3490-4dae-af71-9c85aecb54ff",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit\",\n            \"properties\": {\n                \"name\": \"ad voluptate occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        5,\n        2\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"esse irure tempor\",\n      \"city\": \"fugiat\",\n      \"country\": \"dolor labore\",\n      \"postcode\": \"sunt esse\"\n     },\n     \"locationCode\": \"aute\",\n     \"totalCapacity\": 60558643,\n     \"zoneId\": \"aliqua dolor\",\n     \"authorityId\": \"occaecat adipisicing magna\",\n     \"features\": {\n      \"type\": \"qui occaecat ad\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"in velit dolor\",\n           \"crs\": {\n            \"type\": \"Ut ea\",\n            \"properties\": {\n             \"name\": \"fugiat Excepteur\"\n            }\n           }\n          },\n          {\n           \"type\": \"tempor\",\n           \"crs\": {\n            \"type\": \"Duis ut\",\n            \"properties\": {\n             \"name\": \"reprehenderit in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod nisi veniam d\",\n         \"crs\": {\n          \"type\": \"in veniam est quis\",\n          \"properties\": {\n           \"name\": \"est\"\n          }\n         }\n        },\n        \"type\": \"ex nisi minim in culpa\",\n        \"id\": \"non Lorem ad\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ullamco enim\",\n           \"crs\": {\n            \"type\": \"eiusmod amet in\",\n            \"properties\": {\n             \"name\": \"ut non cillum nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"enim irure non consequat\",\n           \"crs\": {\n            \"type\": \"laborum sit do\",\n            \"properties\": {\n             \"name\": \"aliquip officia\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aute dolor aliqua incididunt\",\n         \"crs\": {\n          \"type\": \"reprehenderit\",\n          \"properties\": {\n           \"name\": \"velit consectetur ut reprehenderit\"\n          }\n         }\n        },\n        \"type\": \"officia enim magna ut est\",\n        \"id\": \"reprehenderit ea in\"\n       }\n      ],\n      \"properties\": \"incididunt occaecat\"\n     },\n     \"paymentMethodIds\": [\n      -92792544,\n      24966872\n     ],\n     \"entityId\": \"deserunt quis\",\n     \"entityType\": 3,\n     \"name\": \"dolor cupidat\",\n     \"eTag\": \"esse sed magna ullamco\",\n     \"operator\": {\n      \"telephone\": \"voluptate aute veniam in eiusmod\",\n      \"website\": \"commodo proident cillum \",\n      \"name\": \"ea Excepteur\",\n      \"cardPaymentsExternalUrl\": \"nostrud ullamco moll\",\n      \"paymentsTelephone\": \"cillum fugiat tempor in ex\"\n     },\n     \"onStreetParkingTypeIds\": [\n      2,\n      1\n     ],\n     \"facilityTypeIds\": [\n      -87664797,\n      -27396557\n     ]\n    },\n    \"distance\": -87686879.89878958\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"qui reprehenderit non dolore\",\n      \"city\": \"reprehenderit in sed ea\",\n      \"country\": \"dolore\",\n      \"postcode\": \"et nisi eiusmod\"\n     },\n     \"locationCode\": \"deserunt consectetur Duis\",\n     \"totalCapacity\": -46536433,\n     \"zoneId\": \"dolore cupidatat est\",\n     \"authorityId\": \"eiusmod\",\n     \"features\": {\n      \"type\": \"ex cillum\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"minim nul\",\n           \"crs\": {\n            \"type\": \"magna Excepteur nisi\",\n            \"properties\": {\n             \"name\": \"dolor minim Ut deserunt\"\n            }\n           }\n          },\n          {\n           \"type\": \"Duis Ut qui sunt\",\n           \"crs\": {\n            \"type\": \"velit sint\",\n            \"properties\": {\n             \"name\": \"proident et nostrud\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore\",\n         \"crs\": {\n          \"type\": \"eiusmod est\",\n          \"properties\": {\n           \"name\": \"in magna ipsum labore\"\n          }\n         }\n        },\n        \"type\": \"laboris Ut\",\n        \"id\": \"sunt irure commodo\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"id aut\",\n           \"crs\": {\n            \"type\": \"repr\",\n            \"properties\": {\n             \"name\": \"consectetur\"\n            }\n           }\n          },\n          {\n           \"type\": \"velit fugi\",\n           \"crs\": {\n            \"type\": \"dolor officia qui occaecat et\",\n            \"properties\": {\n             \"name\": \"eu et aute id\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Ut\",\n         \"crs\": {\n          \"type\": \"proident labore consequat\",\n          \"properties\": {\n           \"name\": \"magna do cupidatat\"\n          }\n         }\n        },\n        \"type\": \"Lorem magna laboris\",\n        \"id\": \"quis voluptate\"\n       }\n      ],\n      \"properties\": \"velit Ut\"\n     },\n     \"paymentMethodIds\": [\n      90045247,\n      -94649751\n     ],\n     \"entityId\": \"id deserunt\",\n     \"entityType\": 2,\n     \"name\": \"dolore cupidatat labore\",\n     \"eTag\": \"in Lorem Duis\",\n     \"operator\": {\n      \"telephone\": \"consequat aliqua ut et\",\n      \"website\": \"nisi Lorem\",\n      \"name\": \"qui incididunt\",\n      \"cardPaymentsExternalUrl\": \"sed\",\n      \"paymentsTelephone\": \"enim sed ipsum\"\n     },\n     \"onStreetParkingTypeIds\": [\n      1,\n      2\n     ],\n     \"facilityTypeIds\": [\n      24943235,\n      -83635065\n     ]\n    },\n    \"distance\": -54415780.49354723\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7af47ff1-a0d3-496e-9cef-17c61897cb84",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit\",\n            \"properties\": {\n                \"name\": \"ad voluptate occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        5,\n        2\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8d938402-21bb-40fe-b827-00a990099140",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit\",\n            \"properties\": {\n                \"name\": \"ad voluptate occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        5,\n        2\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3f032ad2-c98b-43de-91d3-4dd0ae9b124b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit\",\n            \"properties\": {\n                \"name\": \"ad voluptate occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        5,\n        2\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ff9e896b-bc41-4d76-bc8e-061311520382",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit\",\n            \"properties\": {\n                \"name\": \"ad voluptate occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        5,\n        2\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "fc1d86e0-1f51-486b-a49b-788005e1adfa",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e1189962-1962-4da8-8aae-5c60e69bf02a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"id reprehenderit\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"commodo exercitation dolore labore\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 97236712.10125193,\n      \"currency\": \"aliqua Excepteur adipisicing anim\",\n      \"minCost\": 28998798.779420197,\n      \"minStayUntil\": \"Excepteur id adipisicing aliquip labore\",\n      \"canExtendUntil\": \"Lore\",\n      \"pricedUntil\": \"tempor irure mollit\",\n      \"noReturnUntil\": \"commodo cupidatat irure qui\",\n      \"freeUntil\": \"cupidatat sunt\",\n      \"becomesFreeAt\": \"Duis deserunt ea\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       40934395,\n       -89819416\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"pariatur\",\n      \"surcharge\": {\n       \"value\": 3816437.0169498622,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -78656661\n       }\n      }\n     },\n     {\n      \"cost\": 53300352.9102951,\n      \"currency\": \"ull\",\n      \"minCost\": 66489037.64723995,\n      \"minStayUntil\": \"in ullamco\",\n      \"canExtendUntil\": \"ut est\",\n      \"pricedUntil\": \"consequat adipisicing incididunt\",\n      \"noReturnUntil\": \"consectetur\",\n      \"freeUntil\": \"nulla elit L\",\n      \"becomesFreeAt\": \"eu nos\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -45235850,\n       92769471\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex \",\n      \"surcharge\": {\n       \"value\": 51315951.087652,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -82266935\n       }\n      }\n     }\n    ],\n    \"distance\": -56309194.42015294,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      90320664,\n      -21186554\n     ]\n    },\n    \"entityETag\": \"ipsum adipisicing\"\n   },\n   {\n    \"entityId\": \"voluptate esse commodo\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -96110544.34668396,\n      \"currency\": \"ea in dolore\",\n      \"minCost\": -92701134.84966327,\n      \"minStayUntil\": \"sint commodo aliqua in\",\n      \"canExtendUntil\": \"ut ex quis laborum\",\n      \"pricedUntil\": \"eiusmod in\",\n      \"noReturnUntil\": \"ea non tempor\",\n      \"freeUntil\": \"quis ullamco culpa\",\n      \"becomesFreeAt\": \"Excepteur Duis\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -74105436,\n       58172979\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor velit quis et\",\n      \"surcharge\": {\n       \"value\": -94489943.012803,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 43402274\n       }\n      }\n     },\n     {\n      \"cost\": 59392205.6257309,\n      \"currency\": \"in\",\n      \"minCost\": 37589382.49551603,\n      \"minStayUntil\": \"anim esse reprehenderit amet\",\n      \"canExtendUntil\": \"occaecat labore nisi\",\n      \"pricedUntil\": \"tempor adipisicing\",\n      \"noReturnUntil\": \"Ut exercitation\",\n      \"freeUntil\": \"ut elit\",\n      \"becomesFreeAt\": \"incididunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -65856891,\n       87407095\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia ipsum exercitation dolore cupidatat\",\n      \"surcharge\": {\n       \"value\": 59700424.40945482,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -83004328\n       }\n      }\n     }\n    ],\n    \"distance\": 52230404.41823232,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -2299651,\n      47429757\n     ]\n    },\n    \"entityETag\": \"laboris magna ut\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f8e8b66e-0d12-48a0-9d7a-05bd38607fc3",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3e5c43ce-f96f-42f3-ab13-0b01e0e4f4f9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4d2361e8-3cf1-416d-af05-f41d7c7277d0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "541a7f4e-6a0a-4963-9627-6b37e8dda609",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "116047f7-0f90-4d3e-bf69-cd70e5f3966f",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute velit\",\n            \"properties\": {\n                \"name\": \"Lorem adipisicing Ut cillum in\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "3147aa34-46df-4461-9019-51849c727f82",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n                \"name\": \"do labore minim occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"id reprehenderit\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"commodo exercitation dolore labore\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 97236712.10125193,\n      \"currency\": \"aliqua Excepteur adipisicing anim\",\n      \"minCost\": 28998798.779420197,\n      \"minStayUntil\": \"Excepteur id adipisicing aliquip labore\",\n      \"canExtendUntil\": \"Lore\",\n      \"pricedUntil\": \"tempor irure mollit\",\n      \"noReturnUntil\": \"commodo cupidatat irure qui\",\n      \"freeUntil\": \"cupidatat sunt\",\n      \"becomesFreeAt\": \"Duis deserunt ea\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       40934395,\n       -89819416\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"pariatur\",\n      \"surcharge\": {\n       \"value\": 3816437.0169498622,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -78656661\n       }\n      }\n     },\n     {\n      \"cost\": 53300352.9102951,\n      \"currency\": \"ull\",\n      \"minCost\": 66489037.64723995,\n      \"minStayUntil\": \"in ullamco\",\n      \"canExtendUntil\": \"ut est\",\n      \"pricedUntil\": \"consequat adipisicing incididunt\",\n      \"noReturnUntil\": \"consectetur\",\n      \"freeUntil\": \"nulla elit L\",\n      \"becomesFreeAt\": \"eu nos\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -45235850,\n       92769471\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex \",\n      \"surcharge\": {\n       \"value\": 51315951.087652,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -82266935\n       }\n      }\n     }\n    ],\n    \"distance\": -56309194.42015294,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      90320664,\n      -21186554\n     ]\n    },\n    \"entityETag\": \"ipsum adipisicing\"\n   },\n   {\n    \"entityId\": \"voluptate esse commodo\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -96110544.34668396,\n      \"currency\": \"ea in dolore\",\n      \"minCost\": -92701134.84966327,\n      \"minStayUntil\": \"sint commodo aliqua in\",\n      \"canExtendUntil\": \"ut ex quis laborum\",\n      \"pricedUntil\": \"eiusmod in\",\n      \"noReturnUntil\": \"ea non tempor\",\n      \"freeUntil\": \"quis ullamco culpa\",\n      \"becomesFreeAt\": \"Excepteur Duis\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -74105436,\n       58172979\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor velit quis et\",\n      \"surcharge\": {\n       \"value\": -94489943.012803,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 43402274\n       }\n      }\n     },\n     {\n      \"cost\": 59392205.6257309,\n      \"currency\": \"in\",\n      \"minCost\": 37589382.49551603,\n      \"minStayUntil\": \"anim esse reprehenderit amet\",\n      \"canExtendUntil\": \"occaecat labore nisi\",\n      \"pricedUntil\": \"tempor adipisicing\",\n      \"noReturnUntil\": \"Ut exercitation\",\n      \"freeUntil\": \"ut elit\",\n      \"becomesFreeAt\": \"incididunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -65856891,\n       87407095\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia ipsum exercitation dolore cupidatat\",\n      \"surcharge\": {\n       \"value\": 59700424.40945482,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -83004328\n       }\n      }\n     }\n    ],\n    \"distance\": 52230404.41823232,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -2299651,\n      47429757\n     ]\n    },\n    \"entityETag\": \"laboris magna ut\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fbbb284f-0fa8-4b3a-b06c-40cb63bca03a",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n                \"name\": \"do labore minim occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "705574d4-5f59-49c8-80ac-46781a5c04fe",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n                \"name\": \"do labore minim occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "43b302c0-2be3-444d-a08e-8e41a3d7c755",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n                \"name\": \"do labore minim occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5e40bdde-9563-471b-8f48-7a54668668e1",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n                \"name\": \"do labore minim occaecat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "05bb9e55-1e90-4fe7-96d8-cd7945afdf4d",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla Ut Lorem irure do\",\n            \"properties\": {\n                \"name\": \"occaecat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "0a2162f3-d6a7-4d96-9e95-b92970ebd99d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat tempor aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"ut in\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"ipsum\",\n     \"crs\": {\n      \"type\": \"ut laboris sunt laborum\",\n      \"properties\": {\n       \"name\": \"anim adipisicing\"\n      }\n     }\n    },\n    \"type\": \"ipsum commod\",\n    \"id\": \"mollit in adipisicing sed consequat\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"anim culpa sit laborum\",\n     \"crs\": {\n      \"type\": \"commodo velit \",\n      \"properties\": {\n       \"name\": \"in proident commodo dolor\"\n      }\n     }\n    },\n    \"type\": \"amet in Lorem ex ali\",\n    \"id\": \"sint ipsum cillum officia consectetur\"\n   }\n  ],\n  \"properties\": \"aliqua quis irure\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3eb489c0-9de1-41a6-be6f-4da7226e5ee1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat tempor aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d40b3d14-1971-42d6-86d8-9818eefc7f6c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat tempor aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6f4b2ee3-9f24-4f39-99c5-994e191eecb9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat tempor aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6c749b71-b9d5-43c4-ba02-99855022060c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat tempor aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "3c32f918-a40a-4c39-972d-2992f104e340",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit\",\n            \"properties\": {\n                \"name\": \"sit culpa ipsum laboris\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "561ac6d5-c922-4f65-bd11-600081574a3f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim mollit\",\n            \"properties\": {\n                \"name\": \"officia quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        9,\n        7\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in Lorem ullamco proident\",\n    \"entityETag\": \"adipisicin\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 10,\n      \"specialRestrictionTypeId\": -40125683,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"incididunt adipisicing nulla in officia\",\n        \"endTime\": \"nostrud mollit cillum\",\n        \"maxStay\": 64232550\n       },\n       {\n        \"startTime\": \"mollit fugiat nisi\",\n        \"endTime\": \"consequat ullamco\",\n        \"maxStay\": 92513859\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 5,\n      \"specialRestrictionTypeId\": 81938901,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla adipisicing sint eu cillum\",\n        \"endTime\": \"nulla labore commodo aliquip\",\n        \"maxStay\": 63613397\n       },\n       {\n        \"startTime\": \"ex est eiusmod dolore labore\",\n        \"endTime\": \"mollit cupidatat in\",\n        \"maxStay\": 40700769\n       }\n      ]\n     }\n    ],\n    \"distance\": -39932366.119068116\n   },\n   {\n    \"entityId\": \"pariatur esse sunt\",\n    \"entityETag\": \"do incididunt nulla nostrud\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 12,\n      \"specialRestrictionTypeId\": 48434333,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sunt magna voluptate aliqua\",\n        \"endTime\": \"id culpa cillum quis\",\n        \"maxStay\": -67303641\n       },\n       {\n        \"startTime\": \"ea dolor et ut\",\n        \"endTime\": \"ut minim consectetur adipisicing\",\n        \"maxStay\": 69614336\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 16,\n      \"specialRestrictionTypeId\": -38153912,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"aliquip et aliqua\",\n        \"endTime\": \"labore dolor amet quis Ut\",\n        \"maxStay\": 71526837\n       },\n       {\n        \"startTime\": \"sit Lorem ullamco sint\",\n        \"endTime\": \"esse cupidatat\",\n        \"maxStay\": 65624887\n       }\n      ]\n     }\n    ],\n    \"distance\": -92767325.27113336\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"non cupidatat n\",\n   \"entityETag\": \"mollit veniam id \",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 16,\n     \"specialRestrictionTypeId\": -60487528,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"non veniam ut est in\",\n       \"endTime\": \"ex officia\",\n       \"maxStay\": -9170989\n      },\n      {\n       \"startTime\": \"eu ut voluptate occaecat consequat\",\n       \"endTime\": \"incididunt ut\",\n       \"maxStay\": 21771219\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -93979104,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nulla amet\",\n       \"endTime\": \"laborum laboris \",\n       \"maxStay\": -31227366\n      },\n      {\n       \"startTime\": \"anim cillum aute ullamco enim\",\n       \"endTime\": \"a\",\n       \"maxStay\": 9487750\n      }\n     ]\n    }\n   ],\n   \"distance\": -63404206.937533125\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e68dee6e-67f2-4d11-ae46-d9eae0f8dcd6",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim mollit\",\n            \"properties\": {\n                \"name\": \"officia quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        9,\n        7\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur nulla labore\",\n \"errors\": [\n  {\n   \"property\": \"ad\",\n   \"code\": \"nisi ipsum ea consectetur\",\n   \"message\": \"nisi irure\"\n  },\n  {\n   \"property\": \"irure qui minim in\",\n   \"code\": \"ad ea Lorem\",\n   \"message\": \"ut qui tempor\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "63e66892-f1b8-4038-85a0-048720782a67",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim mollit\",\n            \"properties\": {\n                \"name\": \"officia quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        9,\n        7\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cb0ba46a-220d-47c0-8805-118258524aab",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim mollit\",\n            \"properties\": {\n                \"name\": \"officia quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        9,\n        7\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "508acc38-0906-4d23-92af-d9c3f18705e7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim mollit\",\n            \"properties\": {\n                \"name\": \"officia quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        9,\n        7\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d3a1dfed-eeb6-4a9c-95bf-f3e7aac38c64",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "76508bc2-bbe8-4afe-9607-2d1feaceb1ea",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4977035e-48a2-4edb-8d17-1f3b030af6a7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d4ac54af-6163-43ce-abf9-400e9b2a70b1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "80d8efdf-d89d-49e9-b5fa-5d76541207ec",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "2bb9cb6b-9148-487a-a5dd-58d195c073a8",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
