{
  "item": [
    {
      "id": "2eb4dcd6-633c-453b-b762-57814cc18cbe",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "a002447a-ab7c-4fa7-9fce-54ffeb642c29",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"adipisicing aliquip Ut anim dolor\"\n   },\n   {\n    \"message\": \"consectetur \"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"cupidatat eu magna\",\n    \"cardPaymentsExternalUrl\": \"incididunt in\",\n    \"paymentsTelephone\": \"adipisicing eiusmod con\"\n   },\n   {\n    \"name\": \"culpa\",\n    \"cardPaymentsExternalUrl\": \"veniam en\",\n    \"paymentsTelephone\": \"nostrud qui consequat proident minim\"\n   }\n  ],\n  \"entityType\": 1,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"Ut quis minim\",\n     \"crs\": {\n      \"type\": \"ea dolore in\",\n      \"properties\": {\n       \"name\": \"pariatur in reprehenderit\"\n      }\n     }\n    },\n    {\n     \"type\": \"voluptate mollit laboris aute\",\n     \"crs\": {\n      \"type\": \"dolore occaecat cupidatat esse\",\n      \"properties\": {\n       \"name\": \"qui Ut sed est sit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"aute nulla elit\",\n   \"crs\": {\n    \"type\": \"eu mollit \",\n    \"properties\": {\n     \"name\": \"commodo officia amet\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"et cupidatat fugiat magna\",\n  \"name\": \"dolore ut sunt id\",\n  \"eTag\": \"qui Ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1e515b30-0bc1-4daf-94f9-3f182783083f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e53b986d-6bf8-4a17-89a5-080d1aca3ca2",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a847956c-d1ec-41e1-be02-44dd34fb2056",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ea incididunt\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0161e65e-7d05-4e60-a32e-d84e2c600675",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "df7026c5-ef7c-4ddd-ac3b-64390b4e3c4a",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "eebac385-67a2-47c7-a4f9-3798072839d8",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"velit et \",\n     \"city\": \"in veniam\",\n     \"country\": \"mollit Lorem\",\n     \"postcode\": \"nisi enim adipisicing\"\n    },\n    \"locationCode\": \"id deserunt sunt\",\n    \"totalCapacity\": -11120745,\n    \"zoneId\": \"ut deserunt consequat\",\n    \"authorityId\": \"cupidatat consectetur elit laborum\",\n    \"features\": {\n     \"type\": \"magna fugiat in adipisicing\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"mollit Lorem\",\n          \"crs\": {\n           \"type\": \"id in\",\n           \"properties\": {\n            \"name\": \"aliquip ipsum consectetur ad\"\n           }\n          }\n         },\n         {\n          \"type\": \"magna culpa\",\n          \"crs\": {\n           \"type\": \"nostrud culpa ex incididunt\",\n           \"properties\": {\n            \"name\": \"ame\"\n           }\n          }\n         }\n        ],\n        \"type\": \"ex consequat aliquip dolore\",\n        \"crs\": {\n         \"type\": \"ea eu Duis\",\n         \"properties\": {\n          \"name\": \"sit cillum dolore nisi\"\n         }\n        }\n       },\n       \"type\": \"laboris sint consectetur ut irure\",\n       \"id\": \"amet ex dolore ad\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"esse fug\",\n          \"crs\": {\n           \"type\": \"exercitation\",\n           \"properties\": {\n            \"name\": \"eiusmod in id\"\n           }\n          }\n         },\n         {\n          \"type\": \"ad ut adipisicing minim\",\n          \"crs\": {\n           \"type\": \"nulla consectetur ips\",\n           \"properties\": {\n            \"name\": \"in t\"\n           }\n          }\n         }\n        ],\n        \"type\": \"dolor ut quis consequat\",\n        \"crs\": {\n         \"type\": \"enim nulla Duis\",\n         \"properties\": {\n          \"name\": \"Ut aliquip amet of\"\n         }\n        }\n       },\n       \"type\": \"tempor aliqua nostrud\",\n       \"id\": \"pariatur sit enim\"\n      }\n     ],\n     \"properties\": \"ipsum\"\n    },\n    \"paymentMethodIds\": [\n     -95556211,\n     59685850\n    ],\n    \"entityId\": \"pariatur\",\n    \"entityType\": 4,\n    \"name\": \"Lorem labor\",\n    \"eTag\": \"voluptate mollit occaecat\"\n   },\n   {\n    \"address\": {\n     \"street\": \"qui Ut reprehenderit in culpa\",\n     \"city\": \"eiusmod est ipsum nisi Excepteur\",\n     \"country\": \"tempor culpa velit esse\",\n     \"postcode\": \"minim cupidatat\"\n    },\n    \"locationCode\": \"amet esse sint laborum\",\n    \"totalCapacity\": 10192155,\n    \"zoneId\": \"nisi sed\",\n    \"authorityId\": \"commodo\",\n    \"features\": {\n     \"type\": \"c\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"culpa qui officia et minim\",\n          \"crs\": {\n           \"type\": \"dolore reprehenderit\",\n           \"properties\": {\n            \"name\": \"ea quis pariatur sint occaecat\"\n           }\n          }\n         },\n         {\n          \"type\": \"laboris laborum velit proident\",\n          \"crs\": {\n           \"type\": \"adipisicing enim do laboris\",\n           \"properties\": {\n            \"name\": \"id s\"\n           }\n          }\n         }\n        ],\n        \"type\": \"exercitation\",\n        \"crs\": {\n         \"type\": \"tempor ipsum\",\n         \"properties\": {\n          \"name\": \"ullamco officia\"\n         }\n        }\n       },\n       \"type\": \"incididunt do \",\n       \"id\": \"magna officia mollit\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Duis ad\",\n          \"crs\": {\n           \"type\": \"occaecat quis\",\n           \"properties\": {\n            \"name\": \"nostrud quis\"\n           }\n          }\n         },\n         {\n          \"type\": \"deserunt laborum a\",\n          \"crs\": {\n           \"type\": \"Duis et voluptate\",\n           \"properties\": {\n            \"name\": \"officia commodo exercitation\"\n           }\n          }\n         }\n        ],\n        \"type\": \"nisi culpa Excepteur enim\",\n        \"crs\": {\n         \"type\": \"elit eiusmod id\",\n         \"properties\": {\n          \"name\": \"nulla aute consectetur et\"\n         }\n        }\n       },\n       \"type\": \"do adipisicing officia incididunt commodo\",\n       \"id\": \"esse officia\"\n      }\n     ],\n     \"properties\": \"enim fugiat culpa\"\n    },\n    \"paymentMethodIds\": [\n     -85353477,\n     -56965040\n    ],\n    \"entityId\": \"aliqua id\",\n    \"entityType\": 2,\n    \"name\": \"ex Duis ullamco Ut\",\n    \"eTag\": \"Excepteur incididunt exercitation dolor\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ea velit ex Duis qui\",\n       \"crs\": {\n        \"type\": \"ad ea\",\n        \"properties\": {\n         \"name\": \"eu consequat\"\n        }\n       }\n      },\n      {\n       \"type\": \"cupidatat incididunt nostrud\",\n       \"crs\": {\n        \"type\": \"enim laborum\",\n        \"properties\": {\n         \"name\": \"culpa\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ea fugiat\",\n     \"crs\": {\n      \"type\": \"cillum tempor\",\n      \"properties\": {\n       \"name\": \"in fugiat\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"eiusmod\"\n     },\n     {\n      \"message\": \"aliquip commodo of\"\n     }\n    ],\n    \"authorityId\": \"ut dolore in\",\n    \"zoneType\": 3,\n    \"entityType\": 1,\n    \"entityId\": \"ex Duis aliqua labore\",\n    \"name\": \"ut id eiusmod veniam\",\n    \"eTag\": \"qui cillum nostrud non\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"do \",\n       \"crs\": {\n        \"type\": \"proident irure\",\n        \"properties\": {\n         \"name\": \"velit\"\n        }\n       }\n      },\n      {\n       \"type\": \"consequat exercitation amet elit\",\n       \"crs\": {\n        \"type\": \"quis\",\n        \"properties\": {\n         \"name\": \"sunt\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ex\",\n     \"crs\": {\n      \"type\": \"Duis id Excepteur\",\n      \"properties\": {\n       \"name\": \"in\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"deserunt cupidatat ex\"\n     },\n     {\n      \"message\": \"aute Lorem\"\n     }\n    ],\n    \"authorityId\": \"ipsum veniam\",\n    \"zoneType\": 1,\n    \"entityType\": 4,\n    \"entityId\": \"sint dolor labore\",\n    \"name\": \"laboris Duis ut\",\n    \"eTag\": \"esse velit\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"ea voluptate r\"\n     },\n     {\n      \"message\": \"ut dolore magna\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"in anim tempor voluptate id\",\n      \"cardPaymentsExternalUrl\": \"minim culpa\",\n      \"paymentsTelephone\": \"adipisicing pariatur sit\"\n     },\n     {\n      \"name\": \"reprehenderit velit adipisicing fugiat\",\n      \"cardPaymentsExternalUrl\": \"officia\",\n      \"paymentsTelephone\": \"sint in\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"dolore nisi\",\n       \"crs\": {\n        \"type\": \"dolore consec\",\n        \"properties\": {\n         \"name\": \"et do aliqua\"\n        }\n       }\n      },\n      {\n       \"type\": \"est\",\n       \"crs\": {\n        \"type\": \"veniam et\",\n        \"properties\": {\n         \"name\": \"adipisicing id Ut culpa\"\n        }\n       }\n      }\n     ],\n     \"type\": \"cupidatat commodo Duis\",\n     \"crs\": {\n      \"type\": \"irure voluptate cupidatat minim\",\n      \"properties\": {\n       \"name\": \"officia mollit elit ut\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"dolore magna sed\",\n    \"name\": \"minim esse\",\n    \"eTag\": \"sit amet officia pariatur\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"pariatur do\"\n     },\n     {\n      \"message\": \"veniam\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"nulla tempor ut Ut reprehenderit\",\n      \"cardPaymentsExternalUrl\": \"voluptate sit veniam cupidatat\",\n      \"paymentsTelephone\": \"enim est elit\"\n     },\n     {\n      \"name\": \"est consectetur\",\n      \"cardPaymentsExternalUrl\": \"sint elit\",\n      \"paymentsTelephone\": \"eu\"\n     }\n    ],\n    \"entityType\": 3,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"eu deserunt Excepteur\",\n       \"crs\": {\n        \"type\": \"lab\",\n        \"properties\": {\n         \"name\": \"labore velit\"\n        }\n       }\n      },\n      {\n       \"type\": \"veniam fugiat exercitation velit\",\n       \"crs\": {\n        \"type\": \"ullamco amet fugiat est sint\",\n        \"properties\": {\n         \"name\": \"adipisicing voluptate ut\"\n        }\n       }\n      }\n     ],\n     \"type\": \"minim\",\n     \"crs\": {\n      \"type\": \"do est Excepteur sed\",\n      \"properties\": {\n       \"name\": \"ex veniam sed\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"ut non eu consectetur\",\n    \"name\": \"dolor Lorem\",\n    \"eTag\": \"reprehenderit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6d013770-0e50-4045-98ec-221dcbc36dfc",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"anim\",\n \"errors\": [\n  {\n   \"property\": \"aliqua laboris sit commodo veniam\",\n   \"code\": \"adipisicing pariatur mollit\",\n   \"message\": \"nulla do dolore\"\n  },\n  {\n   \"property\": \"aute commodo tempor ut\",\n   \"code\": \"anim sed\",\n   \"message\": \"sed irure in r\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "46d65ffd-08e8-417a-aa7c-9ce918b4949d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "252958c0-357f-4024-8740-93f8f3f58bd1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7d5e16c5-de75-4a9d-aeaf-1cefa1c0f698",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "43b18382-dcb3-4560-a35e-50d7c7d195bb",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "600811c7-695d-4d08-a628-4f0a93b34eba",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"Ut eu\",\n   \"city\": \"aliquip nostrud sint\",\n   \"country\": \"nostrud ut ullamco qui\",\n   \"postcode\": \"amet commodo repreh\"\n  },\n  \"locationCode\": \"Ut ipsum proident\",\n  \"totalCapacity\": -77084917,\n  \"zoneId\": \"elit dolor\",\n  \"authorityId\": \"occaecat voluptate elit incididunt\",\n  \"features\": {\n   \"type\": \"culpa\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"eiusmod anim aliqua occaecat\",\n        \"crs\": {\n         \"type\": \"ex\",\n         \"properties\": {\n          \"name\": \"est quis veniam nostrud\"\n         }\n        }\n       },\n       {\n        \"type\": \"ipsum magna\",\n        \"crs\": {\n         \"type\": \"esse adipisicing\",\n         \"properties\": {\n          \"name\": \"fugiat dolor nisi in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"id qui Excepteur aliqua\",\n      \"crs\": {\n       \"type\": \"Lorem dolor sit\",\n       \"properties\": {\n        \"name\": \"est ex pariatur null\"\n       }\n      }\n     },\n     \"type\": \"occaecat\",\n     \"id\": \"sint qui\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"ut consequat veniam reprehenderit\",\n        \"crs\": {\n         \"type\": \"ut sint \",\n         \"properties\": {\n          \"name\": \"irure culpa\"\n         }\n        }\n       },\n       {\n        \"type\": \"aute fugiat dolore quis\",\n        \"crs\": {\n         \"type\": \"est dolor fugiat labore aliqua\",\n         \"properties\": {\n          \"name\": \"in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"velit ut pariatur au\",\n      \"crs\": {\n       \"type\": \"sint Lorem minim\",\n       \"properties\": {\n        \"name\": \"consequat\"\n       }\n      }\n     },\n     \"type\": \"consectetur reprehenderit velit consequat\",\n     \"id\": \"est ea dolor\"\n    }\n   ],\n   \"properties\": \"elit qui\"\n  },\n  \"paymentMethodIds\": [\n   -21837830,\n   19208135\n  ],\n  \"entityId\": \"Ut officia dolor est\",\n  \"entityType\": 1,\n  \"name\": \"dolor veniam enim\",\n  \"eTag\": \"Ut proident\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b28931b1-132d-482d-9825-5c52918f38d0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fa276bf2-9654-4506-83e0-fd1d2147f266",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "eb7429eb-f247-441d-9bb3-78d20f92b57a",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ea incididunt\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1f8d4aa6-202d-4593-b320-b59eb33b1a13",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "be167b01-20d0-4b2b-89f7-2a602ab79055",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "3d2df680-8fe5-4468-8f2f-d387d4320aef",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"nulla dolore incididunt est sint\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": 69948800.6742124,\n    \"currency\": \"aliquip non enim in ad\",\n    \"minCost\": -18969842.237817585,\n    \"minStayUntil\": \"in fugiat\",\n    \"canExtendUntil\": \"sed nisi\",\n    \"pricedUntil\": \"do eu\",\n    \"noReturnUntil\": \"Duis amet ut\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -14790807,\n     -27963662\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"tempor en\",\n    \"surcharge\": {\n     \"value\": -51264612.34123951,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 23440273\n     }\n    }\n   },\n   {\n    \"cost\": -99794034.17312036,\n    \"currency\": \"ea ad commodo\",\n    \"minCost\": -60004498.79554059,\n    \"minStayUntil\": \"deserunt dolor nulla\",\n    \"canExtendUntil\": \"aliquip et pariatur Ut\",\n    \"pricedUntil\": \"minim ad\",\n    \"noReturnUntil\": \"consectetur esse\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     99024290,\n     -33691466\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"cupidatat cillum nulla amet\",\n    \"surcharge\": {\n     \"value\": 92536387.97386125,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -77130312\n     }\n    }\n   }\n  ],\n  \"distance\": 25591736.69865817,\n  \"parkingAllowed\": 2,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -93802772,\n    -39702150\n   ]\n  },\n  \"entityETag\": \"amet dolore qui enim esse\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "61def7ad-339b-4ebd-9afe-b21c16cd770e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cd9664ce-5151-4947-9599-754d477a436a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2993b7a3-273d-4bf8-b91e-55e82cd041c0",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ea incididunt\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7cfc9a28-03a5-4350-9588-d891f61ebc3c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "470d2b67-fe0c-443f-9bc8-d4b91ddfe45a",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "45e7330a-7c85-4347-ba70-51bcfdc0b35f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"ex ipsum laborum\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"amet qui ipsum nulla\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -58811892.37447151,\n      \"currency\": \"amet occaecat consectetur in sint\",\n      \"minCost\": -29819107.98840657,\n      \"minStayUntil\": \"sit ea tempor enim fugiat\",\n      \"canExtendUntil\": \"amet Excepteur ad aliqua\",\n      \"pricedUntil\": \"velit\",\n      \"noReturnUntil\": \"i\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -18505781,\n       -30404649\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Excepteur cillum\",\n      \"surcharge\": {\n       \"value\": 39702059.68738788,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -43411595\n       }\n      }\n     },\n     {\n      \"cost\": 89684324.34756473,\n      \"currency\": \"id\",\n      \"minCost\": -56331277.78486453,\n      \"minStayUntil\": \"do\",\n      \"canExtendUntil\": \"Excepteur est culpa\",\n      \"pricedUntil\": \"et\",\n      \"noReturnUntil\": \"consectetur \",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       58435722,\n       88510403\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"reprehenderit aliquip laboris velit\",\n      \"surcharge\": {\n       \"value\": 50927893.985569835,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -65645044\n       }\n      }\n     }\n    ],\n    \"distance\": -73466243.27667017,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -62639735,\n      4769966\n     ]\n    },\n    \"entityETag\": \"reprehenderit magna\"\n   },\n   {\n    \"entityId\": \"et\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 72775264.67906442,\n      \"currency\": \"veniam cillum ut ea\",\n      \"minCost\": 78435458.63197291,\n      \"minStayUntil\": \"eiusmod amet commodo aliquip aute\",\n      \"canExtendUntil\": \"sit ea e\",\n      \"pricedUntil\": \"nostrud\",\n      \"noReturnUntil\": \"eu do aute enim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -94739505,\n       -18709747\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis culpa c\",\n      \"surcharge\": {\n       \"value\": 59820477.931603074,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -20381366\n       }\n      }\n     },\n     {\n      \"cost\": 48505227.14543706,\n      \"currency\": \"sint pariatur\",\n      \"minCost\": -61772043.447308265,\n      \"minStayUntil\": \"Ut anim fugiat\",\n      \"canExtendUntil\": \"nulla dolor magna tempor\",\n      \"pricedUntil\": \"Duis fugiat reprehenderit\",\n      \"noReturnUntil\": \"m\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -42659562,\n       -73542862\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"culpa id\",\n      \"surcharge\": {\n       \"value\": 17864875.258432895,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -83877154\n       }\n      }\n     }\n    ],\n    \"distance\": -41670124.983888134,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      59798502,\n      17181474\n     ]\n    },\n    \"entityETag\": \"mollit in sed\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b74cdb26-1d79-4efc-a3c2-a78764e31e83",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9396ebd6-d8e1-4e33-8e31-3117cfe57005",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7fc4dc05-d9ea-42d4-b1db-df229d635340",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "89244177-cd89-4fad-8d5f-ad9385de9394",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "b157b6dd-6361-46cd-b839-e64db4d5c712",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"commodo esse\",\n    \"cardPaymentsExternalUrl\": \"velit\",\n    \"paymentsTelephone\": \"cillum dolor\"\n   },\n   {\n    \"name\": \"sint ex eiusmod consequat\",\n    \"cardPaymentsExternalUrl\": \"cupidatat \",\n    \"paymentsTelephone\": \"Ut cillum pariatur\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "de511b71-925b-4871-ae50-4ed27a8df319",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "05f35137-f0a3-4e1e-9c0f-9748f4c0acaa",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cc26f761-94c7-4b58-8376-2ec4f26433fe",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ea incididunt\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bacdbc47-d886-48da-9db3-b3c15c0bb4f0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "51c137dc-9612-4cd1-b825-07b236f75e78",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "64f5c00a-60a6-459f-b63e-443ad4474588",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"ex\",\n     \"crs\": {\n      \"type\": \"et aute laborum amet mollit\",\n      \"properties\": {\n       \"name\": \"laboris\"\n      }\n     }\n    },\n    {\n     \"type\": \"ipsum ex proident\",\n     \"crs\": {\n      \"type\": \"Duis adipisicing nostrud\",\n      \"properties\": {\n       \"name\": \"et\"\n      }\n     }\n    }\n   ],\n   \"type\": \"culpa exercitation\",\n   \"crs\": {\n    \"type\": \"laboris tempor\",\n    \"properties\": {\n     \"name\": \"cupidatat sed Excepteur\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"proident velit aute ad\"\n   },\n   {\n    \"message\": \"aute ut deserunt proident nostrud\"\n   }\n  ],\n  \"authorityId\": \"Excepteur enim aute Lorem adipisicing\",\n  \"zoneType\": 4,\n  \"entityType\": 3,\n  \"entityId\": \"dolor\",\n  \"name\": \"laborum veni\",\n  \"eTag\": \"irure aliquip sint velit non\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "efb12710-baa6-46dc-b480-43c1bf7d6003",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7b6f4ea7-b22a-4e0c-8e29-2a753e6e0972",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c145c541-4511-4af4-989f-d797904d11c1",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"eiusmod ea incididunt\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b37638a-c582-4e10-ae1c-b8c7c5607090",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "23628002-abf6-4ce6-a837-91c15b813093",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur aliqua\",\n            \"properties\": {\n                \"name\": \"aute dolore minim\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b8aa409b-43d6-40fd-8f44-5dc67e3f327d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fug\",\n            \"properties\": {\n                \"name\": \"aute incididunt aliqua\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"consectetur reprehenderit\",\n    \"entityETag\": \"tempor irure magna reprehenderit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -48902754,\n      \"specialRestrictionTypeId\": 16579400,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"deserunt ipsum\",\n        \"endTime\": \"veniam mollit eiusmod\",\n        \"maxStay\": 73791256\n       },\n       {\n        \"startTime\": \"ad Ut deserunt\",\n        \"endTime\": \"ullamco eiusmod est id\",\n        \"maxStay\": 42421206\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -41688622,\n      \"specialRestrictionTypeId\": -90097326,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non sunt incididunt\",\n        \"endTime\": \"pariatur dolor cillum dolore\",\n        \"maxStay\": -33934968\n       },\n       {\n        \"startTime\": \"laboris ad officia\",\n        \"endTime\": \"velit\",\n        \"maxStay\": -68231983\n       }\n      ]\n     }\n    ],\n    \"distance\": 35497724.80731952\n   },\n   {\n    \"entityId\": \"in magna\",\n    \"entityETag\": \"dolore\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -83126447,\n      \"specialRestrictionTypeId\": -25256661,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"mollit Lorem ea\",\n        \"endTime\": \"ullamco\",\n        \"maxStay\": -38459640\n       },\n       {\n        \"startTime\": \"consectetur dolor\",\n        \"endTime\": \"laboris laborum et esse\",\n        \"maxStay\": 29494727\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -98186537,\n      \"specialRestrictionTypeId\": 65071879,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed amet quis occaecat\",\n        \"endTime\": \"laboris dolore amet culpa\",\n        \"maxStay\": 56099517\n       },\n       {\n        \"startTime\": \"magna deserunt sint id dolor\",\n        \"endTime\": \"culpa et ut veniam pariatur\",\n        \"maxStay\": -87203944\n       }\n      ]\n     }\n    ],\n    \"distance\": -34245210.200679034\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"sit in\",\n   \"entityETag\": \"voluptate\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -69084782,\n     \"specialRestrictionTypeId\": 60484361,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"velit sint eu labore\",\n       \"endTime\": \"laboris esse magna mol\",\n       \"maxStay\": 32321342\n      },\n      {\n       \"startTime\": \"sed\",\n       \"endTime\": \"magna proident ex consectetur\",\n       \"maxStay\": 67490448\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 10072790,\n     \"specialRestrictionTypeId\": 22256172,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"proident dolore elit\",\n       \"endTime\": \"anim in\",\n       \"maxStay\": -45020110\n      },\n      {\n       \"startTime\": \"deserunt reprehenderit\",\n       \"endTime\": \"incididunt eu reprehenderit\",\n       \"maxStay\": 69292746\n      }\n     ]\n    }\n   ],\n   \"distance\": 56707488.83673102\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "54432655-6a8d-48b6-a083-7e350f15032e",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fug\",\n            \"properties\": {\n                \"name\": \"aute incididunt aliqua\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "82afc37a-a114-4719-bd11-194017b4d671",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fug\",\n            \"properties\": {\n                \"name\": \"aute incididunt aliqua\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "87f612a8-dd91-4f57-ba41-d8f23a2b2798",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fug\",\n            \"properties\": {\n                \"name\": \"aute incididunt aliqua\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0ace43ab-6532-41bb-9a27-89910136e4e1",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fug\",\n            \"properties\": {\n                \"name\": \"aute incididunt aliqua\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d3124a1f-a5f0-4738-8bbe-ff66bf1243d4",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "e412acc0-2ec1-4c79-bb49-574ef82a96a3",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ullamco aute amet ea\",\n      \"city\": \"deserunt eu enim nostrud\",\n      \"country\": \"mollit\",\n      \"postcode\": \"Ut lab\"\n     },\n     \"locationCode\": \"magna in\",\n     \"totalCapacity\": -45446296,\n     \"zoneId\": \"est Lorem ex occaecat\",\n     \"authorityId\": \"voluptate do cupid\",\n     \"features\": {\n      \"type\": \"sit anim sed aliqua\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed\",\n           \"crs\": {\n            \"type\": \"dolore ad eiusmod\",\n            \"properties\": {\n             \"name\": \"est ut deserunt magna fugiat\"\n            }\n           }\n          },\n          {\n           \"type\": \"volupta\",\n           \"crs\": {\n            \"type\": \"et esse sed\",\n            \"properties\": {\n             \"name\": \"dolor Excepteur amet\"\n            }\n           }\n          }\n         ],\n         \"type\": \"esse reprehenderit nostrud fugiat nulla\",\n         \"crs\": {\n          \"type\": \"reprehenderit\",\n          \"properties\": {\n           \"name\": \"quis velit ad eiusmod\"\n          }\n         }\n        },\n        \"type\": \"commodo dolor occaecat pariatur\",\n        \"id\": \"reprehenderit cillum\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex\",\n           \"crs\": {\n            \"type\": \"eu magna\",\n            \"properties\": {\n             \"name\": \"te\"\n            }\n           }\n          },\n          {\n           \"type\": \"Except\",\n           \"crs\": {\n            \"type\": \"Ut elit aute\",\n            \"properties\": {\n             \"name\": \"irure\"\n            }\n           }\n          }\n         ],\n         \"type\": \"labore ex dolor adipisicing\",\n         \"crs\": {\n          \"type\": \"pariatur proident\",\n          \"properties\": {\n           \"name\": \"id sint nostrud elit\"\n          }\n         }\n        },\n        \"type\": \"ea pariatur minim anim quis\",\n        \"id\": \"ullamco dolor officia cupidatat\"\n       }\n      ],\n      \"properties\": \"consequat sunt Ut irure tempor\"\n     },\n     \"paymentMethodIds\": [\n      94384892,\n      99739179\n     ],\n     \"entityId\": \"sint dolore reprehenderit\",\n     \"entityType\": 4,\n     \"name\": \"dolor sint\",\n     \"eTag\": \"dolor in\"\n    },\n    \"distance\": 41972072.505672425\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"quis et ullamco\",\n      \"city\": \"magna \",\n      \"country\": \"sit elit deserunt Excepteur occaecat\",\n      \"postcode\": \"ame\"\n     },\n     \"locationCode\": \"voluptate\",\n     \"totalCapacity\": 42265999,\n     \"zoneId\": \"consequat\",\n     \"authorityId\": \"dolore\",\n     \"features\": {\n      \"type\": \"Ut aute\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"velit min\",\n           \"crs\": {\n            \"type\": \"commodo mollit\",\n            \"properties\": {\n             \"name\": \"reprehenderit amet\"\n            }\n           }\n          },\n          {\n           \"type\": \"in aliqua dolore laboris\",\n           \"crs\": {\n            \"type\": \"ut\",\n            \"properties\": {\n             \"name\": \"aliqua irure Excepteur pariatur sed\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod velit voluptate mollit\",\n         \"crs\": {\n          \"type\": \"et mollit eu\",\n          \"properties\": {\n           \"name\": \"vo\"\n          }\n         }\n        },\n        \"type\": \"do velit est consequat\",\n        \"id\": \"et irure laborum esse\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt adipisicing Excepteur dolor\",\n           \"crs\": {\n            \"type\": \"nostrud ut ut dolore\",\n            \"properties\": {\n             \"name\": \"dolore velit\"\n            }\n           }\n          },\n          {\n           \"type\": \"cons\",\n           \"crs\": {\n            \"type\": \"magna irure\",\n            \"properties\": {\n             \"name\": \"ex\"\n            }\n           }\n          }\n         ],\n         \"type\": \"adipisicing enim culpa in\",\n         \"crs\": {\n          \"type\": \"amet\",\n          \"properties\": {\n           \"name\": \"laboris labore eiusmod\"\n          }\n         }\n        },\n        \"type\": \"enim adipisicing pariatur\",\n        \"id\": \"Ut nulla\"\n       }\n      ],\n      \"properties\": \"amet aute sint ullamco\"\n     },\n     \"paymentMethodIds\": [\n      -3548102,\n      33515127\n     ],\n     \"entityId\": \"incididunt Ut\",\n     \"entityType\": 3,\n     \"name\": \"labore elit fugiat\",\n     \"eTag\": \"in veniam dolore\"\n    },\n    \"distance\": 52494794.555389345\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bed00538-761b-4354-b56c-1a23dd747d7c",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a906f5d0-2b64-4808-b62b-be2bb2e10256",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "50494ef2-4618-457d-8ccd-b2dbe84e4a4f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ededa037-3d80-4606-9d63-f05869210269",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "eae91885-2468-467a-a19c-ae8c48637c18",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sint volupta\",\n            \"properties\": {\n                \"name\": \"irure reprehenderit eiusmod\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "d2348b1e-5783-4de6-9276-6849fc000206",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex Duis consequat ut\",\n            \"properties\": {\n                \"name\": \"amet deserunt laboris officia non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ullamco aute amet ea\",\n      \"city\": \"deserunt eu enim nostrud\",\n      \"country\": \"mollit\",\n      \"postcode\": \"Ut lab\"\n     },\n     \"locationCode\": \"magna in\",\n     \"totalCapacity\": -45446296,\n     \"zoneId\": \"est Lorem ex occaecat\",\n     \"authorityId\": \"voluptate do cupid\",\n     \"features\": {\n      \"type\": \"sit anim sed aliqua\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed\",\n           \"crs\": {\n            \"type\": \"dolore ad eiusmod\",\n            \"properties\": {\n             \"name\": \"est ut deserunt magna fugiat\"\n            }\n           }\n          },\n          {\n           \"type\": \"volupta\",\n           \"crs\": {\n            \"type\": \"et esse sed\",\n            \"properties\": {\n             \"name\": \"dolor Excepteur amet\"\n            }\n           }\n          }\n         ],\n         \"type\": \"esse reprehenderit nostrud fugiat nulla\",\n         \"crs\": {\n          \"type\": \"reprehenderit\",\n          \"properties\": {\n           \"name\": \"quis velit ad eiusmod\"\n          }\n         }\n        },\n        \"type\": \"commodo dolor occaecat pariatur\",\n        \"id\": \"reprehenderit cillum\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex\",\n           \"crs\": {\n            \"type\": \"eu magna\",\n            \"properties\": {\n             \"name\": \"te\"\n            }\n           }\n          },\n          {\n           \"type\": \"Except\",\n           \"crs\": {\n            \"type\": \"Ut elit aute\",\n            \"properties\": {\n             \"name\": \"irure\"\n            }\n           }\n          }\n         ],\n         \"type\": \"labore ex dolor adipisicing\",\n         \"crs\": {\n          \"type\": \"pariatur proident\",\n          \"properties\": {\n           \"name\": \"id sint nostrud elit\"\n          }\n         }\n        },\n        \"type\": \"ea pariatur minim anim quis\",\n        \"id\": \"ullamco dolor officia cupidatat\"\n       }\n      ],\n      \"properties\": \"consequat sunt Ut irure tempor\"\n     },\n     \"paymentMethodIds\": [\n      94384892,\n      99739179\n     ],\n     \"entityId\": \"sint dolore reprehenderit\",\n     \"entityType\": 4,\n     \"name\": \"dolor sint\",\n     \"eTag\": \"dolor in\"\n    },\n    \"distance\": 41972072.505672425\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"quis et ullamco\",\n      \"city\": \"magna \",\n      \"country\": \"sit elit deserunt Excepteur occaecat\",\n      \"postcode\": \"ame\"\n     },\n     \"locationCode\": \"voluptate\",\n     \"totalCapacity\": 42265999,\n     \"zoneId\": \"consequat\",\n     \"authorityId\": \"dolore\",\n     \"features\": {\n      \"type\": \"Ut aute\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"velit min\",\n           \"crs\": {\n            \"type\": \"commodo mollit\",\n            \"properties\": {\n             \"name\": \"reprehenderit amet\"\n            }\n           }\n          },\n          {\n           \"type\": \"in aliqua dolore laboris\",\n           \"crs\": {\n            \"type\": \"ut\",\n            \"properties\": {\n             \"name\": \"aliqua irure Excepteur pariatur sed\"\n            }\n           }\n          }\n         ],\n         \"type\": \"eiusmod velit voluptate mollit\",\n         \"crs\": {\n          \"type\": \"et mollit eu\",\n          \"properties\": {\n           \"name\": \"vo\"\n          }\n         }\n        },\n        \"type\": \"do velit est consequat\",\n        \"id\": \"et irure laborum esse\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt adipisicing Excepteur dolor\",\n           \"crs\": {\n            \"type\": \"nostrud ut ut dolore\",\n            \"properties\": {\n             \"name\": \"dolore velit\"\n            }\n           }\n          },\n          {\n           \"type\": \"cons\",\n           \"crs\": {\n            \"type\": \"magna irure\",\n            \"properties\": {\n             \"name\": \"ex\"\n            }\n           }\n          }\n         ],\n         \"type\": \"adipisicing enim culpa in\",\n         \"crs\": {\n          \"type\": \"amet\",\n          \"properties\": {\n           \"name\": \"laboris labore eiusmod\"\n          }\n         }\n        },\n        \"type\": \"enim adipisicing pariatur\",\n        \"id\": \"Ut nulla\"\n       }\n      ],\n      \"properties\": \"amet aute sint ullamco\"\n     },\n     \"paymentMethodIds\": [\n      -3548102,\n      33515127\n     ],\n     \"entityId\": \"incididunt Ut\",\n     \"entityType\": 3,\n     \"name\": \"labore elit fugiat\",\n     \"eTag\": \"in veniam dolore\"\n    },\n    \"distance\": 52494794.555389345\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "146790dc-ac81-4668-aacb-4135ed3ddc32",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex Duis consequat ut\",\n            \"properties\": {\n                \"name\": \"amet deserunt laboris officia non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3cefb018-456a-4b62-b5e6-1692695002da",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex Duis consequat ut\",\n            \"properties\": {\n                \"name\": \"amet deserunt laboris officia non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "140ac5cb-a955-45ae-bc1c-2203323395a4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex Duis consequat ut\",\n            \"properties\": {\n                \"name\": \"amet deserunt laboris officia non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fc16aadb-6bdf-4040-b67f-3437af96c462",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex Duis consequat ut\",\n            \"properties\": {\n                \"name\": \"amet deserunt laboris officia non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6e7b6e80-d789-4879-b4e3-4cb46bc1e4ca",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "37c93b5d-c391-4eaf-886d-faf833d0df9b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"eiusmod voluptate consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ex non reprehenderit\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 33802402.16090514,\n      \"currency\": \"laborum eiusmod commodo do\",\n      \"minCost\": -16482272.004762158,\n      \"minStayUntil\": \"incididunt aliqua quis reprehenderit\",\n      \"canExtendUntil\": \"non magna Lorem\",\n      \"pricedUntil\": \"cillum veniam adipisicing\",\n      \"noReturnUntil\": \"sit et\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -1774673,\n       -84011213\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint\",\n      \"surcharge\": {\n       \"value\": 91192343.92562264,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -6700194\n       }\n      }\n     },\n     {\n      \"cost\": 11400490.3197328,\n      \"currency\": \"ipsum amet\",\n      \"minCost\": -25878618.229687825,\n      \"minStayUntil\": \"anim amet nostrud\",\n      \"canExtendUntil\": \"do culpa laboris\",\n      \"pricedUntil\": \"sint in sed\",\n      \"noReturnUntil\": \"enim velit sed\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       25282126,\n       -90477252\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"labore\",\n      \"surcharge\": {\n       \"value\": -73525324.18689348,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 44846224\n       }\n      }\n     }\n    ],\n    \"distance\": -14381786.11722809,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -5424059,\n      64723915\n     ]\n    },\n    \"entityETag\": \"do sit nisi officia anim\"\n   },\n   {\n    \"entityId\": \"nisi veniam velit tempor\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -72769107.92845279,\n      \"currency\": \"ipsum\",\n      \"minCost\": -77078866.40341291,\n      \"minStayUntil\": \"consectetur culpa\",\n      \"canExtendUntil\": \"ullamco culpa \",\n      \"pricedUntil\": \"dolore\",\n      \"noReturnUntil\": \"in Excepteur tempor eu\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -69337482,\n       -37126533\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nulla\",\n      \"surcharge\": {\n       \"value\": 58931279.532539904,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 93348814\n       }\n      }\n     },\n     {\n      \"cost\": 30142063.665417045,\n      \"currency\": \"sed ea occaecat ut\",\n      \"minCost\": -65559949.257989295,\n      \"minStayUntil\": \"tempor\",\n      \"canExtendUntil\": \"nulla id dolore\",\n      \"pricedUntil\": \"occaecat voluptate\",\n      \"noReturnUntil\": \"in est eiusmod fugiat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -13822203,\n       40981135\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis in\",\n      \"surcharge\": {\n       \"value\": 53439313.08484331,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -39032594\n       }\n      }\n     }\n    ],\n    \"distance\": 9061996.12703085,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      99722380,\n      -23671394\n     ]\n    },\n    \"entityETag\": \"incididunt consequat esse cillum in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d39a013c-6f05-4447-9b8f-bafc6325e200",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3bbd94b2-8f83-402b-b925-ca387062f964",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5a4cc177-164d-4c9e-9547-ed6df8f97111",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b7b44edc-703e-443a-aa60-ca65296eb6a0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f51335cb-cd51-4a0f-a40c-9e7530dc3d50",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui Ut laborum\",\n            \"properties\": {\n                \"name\": \"dolore eu amet\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1d1cf99c-b10d-4905-ae30-5f46f2d80d96",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum anim qui aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"eiusmod voluptate consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ex non reprehenderit\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 33802402.16090514,\n      \"currency\": \"laborum eiusmod commodo do\",\n      \"minCost\": -16482272.004762158,\n      \"minStayUntil\": \"incididunt aliqua quis reprehenderit\",\n      \"canExtendUntil\": \"non magna Lorem\",\n      \"pricedUntil\": \"cillum veniam adipisicing\",\n      \"noReturnUntil\": \"sit et\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -1774673,\n       -84011213\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint\",\n      \"surcharge\": {\n       \"value\": 91192343.92562264,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -6700194\n       }\n      }\n     },\n     {\n      \"cost\": 11400490.3197328,\n      \"currency\": \"ipsum amet\",\n      \"minCost\": -25878618.229687825,\n      \"minStayUntil\": \"anim amet nostrud\",\n      \"canExtendUntil\": \"do culpa laboris\",\n      \"pricedUntil\": \"sint in sed\",\n      \"noReturnUntil\": \"enim velit sed\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       25282126,\n       -90477252\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"labore\",\n      \"surcharge\": {\n       \"value\": -73525324.18689348,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 44846224\n       }\n      }\n     }\n    ],\n    \"distance\": -14381786.11722809,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -5424059,\n      64723915\n     ]\n    },\n    \"entityETag\": \"do sit nisi officia anim\"\n   },\n   {\n    \"entityId\": \"nisi veniam velit tempor\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -72769107.92845279,\n      \"currency\": \"ipsum\",\n      \"minCost\": -77078866.40341291,\n      \"minStayUntil\": \"consectetur culpa\",\n      \"canExtendUntil\": \"ullamco culpa \",\n      \"pricedUntil\": \"dolore\",\n      \"noReturnUntil\": \"in Excepteur tempor eu\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -69337482,\n       -37126533\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nulla\",\n      \"surcharge\": {\n       \"value\": 58931279.532539904,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 93348814\n       }\n      }\n     },\n     {\n      \"cost\": 30142063.665417045,\n      \"currency\": \"sed ea occaecat ut\",\n      \"minCost\": -65559949.257989295,\n      \"minStayUntil\": \"tempor\",\n      \"canExtendUntil\": \"nulla id dolore\",\n      \"pricedUntil\": \"occaecat voluptate\",\n      \"noReturnUntil\": \"in est eiusmod fugiat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -13822203,\n       40981135\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis in\",\n      \"surcharge\": {\n       \"value\": 53439313.08484331,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -39032594\n       }\n      }\n     }\n    ],\n    \"distance\": 9061996.12703085,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      99722380,\n      -23671394\n     ]\n    },\n    \"entityETag\": \"incididunt consequat esse cillum in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4466a9e3-b7f6-4c27-83eb-fef4b5105143",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum anim qui aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "42c2e6e6-783a-4fd0-85fa-36a2d98876bc",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum anim qui aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "47dd8415-d3e0-4cdd-8b8c-5e35be6cc7c1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum anim qui aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1085a2b0-29d1-459f-925c-11aa9f2b1345",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laborum anim qui aliqua\",\n            \"properties\": {\n                \"name\": \"incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "53bcd8c2-9044-4d1e-95e9-29b6c9f45c6d",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sunt Ut\",\n            \"properties\": {\n                \"name\": \"officia labore consequat esse\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "139aad38-2b3a-4f44-b165-a1b13a252f2a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum aute velit\",\n            \"properties\": {\n                \"name\": \"proident consequat elit Duis\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"pariatur ut adipisicing incidi\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"dolore deserunt eu\",\n     \"crs\": {\n      \"type\": \"est\",\n      \"properties\": {\n       \"name\": \"nisi voluptate eiusmod cupidatat dolor\"\n      }\n     }\n    },\n    \"type\": \"elit quis u\",\n    \"id\": \"tempor ex consectetur cupidatat minim\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"Duis commodo\",\n     \"crs\": {\n      \"type\": \"nulla et ex ipsum elit\",\n      \"properties\": {\n       \"name\": \"pariatur dolore dolor irure id\"\n      }\n     }\n    },\n    \"type\": \"fugiat enim Duis qui\",\n    \"id\": \"in d\"\n   }\n  ],\n  \"properties\": \"incididunt sed sit ex\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3febeb7a-aedd-43d0-8dcc-a14f36a0370b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum aute velit\",\n            \"properties\": {\n                \"name\": \"proident consequat elit Duis\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9e2bb776-e1d5-4ff1-b650-0dd96f05f989",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum aute velit\",\n            \"properties\": {\n                \"name\": \"proident consequat elit Duis\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4c4682fa-adf6-46e2-8af6-f61352917eff",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum aute velit\",\n            \"properties\": {\n                \"name\": \"proident consequat elit Duis\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "49d75de3-560e-422e-9e4e-28d4bcbf2477",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore cillum aute velit\",\n            \"properties\": {\n                \"name\": \"proident consequat elit Duis\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "332f8dd5-f64a-437d-98da-c179459cc053",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id incididunt consequat\",\n            \"properties\": {\n                \"name\": \"es\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "328d057c-c344-480f-9a11-b9d24f6a8656",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"voluptate esse consequat ut\",\n            \"properties\": {\n                \"name\": \"velit ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"consectetur reprehenderit\",\n    \"entityETag\": \"tempor irure magna reprehenderit\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -48902754,\n      \"specialRestrictionTypeId\": 16579400,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"deserunt ipsum\",\n        \"endTime\": \"veniam mollit eiusmod\",\n        \"maxStay\": 73791256\n       },\n       {\n        \"startTime\": \"ad Ut deserunt\",\n        \"endTime\": \"ullamco eiusmod est id\",\n        \"maxStay\": 42421206\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -41688622,\n      \"specialRestrictionTypeId\": -90097326,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non sunt incididunt\",\n        \"endTime\": \"pariatur dolor cillum dolore\",\n        \"maxStay\": -33934968\n       },\n       {\n        \"startTime\": \"laboris ad officia\",\n        \"endTime\": \"velit\",\n        \"maxStay\": -68231983\n       }\n      ]\n     }\n    ],\n    \"distance\": 35497724.80731952\n   },\n   {\n    \"entityId\": \"in magna\",\n    \"entityETag\": \"dolore\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -83126447,\n      \"specialRestrictionTypeId\": -25256661,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"mollit Lorem ea\",\n        \"endTime\": \"ullamco\",\n        \"maxStay\": -38459640\n       },\n       {\n        \"startTime\": \"consectetur dolor\",\n        \"endTime\": \"laboris laborum et esse\",\n        \"maxStay\": 29494727\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -98186537,\n      \"specialRestrictionTypeId\": 65071879,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed amet quis occaecat\",\n        \"endTime\": \"laboris dolore amet culpa\",\n        \"maxStay\": 56099517\n       },\n       {\n        \"startTime\": \"magna deserunt sint id dolor\",\n        \"endTime\": \"culpa et ut veniam pariatur\",\n        \"maxStay\": -87203944\n       }\n      ]\n     }\n    ],\n    \"distance\": -34245210.200679034\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"sit in\",\n   \"entityETag\": \"voluptate\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": -69084782,\n     \"specialRestrictionTypeId\": 60484361,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"velit sint eu labore\",\n       \"endTime\": \"laboris esse magna mol\",\n       \"maxStay\": 32321342\n      },\n      {\n       \"startTime\": \"sed\",\n       \"endTime\": \"magna proident ex consectetur\",\n       \"maxStay\": 67490448\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 10072790,\n     \"specialRestrictionTypeId\": 22256172,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"proident dolore elit\",\n       \"endTime\": \"anim in\",\n       \"maxStay\": -45020110\n      },\n      {\n       \"startTime\": \"deserunt reprehenderit\",\n       \"endTime\": \"incididunt eu reprehenderit\",\n       \"maxStay\": 69292746\n      }\n     ]\n    }\n   ],\n   \"distance\": 56707488.83673102\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8db24ff7-f95c-4739-b149-9434706d8ed9",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"voluptate esse consequat ut\",\n            \"properties\": {\n                \"name\": \"velit ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut veniam ut voluptate\",\n \"errors\": [\n  {\n   \"property\": \"ut veniam quis elit Excepteur\",\n   \"code\": \"consequat fugiat\",\n   \"message\": \"culpa eu\"\n  },\n  {\n   \"property\": \"Duis\",\n   \"code\": \"ut Duis pariatur\",\n   \"message\": \"aute Duis ullamco\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cec86f55-cbc5-4a43-ae48-281bbfc10a33",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"voluptate esse consequat ut\",\n            \"properties\": {\n                \"name\": \"velit ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d1232f25-0afb-4dad-8449-39eec5e2aeae",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"voluptate esse consequat ut\",\n            \"properties\": {\n                \"name\": \"velit ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8d6df311-fe2a-48b0-9413-044330fd3438",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"voluptate esse consequat ut\",\n            \"properties\": {\n                \"name\": \"velit ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "199ac63b-1f7a-4a71-a9d5-3ac88cd25fb7",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "c82736dc-0f3b-4fe6-991b-a6ee59776981",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7b80a183-2420-4580-bdf1-e51eac822bb5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e8acaa86-1a76-4166-bd1e-24ae0a73260d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4fa2364d-f829-49fd-9a31-a60093d2e17e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "97e42629-8dbf-45d6-af1d-0dab414275d9",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
