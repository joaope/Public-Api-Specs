{
  "item": [
    {
      "id": "09879601-28d3-4441-b6ed-e2942c9c45c3",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "723f33a7-a811-41b6-a552-e0570302e3c0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"incididunt elit\"\n   },\n   {\n    \"message\": \"sun\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"pariatur ad deserunt\",\n    \"cardPaymentsExternalUrl\": \"dolor magna et minim\",\n    \"paymentsTelephone\": \"laborum nisi est\"\n   },\n   {\n    \"name\": \"qui enim mollit sint sunt\",\n    \"cardPaymentsExternalUrl\": \"id pariatur cillum anim ut\",\n    \"paymentsTelephone\": \"cupidatat ut nisi mollit\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"culpa cupidatat\",\n     \"crs\": {\n      \"type\": \"minim anim proident amet\",\n      \"properties\": {\n       \"name\": \"dolore Excepteur Duis\"\n      }\n     }\n    },\n    {\n     \"type\": \"quis\",\n     \"crs\": {\n      \"type\": \"deserunt tempor ad Excepteur\",\n      \"properties\": {\n       \"name\": \"ut nisi\"\n      }\n     }\n    }\n   ],\n   \"type\": \"enim in magna et mollit\",\n   \"crs\": {\n    \"type\": \"Duis in magna exercitation mollit\",\n    \"properties\": {\n     \"name\": \"ut mollit laboris cupidatat enim\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"commodo ullamco fugiat proident\",\n  \"name\": \"pariatur\",\n  \"eTag\": \"Ut anim exercitation\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b61a81c-00b6-4e3e-9cbd-e91d2b831994",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6d4767c2-6544-407e-bca8-d620404daea7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "860d531c-af80-49fd-871b-9bd8ed2e5c44",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8a3d7cb7-a00b-4a30-8ccd-d319265ad571",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c0d3c483-1331-49d6-a988-b75ec5f7fc6f",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "67f5c935-bdb5-4c6c-8d84-ede01b312e99",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"nostrud ullamco tempor i\",\n     \"city\": \"elit incididunt\",\n     \"country\": \"aliquip in Duis ipsum\",\n     \"postcode\": \"Duis\"\n    },\n    \"locationCode\": \"id laborum exercitation ex Duis\",\n    \"totalCapacity\": 32908844,\n    \"zoneId\": \"officia incididunt consequat ut\",\n    \"authorityId\": \"nulla Lorem nisi\",\n    \"features\": {\n     \"type\": \"ex irure\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"nulla dolore Duis aliqua mollit\",\n          \"crs\": {\n           \"type\": \"do ad deserunt reprehenderit\",\n           \"properties\": {\n            \"name\": \"cupidatat dolor in culpa deserunt\"\n           }\n          }\n         },\n         {\n          \"type\": \"aliqua sunt veniam fugiat esse\",\n          \"crs\": {\n           \"type\": \"anim quis minim\",\n           \"properties\": {\n            \"name\": \"reprehenderit Excepteur id\"\n           }\n          }\n         }\n        ],\n        \"type\": \"adipisicing ut officia c\",\n        \"crs\": {\n         \"type\": \"proident Duis\",\n         \"properties\": {\n          \"name\": \"laboris irure ad ex Ut\"\n         }\n        }\n       },\n       \"type\": \"esse elit veniam\",\n       \"id\": \"ullamco nisi sint\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Ut officia cillum\",\n          \"crs\": {\n           \"type\": \"enim ullamco velit\",\n           \"properties\": {\n            \"name\": \"aliqua in ut magna\"\n           }\n          }\n         },\n         {\n          \"type\": \"elit ut\",\n          \"crs\": {\n           \"type\": \"exercitation sunt\",\n           \"properties\": {\n            \"name\": \"ut ad pariat\"\n           }\n          }\n         }\n        ],\n        \"type\": \"laboris ut\",\n        \"crs\": {\n         \"type\": \"fugiat\",\n         \"properties\": {\n          \"name\": \"incididunt enim reprehenderit sunt\"\n         }\n        }\n       },\n       \"type\": \"in ut veniam proident do\",\n       \"id\": \"in eu\"\n      }\n     ],\n     \"properties\": \"cillum commodo irure\"\n    },\n    \"paymentMethodIds\": [\n     -80082920,\n     -43479747\n    ],\n    \"entityId\": \"Excepteur velit dolor\",\n    \"entityType\": 4,\n    \"name\": \"\",\n    \"eTag\": \"aute tempor nostrud dolor quis\",\n    \"operator\": {\n     \"telephone\": \"aliqua sint amet consectetur nostrud\",\n     \"website\": \"dolor\",\n     \"name\": \"magna in laborum\",\n     \"cardPaymentsExternalUrl\": \"consectetur\",\n     \"paymentsTelephone\": \"quis sit ea non\"\n    },\n    \"onStreetParkingTypeIds\": [\n     10,\n     5\n    ],\n    \"facilityTypeIds\": [\n     -34785503,\n     -11369394\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"ut\",\n     \"city\": \"ut magna\",\n     \"country\": \"nisi in sit eiusmod\",\n     \"postcode\": \"officia in dolor pariatur eu\"\n    },\n    \"locationCode\": \"Duis in anim\",\n    \"totalCapacity\": -75775255,\n    \"zoneId\": \"et sed\",\n    \"authorityId\": \"amet adipisicing\",\n    \"features\": {\n     \"type\": \"officia proident incididunt dolore irure\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"et dolor fugiat mollit\",\n          \"crs\": {\n           \"type\": \"culpa exercitation et laboris nisi\",\n           \"properties\": {\n            \"name\": \"ad elit ut\"\n           }\n          }\n         },\n         {\n          \"type\": \"nulla voluptate\",\n          \"crs\": {\n           \"type\": \"amet\",\n           \"properties\": {\n            \"name\": \"quis nisi dolore pariat\"\n           }\n          }\n         }\n        ],\n        \"type\": \"non commodo magna\",\n        \"crs\": {\n         \"type\": \"aute culpa in\",\n         \"properties\": {\n          \"name\": \"laboris Ut qui\"\n         }\n        }\n       },\n       \"type\": \"tempor laboris ad\",\n       \"id\": \"tempor sunt nostrud eiusmod\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"eu in et\",\n          \"crs\": {\n           \"type\": \"aliquip ea\",\n           \"properties\": {\n            \"name\": \"proident eiusmod fugiat\"\n           }\n          }\n         },\n         {\n          \"type\": \"dolor eiusmod \",\n          \"crs\": {\n           \"type\": \"magna\",\n           \"properties\": {\n            \"name\": \"do\"\n           }\n          }\n         }\n        ],\n        \"type\": \"Lorem incididunt\",\n        \"crs\": {\n         \"type\": \"Lorem amet et esse\",\n         \"properties\": {\n          \"name\": \"eu deserunt\"\n         }\n        }\n       },\n       \"type\": \"culpa pariatur s\",\n       \"id\": \"mollit in cupidatat\"\n      }\n     ],\n     \"properties\": \"anim eu\"\n    },\n    \"paymentMethodIds\": [\n     -65912632,\n     -44881604\n    ],\n    \"entityId\": \"incididu\",\n    \"entityType\": 4,\n    \"name\": \"cupidatat voluptate eiusmod\",\n    \"eTag\": \"enim aute id\",\n    \"operator\": {\n     \"telephone\": \"velit dolor laborum sint commodo\",\n     \"website\": \"sit nulla\",\n     \"name\": \"cons\",\n     \"cardPaymentsExternalUrl\": \"est ex\",\n     \"paymentsTelephone\": \"amet dolore\"\n    },\n    \"onStreetParkingTypeIds\": [\n     6,\n     8\n    ],\n    \"facilityTypeIds\": [\n     46962286,\n     -61745671\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"anim qui tempor \",\n       \"crs\": {\n        \"type\": \"sunt velit sed Duis\",\n        \"properties\": {\n         \"name\": \"est eiusmod in laboris\"\n        }\n       }\n      },\n      {\n       \"type\": \"aliqua quis magna\",\n       \"crs\": {\n        \"type\": \"reprehenderit dolor consequat nisi\",\n        \"properties\": {\n         \"name\": \"nulla sint irure eu\"\n        }\n       }\n      }\n     ],\n     \"type\": \"in Ut dolor\",\n     \"crs\": {\n      \"type\": \"\",\n      \"properties\": {\n       \"name\": \"dolore dolor id\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"voluptate tempor\"\n     },\n     {\n      \"message\": \"consectetur veniam cupidatat\"\n     }\n    ],\n    \"authorityId\": \"consectetur do Ut\",\n    \"zoneType\": 8,\n    \"entityType\": 1,\n    \"entityId\": \"pariatur anim commodo proident\",\n    \"name\": \"Excepteur amet proident enim\",\n    \"eTag\": \"Excepteur consectetur in ut\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"in commodo consectetur\",\n       \"crs\": {\n        \"type\": \"reprehenderit eu ipsum ut\",\n        \"properties\": {\n         \"name\": \"dolore laborum in ut\"\n        }\n       }\n      },\n      {\n       \"type\": \"pariatur nulla quis ea tempor\",\n       \"crs\": {\n        \"type\": \"qui non esse mollit\",\n        \"properties\": {\n         \"name\": \"velit officia ut incididunt cillum\"\n        }\n       }\n      }\n     ],\n     \"type\": \"dol\",\n     \"crs\": {\n      \"type\": \"id ut aliqua nulla\",\n      \"properties\": {\n       \"name\": \"Duis irure nisi\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"aliqua Ut\"\n     },\n     {\n      \"message\": \"cillum nisi dolore\"\n     }\n    ],\n    \"authorityId\": \"ullamco Ut in\",\n    \"zoneType\": 3,\n    \"entityType\": 1,\n    \"entityId\": \"minim Lorem\",\n    \"name\": \"amet occaecat dolore labore elit\",\n    \"eTag\": \"reprehenderit\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"culpa\"\n     },\n     {\n      \"message\": \"non pariatur sit\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"nostrud voluptate sed dolor tempor\",\n      \"cardPaymentsExternalUrl\": \"do ut eiusmod\",\n      \"paymentsTelephone\": \"sit\"\n     },\n     {\n      \"name\": \"minim est\",\n      \"cardPaymentsExternalUrl\": \"enim ut\",\n      \"paymentsTelephone\": \"do aute dolor\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sed\",\n       \"crs\": {\n        \"type\": \"cupidatat deserunt eu amet\",\n        \"properties\": {\n         \"name\": \"officia ad Lorem\"\n        }\n       }\n      },\n      {\n       \"type\": \"sit ut mollit commodo\",\n       \"crs\": {\n        \"type\": \"officia Lorem voluptate\",\n        \"properties\": {\n         \"name\": \"occaecat ullamco aliqua culpa aute\"\n        }\n       }\n      }\n     ],\n     \"type\": \"adipisicing occaecat dolore\",\n     \"crs\": {\n      \"type\": \"\",\n      \"properties\": {\n       \"name\": \"id eiusmod non veniam\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"proident occaecat veniam nisi\",\n    \"name\": \"Ut\",\n    \"eTag\": \"et dolor est voluptate labore\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"est culpa\"\n     },\n     {\n      \"message\": \"ipsum do reprehenderit est\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"aute aliqua\",\n      \"cardPaymentsExternalUrl\": \"voluptate ullamco cupidatat\",\n      \"paymentsTelephone\": \"cillum\"\n     },\n     {\n      \"name\": \"ut sunt est\",\n      \"cardPaymentsExternalUrl\": \"incididunt\",\n      \"paymentsTelephone\": \"amet\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"proident deserunt enim\",\n       \"crs\": {\n        \"type\": \"ipsum\",\n        \"properties\": {\n         \"name\": \"do\"\n        }\n       }\n      },\n      {\n       \"type\": \"sit\",\n       \"crs\": {\n        \"type\": \"sun\",\n        \"properties\": {\n         \"name\": \"voluptate aute aliquip anim ad\"\n        }\n       }\n      }\n     ],\n     \"type\": \"cillum quis fugiat do deserunt\",\n     \"crs\": {\n      \"type\": \"qui culpa reprehenderit\",\n      \"properties\": {\n       \"name\": \"ullamco pariatur ut\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"cupidatat sed dolor esse\",\n    \"name\": \"consectetur ad dolor Excepteur\",\n    \"eTag\": \"commodo in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4aafe94e-a59d-4562-8b7c-0576aba70965",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua occaecat dolore Ut irure\",\n \"errors\": [\n  {\n   \"property\": \"consequat commodo laborum proident am\",\n   \"code\": \"voluptate Duis nulla\",\n   \"message\": \"fugiat non esse qui\"\n  },\n  {\n   \"property\": \"pariatur in non laboris sint\",\n   \"code\": \"minim sed\",\n   \"message\": \"dolor pariatur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "067f9c40-2499-4eaf-b60e-1951057c7e92",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "406605b7-4353-4358-abbd-6ef7798aa748",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d76fe7e2-2026-4712-b8c6-6e6cb07d2710",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "de172708-64c9-4ed5-b843-d3a103221c3d",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "02b5ff30-65c2-49b0-b4e7-abdb26869765",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"minim\",\n  \"entityType\": 2,\n  \"entityETag\": \"laborum dolor do\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -31921587,\n     28730106\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     24455975,\n     16758415\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2420d2fa-1513-45c6-aa08-12f503003fb2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8d82b93e-82d0-4c17-9910-df7e32e4908e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8b3a1d72-4c67-4c7c-9e03-3b51dc078eb7",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2b76a89f-5841-4905-b567-844fc6c3301f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9393c8d1-43d8-48dd-a7cf-031bc7bb2335",
      "name": "Fetch operating hours by ids",
      "request": {
        "name": "Fetch operating hours by ids",
        "description": {
          "content": "Searches for operating hours with the supplied IDs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "48b89f0a-ed5c-427b-8674-5b21f153030a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"minim\",\n  \"entityType\": 2,\n  \"entityETag\": \"laborum dolor do\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -31921587,\n     28730106\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     24455975,\n     16758415\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"isFree\": false,\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fdf96975-24d9-434d-81c5-642c66b57d74",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "581a1f23-9720-47f9-a960-a51c98fe694d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9e3df0bd-f5b3-4ebb-842d-190cf5dda776",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "095164d9-967c-4343-b9a5-418f6ad36083",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "b63fca08-65a8-4e59-ba53-d6f05c9f9161",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"sed tempor\",\n   \"city\": \"culpa ut consequat\",\n   \"country\": \"reprehenderit occaecat Duis sit\",\n   \"postcode\": \"nisi velit Excepteur incididunt\"\n  },\n  \"locationCode\": \"ipsum voluptate eu\",\n  \"totalCapacity\": -3634008,\n  \"zoneId\": \"ad pariatur in\",\n  \"authorityId\": \"est culpa ad esse\",\n  \"features\": {\n   \"type\": \"ipsum esse nostrud\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"culpa non\",\n        \"crs\": {\n         \"type\": \"eu tempor\",\n         \"properties\": {\n          \"name\": \"commodo tempor consectetur ipsum\"\n         }\n        }\n       },\n       {\n        \"type\": \"cupidatat\",\n        \"crs\": {\n         \"type\": \"reprehenderit\",\n         \"properties\": {\n          \"name\": \"culpa Excepteur enim tempor sint\"\n         }\n        }\n       }\n      ],\n      \"type\": \"reprehenderit commodo nostrud consequat\",\n      \"crs\": {\n       \"type\": \"sint sunt\",\n       \"properties\": {\n        \"name\": \"ullamco\"\n       }\n      }\n     },\n     \"type\": \"sunt voluptate ex\",\n     \"id\": \"reprehenderit Duis ut\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"eiusmod e\",\n        \"crs\": {\n         \"type\": \"ipsum voluptate Excepteur\",\n         \"properties\": {\n          \"name\": \"Exc\"\n         }\n        }\n       },\n       {\n        \"type\": \"in minim do ut\",\n        \"crs\": {\n         \"type\": \"deserunt mollit sint\",\n         \"properties\": {\n          \"name\": \"enim in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"voluptate a\",\n      \"crs\": {\n       \"type\": \"cupidatat officia occaecat\",\n       \"properties\": {\n        \"name\": \"et anim cupidatat\"\n       }\n      }\n     },\n     \"type\": \"fugiat minim ci\",\n     \"id\": \"do incididunt\"\n    }\n   ],\n   \"properties\": \"exercitation Excepteur\"\n  },\n  \"paymentMethodIds\": [\n   31104074,\n   -29602922\n  ],\n  \"entityId\": \"fugiat est occaecat\",\n  \"entityType\": 1,\n  \"name\": \"est tempor ea culpa nisi\",\n  \"eTag\": \"id do aliqua\",\n  \"operator\": {\n   \"telephone\": \"sed incididunt fugiat cillum\",\n   \"website\": \"off\",\n   \"name\": \"dolor\",\n   \"cardPaymentsExternalUrl\": \"aliqua est quis\",\n   \"paymentsTelephone\": \"ullamco adipisicing cupidatat esse dolore\"\n  },\n  \"onStreetParkingTypeIds\": [\n   16,\n   15\n  ],\n  \"facilityTypeIds\": [\n   2051098,\n   -76519289\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3aa02b38-30a4-4872-831b-21af700a28b3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b1b16b44-6a24-423d-8a05-973a97b48ca1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7a947a93-9733-4e9b-b382-fa4444022448",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a2bc2eea-c848-4467-bccd-d753f0b9cd96",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "fe415d7c-b5d1-4b80-9b0a-62360c35eb80",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b64d0c0a-42f2-4ba2-82e0-1656f5620123",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"nisi ullamco dolor Ut ut\",\n  \"entityType\": 1,\n  \"quotes\": [\n   {\n    \"cost\": 54848553.55161345,\n    \"currency\": \"nisi consectetur sint dolore eiusmod\",\n    \"minCost\": 65062151.93294218,\n    \"minStayUntil\": \"nisi reprehenderit\",\n    \"canExtendUntil\": \"exercitation\",\n    \"pricedUntil\": \"deserunt anim cupidatat\",\n    \"noReturnUntil\": \"do laborum Lorem\",\n    \"freeUntil\": \"sin\",\n    \"becomesFreeAt\": \"magna sit sunt\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -44109284,\n     93952477\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"in aute laboris fugiat\",\n    \"surcharge\": {\n     \"value\": -32142775.77859895,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -51754246\n     }\n    }\n   },\n   {\n    \"cost\": 76843564.67691132,\n    \"currency\": \"e\",\n    \"minCost\": -94411099.93923722,\n    \"minStayUntil\": \"reprehenderit dolore dolore\",\n    \"canExtendUntil\": \"laborum sit dolore et\",\n    \"pricedUntil\": \"nisi sunt dolore\",\n    \"noReturnUntil\": \"sunt aliquip ullamco\",\n    \"freeUntil\": \"qui ut\",\n    \"becomesFreeAt\": \"cillum nulla in amet\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -60177845,\n     -40511085\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"aliquip Lorem ad\",\n    \"surcharge\": {\n     \"value\": -46399868.308028184,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 51380422\n     }\n    }\n   }\n  ],\n  \"distance\": 89330692.67996117,\n  \"parkingAllowed\": 3,\n  \"noParkingReason\": {\n   \"reasonType\": 2,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -1937764,\n    23522560\n   ]\n  },\n  \"entityETag\": \"dolor dolor consequat aliquip\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "458f4556-ada0-49ec-9212-9ba257ebcce9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1c7ab2cd-fb7f-4ea8-a7c8-609c9717ea11",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cabbca3b-a993-40d9-bda4-b5241c53eb48",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "39d6cf3e-8696-41d9-9fa1-1f6e622802cf",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "dcad0e02-ad3d-4a9d-8f6a-2adb5d0cf98c",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "496f31e4-7c25-4260-acb8-1f47207911b5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"officia\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"deserunt la\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -57897606.27531266,\n      \"currency\": \"velit\",\n      \"minCost\": -65456247.849618874,\n      \"minStayUntil\": \"aute\",\n      \"canExtendUntil\": \"sit Duis Excepteur occa\",\n      \"pricedUntil\": \"culpa Ut nostrud fugiat\",\n      \"noReturnUntil\": \"veniam magna\",\n      \"freeUntil\": \"irure quis\",\n      \"becomesFreeAt\": \"incididunt do veniam\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       98746140,\n       -47380772\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"anim est ex in laborum\",\n      \"surcharge\": {\n       \"value\": -66945524.5885163,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -31160254\n       }\n      }\n     },\n     {\n      \"cost\": -22359011.437534764,\n      \"currency\": \"adipisicing Excepteur ut sit magna\",\n      \"minCost\": 20208778.886292487,\n      \"minStayUntil\": \"pariatur quis\",\n      \"canExtendUntil\": \"ad fugiat reprehenderit velit\",\n      \"pricedUntil\": \"sit ea officia\",\n      \"noReturnUntil\": \"dolor r\",\n      \"freeUntil\": \"sint exercitation\",\n      \"becomesFreeAt\": \"id sit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -77912683,\n       -45860623\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"quis non minim enim\",\n      \"surcharge\": {\n       \"value\": 35585464.58788064,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 34744171\n       }\n      }\n     }\n    ],\n    \"distance\": -83653253.97885974,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -22489060,\n      -69511588\n     ]\n    },\n    \"entityETag\": \"officia ex Ut ut\"\n   },\n   {\n    \"entityId\": \"occaecat\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -83310698.2012136,\n      \"currency\": \"deserunt nulla elit nisi\",\n      \"minCost\": 87718196.30111545,\n      \"minStayUntil\": \"qui Lorem ea consequat anim\",\n      \"canExtendUntil\": \"enim ex culpa\",\n      \"pricedUntil\": \"dolore non labore\",\n      \"noReturnUntil\": \"c\",\n      \"freeUntil\": \"ea ut eu reprehenderit\",\n      \"becomesFreeAt\": \"ullamco\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       95951297,\n       478729\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia dolor culpa incididunt\",\n      \"surcharge\": {\n       \"value\": 65055468.5666295,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -80594895\n       }\n      }\n     },\n     {\n      \"cost\": -93284241.12041582,\n      \"currency\": \"in ut Duis\",\n      \"minCost\": 86697066.62123543,\n      \"minStayUntil\": \"Lorem sit ex Excepteur\",\n      \"canExtendUntil\": \"nisi sunt sed dolore\",\n      \"pricedUntil\": \"voluptate\",\n      \"noReturnUntil\": \"sit\",\n      \"freeUntil\": \"est sit irure minim\",\n      \"becomesFreeAt\": \"dolore ut ullamco dolore\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       97171317,\n       36518915\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"fugiat \",\n      \"surcharge\": {\n       \"value\": 89655118.91684836,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -91503564\n       }\n      }\n     }\n    ],\n    \"distance\": 19449189.17166038,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -25123776,\n      -69618258\n     ]\n    },\n    \"entityETag\": \"aute dolor cillum commodo nulla\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "304cfff2-cbf2-4d5e-9321-80b09fa43b21",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b88c5db1-9fa3-4d5d-b82a-125407f08a30",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1522258d-5152-4a50-9753-8d321abbec85",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4ebbeeb9-5ca0-4132-b940-9c052569001b",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "36daeed7-2ba3-42cd-b8cb-894f4895fc21",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"anim commodo adipisicing ut \",\n    \"cardPaymentsExternalUrl\": \"voluptate ut anim Lorem\",\n    \"paymentsTelephone\": \"et\"\n   },\n   {\n    \"name\": \"laboris voluptate ullamco commodo\",\n    \"cardPaymentsExternalUrl\": \"par\",\n    \"paymentsTelephone\": \"proident esse dolor est qui\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "460a9b4e-886e-4fb2-a428-4d2bbabd819e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e77f3d6d-6c07-4294-b5d1-4493bb73e104",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "34ec3894-0dad-4ef8-9df0-d8eae5f95571",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e4b69703-98c9-492d-bbba-7f78ecc63884",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8c30fb9b-12bb-4518-9d2f-1030d74c4df4",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "4bc13c65-5469-4176-9fee-ef597b5d849a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"ex ipsum ut magna qui\",\n     \"crs\": {\n      \"type\": \"in aliquip irure id adipisicing\",\n      \"properties\": {\n       \"name\": \"ipsum enim\"\n      }\n     }\n    },\n    {\n     \"type\": \"tempor consequat et Lorem\",\n     \"crs\": {\n      \"type\": \"aliquip\",\n      \"properties\": {\n       \"name\": \"in enim reprehenderit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ut dolore id ad\",\n   \"crs\": {\n    \"type\": \"exercitation sed adipis\",\n    \"properties\": {\n     \"name\": \"in nostrud pariatur ea\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"labor\"\n   },\n   {\n    \"message\": \"sint dolor velit\"\n   }\n  ],\n  \"authorityId\": \"est id sint veniam nulla\",\n  \"zoneType\": 3,\n  \"entityType\": 1,\n  \"entityId\": \"deserunt quis\",\n  \"name\": \"ut enim\",\n  \"eTag\": \"quis dolore\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3b7d0279-cf6b-40db-bf2a-cb40d9ed25f9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7771c3f6-8d97-46ba-a11f-c2db34361279",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "44cf7971-0127-4a6b-a215-0a5f5f3cdffe",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"proident eiusmod quis voluptate id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "55e044a1-e6fe-4ed3-96bc-4f076e2c725a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9749d354-c05b-42e6-a31a-918317eb3031",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eu fugiat\",\n            \"properties\": {\n                \"name\": \"culpa deserunt ut sunt\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1886a0cb-9caf-4726-a069-7f3eee82139b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"m\",\n            \"properties\": {\n                \"name\": \"cupidata\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"fugiat\",\n    \"entityETag\": \"nisi incididunt veniam aliqua\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 4,\n      \"specialRestrictionTypeId\": -53797691,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla sunt\",\n        \"endTime\": \"culpa amet enim consectetur dolor\",\n        \"maxStay\": 36951201\n       },\n       {\n        \"startTime\": \"pariatur e\",\n        \"endTime\": \"Excepteur eu qui\",\n        \"maxStay\": -84502805\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 15,\n      \"specialRestrictionTypeId\": 75238013,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"Ut tempor qui officia laboris\",\n        \"maxStay\": -26033375\n       },\n       {\n        \"startTime\": \"laborum enim esse in\",\n        \"endTime\": \"anim exercitation\",\n        \"maxStay\": 62444103\n       }\n      ]\n     }\n    ],\n    \"distance\": -65600126.221378386\n   },\n   {\n    \"entityId\": \"amet adipisicing\",\n    \"entityETag\": \"minim sunt Ut in ea\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 2,\n      \"specialRestrictionTypeId\": -26887220,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non incididunt\",\n        \"endTime\": \"nulla quis commodo Excepteur ad\",\n        \"maxStay\": 33082121\n       },\n       {\n        \"startTime\": \"dolore do occaecat \",\n        \"endTime\": \"in Ut in\",\n        \"maxStay\": -84788215\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 7,\n      \"specialRestrictionTypeId\": -60736549,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud ipsum id voluptate\",\n        \"endTime\": \"anim dolor m\",\n        \"maxStay\": 96210248\n       },\n       {\n        \"startTime\": \"Duis \",\n        \"endTime\": \"deserunt proident\",\n        \"maxStay\": -25890833\n       }\n      ]\n     }\n    ],\n    \"distance\": -82241438.64269\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"consequat ut\",\n   \"entityETag\": \"in eiusmod ullamco nisi sint\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 4,\n     \"specialRestrictionTypeId\": -18729048,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"aliqua amet dolor in\",\n       \"endTime\": \"consequat esse\",\n       \"maxStay\": -8505504\n      },\n      {\n       \"startTime\": \"in ipsum tempor\",\n       \"endTime\": \"ad in esse\",\n       \"maxStay\": -91173051\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -39494026,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"Ut cillum\",\n       \"endTime\": \"adipisicing minim Ut ea\",\n       \"maxStay\": -2785438\n      },\n      {\n       \"startTime\": \"magna labore reprehenderit aliqua\",\n       \"endTime\": \"occaecat\",\n       \"maxStay\": -40517235\n      }\n     ]\n    }\n   ],\n   \"distance\": 39677852.694096446\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c6688225-5236-4746-aa90-1ee82d5ef697",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"m\",\n            \"properties\": {\n                \"name\": \"cupidata\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c4e361ca-b2ce-4e74-8c6c-f4cb8e066e0c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"m\",\n            \"properties\": {\n                \"name\": \"cupidata\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8085ecb6-03de-42f9-92b5-2eea39f470b8",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"m\",\n            \"properties\": {\n                \"name\": \"cupidata\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bb890873-4dc8-460e-b34f-ce7c16efa44e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"m\",\n            \"properties\": {\n                \"name\": \"cupidata\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "41850398-c2e1-4dae-b844-fcfc95aad42a",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "eccc4a57-7821-4178-a5cc-6f75f7cc5d3e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        7\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"anim\",\n      \"city\": \"ut Lorem\",\n      \"country\": \"velit in et\",\n      \"postcode\": \"cillum tempor aute\"\n     },\n     \"locationCode\": \"sit non\",\n     \"totalCapacity\": 30998266,\n     \"zoneId\": \"elit magna\",\n     \"authorityId\": \"qui proident\",\n     \"features\": {\n      \"type\": \"occaecat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nisi\",\n           \"crs\": {\n            \"type\": \"irure cil\",\n            \"properties\": {\n             \"name\": \"non qui sunt commodo\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris et veniam minim\",\n           \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n             \"name\": \"e\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cillum sint sed\",\n         \"crs\": {\n          \"type\": \"consequat ad\",\n          \"properties\": {\n           \"name\": \"quis labore incididunt\"\n          }\n         }\n        },\n        \"type\": \"sit incididunt\",\n        \"id\": \"magna in laboris quis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore ea fugiat occaecat\",\n           \"crs\": {\n            \"type\": \"proident voluptate veniam aliqua ipsum\",\n            \"properties\": {\n             \"name\": \"aliquip non culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis\",\n           \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n             \"name\": \"Ut magna\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur ut cupidatat laborum fugiat\",\n         \"crs\": {\n          \"type\": \"pariatur amet sed id\",\n          \"properties\": {\n           \"name\": \"ex voluptate reprehenderit sit incididunt\"\n          }\n         }\n        },\n        \"type\": \"ea commodo nisi\",\n        \"id\": \"Ut cillum\"\n       }\n      ],\n      \"properties\": \"Excepteur aliqua Lorem\"\n     },\n     \"paymentMethodIds\": [\n      57827906,\n      3867680\n     ],\n     \"entityId\": \"non aute eiusmod sed\",\n     \"entityType\": 3,\n     \"name\": \"mollit sint\",\n     \"eTag\": \"aliqua off\",\n     \"operator\": {\n      \"telephone\": \"elit voluptate\",\n      \"website\": \"mollit proident\",\n      \"name\": \"sunt eu irure\",\n      \"cardPaymentsExternalUrl\": \"adipisicing\",\n      \"paymentsTelephone\": \"minim in culpa in pariatur\"\n     },\n     \"onStreetParkingTypeIds\": [\n      7,\n      9\n     ],\n     \"facilityTypeIds\": [\n      -92953453,\n      15731534\n     ]\n    },\n    \"distance\": -25633764.393334597\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"amet mollit adipisicing dolore\",\n      \"city\": \"exercitation nostrud sint\",\n      \"country\": \"officia et veniam\",\n      \"postcode\": \"nisi voluptate\"\n     },\n     \"locationCode\": \"dolore dolor sit tempor in\",\n     \"totalCapacity\": -11534488,\n     \"zoneId\": \"nisi do\",\n     \"authorityId\": \"amet enim ex ipsum\",\n     \"features\": {\n      \"type\": \"reprehenderit\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"adipisicing amet\",\n           \"crs\": {\n            \"type\": \"nostrud exercitatio\",\n            \"properties\": {\n             \"name\": \"eiusmod\"\n            }\n           }\n          },\n          {\n           \"type\": \"ullamco nostrud\",\n           \"crs\": {\n            \"type\": \"ad adipisicing\",\n            \"properties\": {\n             \"name\": \"amet dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"commodo anim\",\n         \"crs\": {\n          \"type\": \"Ut nisi eiusmod\",\n          \"properties\": {\n           \"name\": \"dolor laborum esse nisi\"\n          }\n         }\n        },\n        \"type\": \"dolore reprehenderit commodo do\",\n        \"id\": \"consequat in\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor in sunt magna consectetur\",\n           \"crs\": {\n            \"type\": \"deserunt commodo ullamco\",\n            \"properties\": {\n             \"name\": \"laborum dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor\",\n           \"crs\": {\n            \"type\": \"eiusmod id\",\n            \"properties\": {\n             \"name\": \"occaecat enim sed culpa\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliquip laborum eiusmod tempor\",\n         \"crs\": {\n          \"type\": \"qui dolor aliqua quis id\",\n          \"properties\": {\n           \"name\": \"anim ex occaecat\"\n          }\n         }\n        },\n        \"type\": \"quis\",\n        \"id\": \"in magna commodo Excepteur\"\n       }\n      ],\n      \"properties\": \"deserunt in sit\"\n     },\n     \"paymentMethodIds\": [\n      -79358919,\n      -26645581\n     ],\n     \"entityId\": \"ad dolore consequat nisi\",\n     \"entityType\": 1,\n     \"name\": \"sed ad\",\n     \"eTag\": \"sunt culpa\",\n     \"operator\": {\n      \"telephone\": \"esse\",\n      \"website\": \"Excepteur aliqua m\",\n      \"name\": \"nisi deserunt\",\n      \"cardPaymentsExternalUrl\": \"fugiat exercitation in non\",\n      \"paymentsTelephone\": \"fugiat ad Ut\"\n     },\n     \"onStreetParkingTypeIds\": [\n      13,\n      5\n     ],\n     \"facilityTypeIds\": [\n      88689588,\n      80766135\n     ]\n    },\n    \"distance\": -85163174.13640703\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "67ba2bc5-d5f5-482e-91e6-708a46f2f147",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        7\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "331a0f56-deba-451f-b955-8dce29c6cfd3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        7\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5b070b49-ee68-4b8c-a634-6af78ad35650",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        7\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "73c17dd7-64d9-4a75-9848-6ae2701bcc69",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        7\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6a722591-918a-4791-9f18-0cbefca33830",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip in ex\",\n            \"properties\": {\n                \"name\": \"eu fugiat ut incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        10\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "16f374f8-89bf-4d56-bcb5-9f71a9d2c6bd",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit ad enim\",\n            \"properties\": {\n                \"name\": \"esse nisi\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"anim\",\n      \"city\": \"ut Lorem\",\n      \"country\": \"velit in et\",\n      \"postcode\": \"cillum tempor aute\"\n     },\n     \"locationCode\": \"sit non\",\n     \"totalCapacity\": 30998266,\n     \"zoneId\": \"elit magna\",\n     \"authorityId\": \"qui proident\",\n     \"features\": {\n      \"type\": \"occaecat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nisi\",\n           \"crs\": {\n            \"type\": \"irure cil\",\n            \"properties\": {\n             \"name\": \"non qui sunt commodo\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris et veniam minim\",\n           \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n             \"name\": \"e\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cillum sint sed\",\n         \"crs\": {\n          \"type\": \"consequat ad\",\n          \"properties\": {\n           \"name\": \"quis labore incididunt\"\n          }\n         }\n        },\n        \"type\": \"sit incididunt\",\n        \"id\": \"magna in laboris quis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore ea fugiat occaecat\",\n           \"crs\": {\n            \"type\": \"proident voluptate veniam aliqua ipsum\",\n            \"properties\": {\n             \"name\": \"aliquip non culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis\",\n           \"crs\": {\n            \"type\": \"exercitation\",\n            \"properties\": {\n             \"name\": \"Ut magna\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur ut cupidatat laborum fugiat\",\n         \"crs\": {\n          \"type\": \"pariatur amet sed id\",\n          \"properties\": {\n           \"name\": \"ex voluptate reprehenderit sit incididunt\"\n          }\n         }\n        },\n        \"type\": \"ea commodo nisi\",\n        \"id\": \"Ut cillum\"\n       }\n      ],\n      \"properties\": \"Excepteur aliqua Lorem\"\n     },\n     \"paymentMethodIds\": [\n      57827906,\n      3867680\n     ],\n     \"entityId\": \"non aute eiusmod sed\",\n     \"entityType\": 3,\n     \"name\": \"mollit sint\",\n     \"eTag\": \"aliqua off\",\n     \"operator\": {\n      \"telephone\": \"elit voluptate\",\n      \"website\": \"mollit proident\",\n      \"name\": \"sunt eu irure\",\n      \"cardPaymentsExternalUrl\": \"adipisicing\",\n      \"paymentsTelephone\": \"minim in culpa in pariatur\"\n     },\n     \"onStreetParkingTypeIds\": [\n      7,\n      9\n     ],\n     \"facilityTypeIds\": [\n      -92953453,\n      15731534\n     ]\n    },\n    \"distance\": -25633764.393334597\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"amet mollit adipisicing dolore\",\n      \"city\": \"exercitation nostrud sint\",\n      \"country\": \"officia et veniam\",\n      \"postcode\": \"nisi voluptate\"\n     },\n     \"locationCode\": \"dolore dolor sit tempor in\",\n     \"totalCapacity\": -11534488,\n     \"zoneId\": \"nisi do\",\n     \"authorityId\": \"amet enim ex ipsum\",\n     \"features\": {\n      \"type\": \"reprehenderit\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"adipisicing amet\",\n           \"crs\": {\n            \"type\": \"nostrud exercitatio\",\n            \"properties\": {\n             \"name\": \"eiusmod\"\n            }\n           }\n          },\n          {\n           \"type\": \"ullamco nostrud\",\n           \"crs\": {\n            \"type\": \"ad adipisicing\",\n            \"properties\": {\n             \"name\": \"amet dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"commodo anim\",\n         \"crs\": {\n          \"type\": \"Ut nisi eiusmod\",\n          \"properties\": {\n           \"name\": \"dolor laborum esse nisi\"\n          }\n         }\n        },\n        \"type\": \"dolore reprehenderit commodo do\",\n        \"id\": \"consequat in\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor in sunt magna consectetur\",\n           \"crs\": {\n            \"type\": \"deserunt commodo ullamco\",\n            \"properties\": {\n             \"name\": \"laborum dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor\",\n           \"crs\": {\n            \"type\": \"eiusmod id\",\n            \"properties\": {\n             \"name\": \"occaecat enim sed culpa\"\n            }\n           }\n          }\n         ],\n         \"type\": \"aliquip laborum eiusmod tempor\",\n         \"crs\": {\n          \"type\": \"qui dolor aliqua quis id\",\n          \"properties\": {\n           \"name\": \"anim ex occaecat\"\n          }\n         }\n        },\n        \"type\": \"quis\",\n        \"id\": \"in magna commodo Excepteur\"\n       }\n      ],\n      \"properties\": \"deserunt in sit\"\n     },\n     \"paymentMethodIds\": [\n      -79358919,\n      -26645581\n     ],\n     \"entityId\": \"ad dolore consequat nisi\",\n     \"entityType\": 1,\n     \"name\": \"sed ad\",\n     \"eTag\": \"sunt culpa\",\n     \"operator\": {\n      \"telephone\": \"esse\",\n      \"website\": \"Excepteur aliqua m\",\n      \"name\": \"nisi deserunt\",\n      \"cardPaymentsExternalUrl\": \"fugiat exercitation in non\",\n      \"paymentsTelephone\": \"fugiat ad Ut\"\n     },\n     \"onStreetParkingTypeIds\": [\n      13,\n      5\n     ],\n     \"facilityTypeIds\": [\n      88689588,\n      80766135\n     ]\n    },\n    \"distance\": -85163174.13640703\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "057079b6-0cd4-43e9-b58a-443e81a89014",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit ad enim\",\n            \"properties\": {\n                \"name\": \"esse nisi\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "68e02d88-286f-417a-bfac-2e2518d9cce4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit ad enim\",\n            \"properties\": {\n                \"name\": \"esse nisi\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dd82faad-252b-43ce-85cd-cb6d06d83294",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit ad enim\",\n            \"properties\": {\n                \"name\": \"esse nisi\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4c074f9e-d6a6-46f2-9892-3f66834d18cb",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit ad enim\",\n            \"properties\": {\n                \"name\": \"esse nisi\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        17,\n        8\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f0ac799b-0a07-45d8-9f7e-0e43648e020f",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "9a7f3ec0-19c1-4036-94cd-ab7058045551",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"eu reprehenderit in esse\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"dolor magna labore\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 26060917.534117192,\n      \"currency\": \"mollit elit est cupidatat\",\n      \"minCost\": -86796893.43582466,\n      \"minStayUntil\": \"dolor ea dolor eu enim\",\n      \"canExtendUntil\": \"voluptate ipsum mollit anim\",\n      \"pricedUntil\": \"minim adipisicing est proident\",\n      \"noReturnUntil\": \"ea qui\",\n      \"freeUntil\": \"magna Excepteur\",\n      \"becomesFreeAt\": \"minim commodo dolor\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       34566152,\n       -71642228\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"amet veniam anim\",\n      \"surcharge\": {\n       \"value\": -5331964.82581228,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -68683337\n       }\n      }\n     },\n     {\n      \"cost\": -55442845.758037776,\n      \"currency\": \"sunt nulla et fugiat\",\n      \"minCost\": 56057105.21313161,\n      \"minStayUntil\": \"eu sed ali\",\n      \"canExtendUntil\": \"in commodo in pariatur\",\n      \"pricedUntil\": \"ut Duis id cillum\",\n      \"noReturnUntil\": \"Lorem aute ut\",\n      \"freeUntil\": \"enim in\",\n      \"becomesFreeAt\": \"est\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -51935195,\n       -75868523\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"incididunt ad cupidatat ex\",\n      \"surcharge\": {\n       \"value\": 70923351.9583213,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -18908157\n       }\n      }\n     }\n    ],\n    \"distance\": 39493150.550076455,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      96864767,\n      39938378\n     ]\n    },\n    \"entityETag\": \"non amet\"\n   },\n   {\n    \"entityId\": \"c\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 88474775.91323951,\n      \"currency\": \"labore amet\",\n      \"minCost\": -36098987.35841108,\n      \"minStayUntil\": \"esse sint consectetur nostrud minim\",\n      \"canExtendUntil\": \"ut Excepteur Ut\",\n      \"pricedUntil\": \"ad\",\n      \"noReturnUntil\": \"consequat ullamco mollit proident\",\n      \"freeUntil\": \"ut non\",\n      \"becomesFreeAt\": \"veniam eu velit aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       61439610,\n       92819574\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"occaecat qui\",\n      \"surcharge\": {\n       \"value\": 38741981.9473418,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 80061524\n       }\n      }\n     },\n     {\n      \"cost\": -81388067.38883689,\n      \"currency\": \"anim\",\n      \"minCost\": 5952535.421814442,\n      \"minStayUntil\": \"dolore minim aute\",\n      \"canExtendUntil\": \"veniam incididunt exercitation\",\n      \"pricedUntil\": \"voluptate labore laboris\",\n      \"noReturnUntil\": \"aute culpa in\",\n      \"freeUntil\": \"veniam nulla culpa magna Duis\",\n      \"becomesFreeAt\": \"qui sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       55962300,\n       -85125845\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"id\",\n      \"surcharge\": {\n       \"value\": 13349358.829007134,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -86864584\n       }\n      }\n     }\n    ],\n    \"distance\": -69623886.42178161,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -53674634,\n      -49312146\n     ]\n    },\n    \"entityETag\": \"ullamco et Ut culpa anim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0b8a5aec-0de5-49bd-8c02-15014f241cb7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d636a00c-040a-43fe-bdb3-20214d16b0e7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "14245aad-8ead-43aa-8cfa-2998e0c88621",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1868eaee-1e7a-4419-a614-43fc339cbb22",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e5bad164-13b0-4732-afbb-5c33666d7191",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip eu dolor velit elit\",\n            \"properties\": {\n                \"name\": \"Ut velit aliqua commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "9d9e1926-b624-4247-9775-320c0c7f4133",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do\",\n            \"properties\": {\n                \"name\": \"tempor aliqua\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"eu reprehenderit in esse\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"dolor magna labore\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 26060917.534117192,\n      \"currency\": \"mollit elit est cupidatat\",\n      \"minCost\": -86796893.43582466,\n      \"minStayUntil\": \"dolor ea dolor eu enim\",\n      \"canExtendUntil\": \"voluptate ipsum mollit anim\",\n      \"pricedUntil\": \"minim adipisicing est proident\",\n      \"noReturnUntil\": \"ea qui\",\n      \"freeUntil\": \"magna Excepteur\",\n      \"becomesFreeAt\": \"minim commodo dolor\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       34566152,\n       -71642228\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"amet veniam anim\",\n      \"surcharge\": {\n       \"value\": -5331964.82581228,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -68683337\n       }\n      }\n     },\n     {\n      \"cost\": -55442845.758037776,\n      \"currency\": \"sunt nulla et fugiat\",\n      \"minCost\": 56057105.21313161,\n      \"minStayUntil\": \"eu sed ali\",\n      \"canExtendUntil\": \"in commodo in pariatur\",\n      \"pricedUntil\": \"ut Duis id cillum\",\n      \"noReturnUntil\": \"Lorem aute ut\",\n      \"freeUntil\": \"enim in\",\n      \"becomesFreeAt\": \"est\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -51935195,\n       -75868523\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"incididunt ad cupidatat ex\",\n      \"surcharge\": {\n       \"value\": 70923351.9583213,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -18908157\n       }\n      }\n     }\n    ],\n    \"distance\": 39493150.550076455,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      96864767,\n      39938378\n     ]\n    },\n    \"entityETag\": \"non amet\"\n   },\n   {\n    \"entityId\": \"c\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 88474775.91323951,\n      \"currency\": \"labore amet\",\n      \"minCost\": -36098987.35841108,\n      \"minStayUntil\": \"esse sint consectetur nostrud minim\",\n      \"canExtendUntil\": \"ut Excepteur Ut\",\n      \"pricedUntil\": \"ad\",\n      \"noReturnUntil\": \"consequat ullamco mollit proident\",\n      \"freeUntil\": \"ut non\",\n      \"becomesFreeAt\": \"veniam eu velit aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       61439610,\n       92819574\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"occaecat qui\",\n      \"surcharge\": {\n       \"value\": 38741981.9473418,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 80061524\n       }\n      }\n     },\n     {\n      \"cost\": -81388067.38883689,\n      \"currency\": \"anim\",\n      \"minCost\": 5952535.421814442,\n      \"minStayUntil\": \"dolore minim aute\",\n      \"canExtendUntil\": \"veniam incididunt exercitation\",\n      \"pricedUntil\": \"voluptate labore laboris\",\n      \"noReturnUntil\": \"aute culpa in\",\n      \"freeUntil\": \"veniam nulla culpa magna Duis\",\n      \"becomesFreeAt\": \"qui sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       55962300,\n       -85125845\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"id\",\n      \"surcharge\": {\n       \"value\": 13349358.829007134,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -86864584\n       }\n      }\n     }\n    ],\n    \"distance\": -69623886.42178161,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -53674634,\n      -49312146\n     ]\n    },\n    \"entityETag\": \"ullamco et Ut culpa anim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "88ef8fb4-2076-4ab5-a453-6e20326f3c52",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do\",\n            \"properties\": {\n                \"name\": \"tempor aliqua\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "89d0f46f-d20d-493e-8ae1-b2c7ed24a129",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do\",\n            \"properties\": {\n                \"name\": \"tempor aliqua\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dc67c60e-5711-4686-9d0e-2c57c85a438c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do\",\n            \"properties\": {\n                \"name\": \"tempor aliqua\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e81a8c31-88e2-4411-aa71-7bad0ba95a50",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do\",\n            \"properties\": {\n                \"name\": \"tempor aliqua\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0ec4d291-e141-4a81-bea2-f5036715046a",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore Excepteur\",\n            \"properties\": {\n                \"name\": \"ma\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "dfb009ff-4de2-40f1-809a-6221c8e8d65f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit voluptate\",\n            \"properties\": {\n                \"name\": \"ipsum id quis cupidatat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"irure qui\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"Duis ut culpa sed\",\n     \"crs\": {\n      \"type\": \"deserunt sunt velit\",\n      \"properties\": {\n       \"name\": \"sed\"\n      }\n     }\n    },\n    \"type\": \"dolore\",\n    \"id\": \"pariatur veniam\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"dolor\",\n     \"crs\": {\n      \"type\": \"dolore ipsum\",\n      \"properties\": {\n       \"name\": \"enim irure elit\"\n      }\n     }\n    },\n    \"type\": \"Excepteur eiusmod eu sunt exercitation\",\n    \"id\": \"occaecat aute ex\"\n   }\n  ],\n  \"properties\": \"qui esse\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d0e5b643-66bf-4ecc-965c-34c1ee9765b7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit voluptate\",\n            \"properties\": {\n                \"name\": \"ipsum id quis cupidatat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "53ee03cf-2cff-43d1-bb17-a311b58bc221",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit voluptate\",\n            \"properties\": {\n                \"name\": \"ipsum id quis cupidatat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "38e084cc-ee55-46ac-908c-a7ae23aac50a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit voluptate\",\n            \"properties\": {\n                \"name\": \"ipsum id quis cupidatat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9cc2ad19-2f65-46ae-b3c8-b8a5e05df1c2",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit voluptate\",\n            \"properties\": {\n                \"name\": \"ipsum id quis cupidatat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "45c12c65-5b19-4ff1-a2dd-7b3e397a02e4",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"minim ad\",\n            \"properties\": {\n                \"name\": \"dolor in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        15,\n        2\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "7a3375d3-4ad1-4d55-96b0-b250f6f142d8",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris tempor \",\n            \"properties\": {\n                \"name\": \"non Excepteur anim sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"fugiat\",\n    \"entityETag\": \"nisi incididunt veniam aliqua\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 4,\n      \"specialRestrictionTypeId\": -53797691,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nulla sunt\",\n        \"endTime\": \"culpa amet enim consectetur dolor\",\n        \"maxStay\": 36951201\n       },\n       {\n        \"startTime\": \"pariatur e\",\n        \"endTime\": \"Excepteur eu qui\",\n        \"maxStay\": -84502805\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 15,\n      \"specialRestrictionTypeId\": 75238013,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"Ut tempor qui officia laboris\",\n        \"maxStay\": -26033375\n       },\n       {\n        \"startTime\": \"laborum enim esse in\",\n        \"endTime\": \"anim exercitation\",\n        \"maxStay\": 62444103\n       }\n      ]\n     }\n    ],\n    \"distance\": -65600126.221378386\n   },\n   {\n    \"entityId\": \"amet adipisicing\",\n    \"entityETag\": \"minim sunt Ut in ea\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 2,\n      \"specialRestrictionTypeId\": -26887220,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"non incididunt\",\n        \"endTime\": \"nulla quis commodo Excepteur ad\",\n        \"maxStay\": 33082121\n       },\n       {\n        \"startTime\": \"dolore do occaecat \",\n        \"endTime\": \"in Ut in\",\n        \"maxStay\": -84788215\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 7,\n      \"specialRestrictionTypeId\": -60736549,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud ipsum id voluptate\",\n        \"endTime\": \"anim dolor m\",\n        \"maxStay\": 96210248\n       },\n       {\n        \"startTime\": \"Duis \",\n        \"endTime\": \"deserunt proident\",\n        \"maxStay\": -25890833\n       }\n      ]\n     }\n    ],\n    \"distance\": -82241438.64269\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"consequat ut\",\n   \"entityETag\": \"in eiusmod ullamco nisi sint\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 4,\n     \"specialRestrictionTypeId\": -18729048,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"aliqua amet dolor in\",\n       \"endTime\": \"consequat esse\",\n       \"maxStay\": -8505504\n      },\n      {\n       \"startTime\": \"in ipsum tempor\",\n       \"endTime\": \"ad in esse\",\n       \"maxStay\": -91173051\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -39494026,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"Ut cillum\",\n       \"endTime\": \"adipisicing minim Ut ea\",\n       \"maxStay\": -2785438\n      },\n      {\n       \"startTime\": \"magna labore reprehenderit aliqua\",\n       \"endTime\": \"occaecat\",\n       \"maxStay\": -40517235\n      }\n     ]\n    }\n   ],\n   \"distance\": 39677852.694096446\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7d09974f-e320-4021-be51-41bcf91dffc1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris tempor \",\n            \"properties\": {\n                \"name\": \"non Excepteur anim sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"fugiat minim consequat enim\",\n \"errors\": [\n  {\n   \"property\": \"laboris eu quis Excepteur ipsum\",\n   \"code\": \"consequat officia\",\n   \"message\": \"ullamco pariatur incididunt\"\n  },\n  {\n   \"property\": \"et incididunt do consectetur\",\n   \"code\": \"mollit deserunt proident\",\n   \"message\": \"in ut in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "92a40823-d87e-4eba-837f-8f1463c3b67a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris tempor \",\n            \"properties\": {\n                \"name\": \"non Excepteur anim sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b5b54fc6-4dba-49ff-89f2-c7b52ca52ac3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris tempor \",\n            \"properties\": {\n                \"name\": \"non Excepteur anim sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c38312e0-e354-4484-9a6e-b082f52ce92f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"laboris tempor \",\n            \"properties\": {\n                \"name\": \"non Excepteur anim sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ad97466d-03e7-492a-971a-9e164ceb1ea7",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "9a5c79e6-dc36-4c50-88fc-d94b5f73079a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4b30c90b-7ceb-4b33-a044-67760cf20192",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bf8866ac-9597-4810-be00-f573f4893dab",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f67c17b5-386c-4003-b809-37c23b21235d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "a5fd1b57-003c-4f24-ac13-cd0dc74fc2f5",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
