{
  "item": [
    {
      "id": "2c3c2e48-35aa-4bb7-a810-771db36b6fe4",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "35b35084-6a5a-4c5a-b124-61435897396a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"veniam\"\n   },\n   {\n    \"message\": \"in consectetur dolore est\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"nisi veniam ad\",\n    \"cardPaymentsExternalUrl\": \"Lorem officia\",\n    \"paymentsTelephone\": \"nostrud qui Excepteu\"\n   },\n   {\n    \"name\": \"voluptate laboris minim exercitation aute\",\n    \"cardPaymentsExternalUrl\": \"culpa in deserunt quis\",\n    \"paymentsTelephone\": \"proident et\"\n   }\n  ],\n  \"entityType\": 1,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"anim cupidatat\",\n     \"crs\": {\n      \"type\": \"consectetur sit ut\",\n      \"properties\": {\n       \"name\": \"et adipisicing commodo\"\n      }\n     }\n    },\n    {\n     \"type\": \"anim\",\n     \"crs\": {\n      \"type\": \"ut\",\n      \"properties\": {\n       \"name\": \"ut consequat dolore velit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ad dolore\",\n   \"crs\": {\n    \"type\": \"cillum dolore commodo dolor\",\n    \"properties\": {\n     \"name\": \"ad\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"consequat in sunt anim\",\n  \"name\": \"eu cillum magna pariatur sed\",\n  \"eTag\": \"commodo Ut qui aliqua adipisicing\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a5bbade2-0873-4d6a-b1c6-2522d6be4f60",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "86a914c1-f54d-48ba-80a9-4a9404197f12",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0e054c54-cb62-43a7-87da-b8354feda2bf",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "263040f6-37b7-4ee4-8a91-4718584f060a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f25bb789-57d0-48b9-9f21-8233a2c87094",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "de9c0311-b15f-42d8-8234-c11833c0bdf4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"aliqua\",\n     \"city\": \"pariatur\",\n     \"country\": \"et enim\",\n     \"postcode\": \"ipsum laborum eu\"\n    },\n    \"locationCode\": \"voluptate ullamco\",\n    \"totalCapacity\": -91674049,\n    \"zoneId\": \"anim aute dolor elit do\",\n    \"authorityId\": \"occaecat commodo in dolor\",\n    \"features\": {\n     \"type\": \"magna labor\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"est fugiat\",\n          \"crs\": {\n           \"type\": \"deserunt pariatur\",\n           \"properties\": {\n            \"name\": \"exerc\"\n           }\n          }\n         },\n         {\n          \"type\": \"in mollit\",\n          \"crs\": {\n           \"type\": \"aliquip irure\",\n           \"properties\": {\n            \"name\": \"aliqua sint\"\n           }\n          }\n         }\n        ],\n        \"type\": \"amet adipisicing nostrud laborum dolore\",\n        \"crs\": {\n         \"type\": \"in commodo adipisicing enim in\",\n         \"properties\": {\n          \"name\": \"laboris esse in ipsum dolor\"\n         }\n        }\n       },\n       \"type\": \"quis ut r\",\n       \"id\": \"cupidatat do\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"occaecat consectetur sed magna\",\n          \"crs\": {\n           \"type\": \"non \",\n           \"properties\": {\n            \"name\": \"exercitation mollit Ut non velit\"\n           }\n          }\n         },\n         {\n          \"type\": \"cupidatat ex nulla \",\n          \"crs\": {\n           \"type\": \"esse non\",\n           \"properties\": {\n            \"name\": \"veniam do non\"\n           }\n          }\n         }\n        ],\n        \"type\": \"tempor anim ullamco in\",\n        \"crs\": {\n         \"type\": \"incididunt culpa sit quis\",\n         \"properties\": {\n          \"name\": \"officia\"\n         }\n        }\n       },\n       \"type\": \"dolor sunt\",\n       \"id\": \"magna enim non ipsum deserunt\"\n      }\n     ],\n     \"properties\": \"et officia Excepteur nisi\"\n    },\n    \"paymentMethodIds\": [\n     51400184,\n     -73823607\n    ],\n    \"entityId\": \"amet in\",\n    \"entityType\": 1,\n    \"name\": \"nisi\",\n    \"eTag\": \"dolore occaecat\",\n    \"operator\": {\n     \"telephone\": \"ex cupidatat\",\n     \"website\": \"eiusmod consecte\",\n     \"name\": \"tempor et Excepteur dolore labore\",\n     \"cardPaymentsExternalUrl\": \"dolor nisi\",\n     \"paymentsTelephone\": \"do sunt\"\n    },\n    \"onStreetParkingTypeIds\": [\n     7,\n     14\n    ],\n    \"facilityTypeIds\": [\n     -33079650,\n     -73935295\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"et do\",\n     \"city\": \"dolore aliqua ut\",\n     \"country\": \"labore sint ullamco sed\",\n     \"postcode\": \"deserunt Lorem Excepteur qui\"\n    },\n    \"locationCode\": \"deserunt commodo\",\n    \"totalCapacity\": 11950425,\n    \"zoneId\": \"occaeca\",\n    \"authorityId\": \"ea laboris culpa\",\n    \"features\": {\n     \"type\": \"nostrud qui laborum\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"veniam\",\n          \"crs\": {\n           \"type\": \"cillum ull\",\n           \"properties\": {\n            \"name\": \"sunt sit et\"\n           }\n          }\n         },\n         {\n          \"type\": \"est Duis\",\n          \"crs\": {\n           \"type\": \"e\",\n           \"properties\": {\n            \"name\": \"ipsum aute incididunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"sit consectetur in ea\",\n        \"crs\": {\n         \"type\": \"dolore dolor\",\n         \"properties\": {\n          \"name\": \"dolore oc\"\n         }\n        }\n       },\n       \"type\": \"sit Excepteur veni\",\n       \"id\": \"officia\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"do Excepteur\",\n          \"crs\": {\n           \"type\": \"Lorem sunt officia\",\n           \"properties\": {\n            \"name\": \"in irure nostrud consequat\"\n           }\n          }\n         },\n         {\n          \"type\": \"dolor sunt in id\",\n          \"crs\": {\n           \"type\": \"adipisicing mollit\",\n           \"properties\": {\n            \"name\": \"adipisicing\"\n           }\n          }\n         }\n        ],\n        \"type\": \"est ut minim sed irure\",\n        \"crs\": {\n         \"type\": \"magna tempor e\",\n         \"properties\": {\n          \"name\": \"ut nisi cupidatat\"\n         }\n        }\n       },\n       \"type\": \"dolor commodo consequat\",\n       \"id\": \"consectetur\"\n      }\n     ],\n     \"properties\": \"deserunt ullamco occaecat no\"\n    },\n    \"paymentMethodIds\": [\n     6319504,\n     29849096\n    ],\n    \"entityId\": \"ad minim ut\",\n    \"entityType\": 4,\n    \"name\": \"anim magna eu tempor\",\n    \"eTag\": \"velit deserunt\",\n    \"operator\": {\n     \"telephone\": \"magna laborum ullamco incididunt\",\n     \"website\": \"eiusmod pariatur veniam\",\n     \"name\": \"nisi commodo\",\n     \"cardPaymentsExternalUrl\": \"nulla dolore ipsum\",\n     \"paymentsTelephone\": \"ipsum anim deserunt voluptate\"\n    },\n    \"onStreetParkingTypeIds\": [\n     15,\n     14\n    ],\n    \"facilityTypeIds\": [\n     8978772,\n     -40204218\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"consectetur mollit magna\",\n       \"crs\": {\n        \"type\": \"reprehenderit dolore ullamco in ea\",\n        \"properties\": {\n         \"name\": \"id dolore dolore qu\"\n        }\n       }\n      },\n      {\n       \"type\": \"Lorem minim ex do et\",\n       \"crs\": {\n        \"type\": \"cillum commodo sit\",\n        \"properties\": {\n         \"name\": \"anim laborum officia\"\n        }\n       }\n      }\n     ],\n     \"type\": \"velit aliquip adipisicing sint\",\n     \"crs\": {\n      \"type\": \"commodo adipisicing sunt non\",\n      \"properties\": {\n       \"name\": \"commodo quis exercitation\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"in adipisi\"\n     },\n     {\n      \"message\": \"nostr\"\n     }\n    ],\n    \"authorityId\": \"proident cillum\",\n    \"zoneType\": 8,\n    \"entityType\": 3,\n    \"entityId\": \"consequat laboris\",\n    \"name\": \"aute pariatur laborum non ipsum\",\n    \"eTag\": \"ut reprehenderit est\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"la\",\n       \"crs\": {\n        \"type\": \"sint Lorem quis tempor ipsum\",\n        \"properties\": {\n         \"name\": \"ex proident eu Excepteur\"\n        }\n       }\n      },\n      {\n       \"type\": \"sunt quis eiusmod labore commodo\",\n       \"crs\": {\n        \"type\": \"dolore id est nisi\",\n        \"properties\": {\n         \"name\": \"quis ullamco nulla ex\"\n        }\n       }\n      }\n     ],\n     \"type\": \"in occaecat commodo\",\n     \"crs\": {\n      \"type\": \"Duis velit aliqua\",\n      \"properties\": {\n       \"name\": \"eu occaecat cupidatat irure\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"eu\"\n     },\n     {\n      \"message\": \"Lorem cupidatat consectetur\"\n     }\n    ],\n    \"authorityId\": \"reprehenderit voluptate aliquip\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"ut est amet qui\",\n    \"name\": \"tempor sit Duis irure\",\n    \"eTag\": \"Excepteur velit irure proident\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"anim\"\n     },\n     {\n      \"message\": \"fugiat ut officia\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"consectetur\",\n      \"cardPaymentsExternalUrl\": \"pariatur nisi sed occaecat\",\n      \"paymentsTelephone\": \"proident culpa\"\n     },\n     {\n      \"name\": \"Ut sit elit nisi\",\n      \"cardPaymentsExternalUrl\": \"eiusmod\",\n      \"paymentsTelephone\": \"sint ea ut dolore proiden\"\n     }\n    ],\n    \"entityType\": 3,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"nisi\",\n       \"crs\": {\n        \"type\": \"reprehenderit magna sint\",\n        \"properties\": {\n         \"name\": \"reprehenderit deserunt\"\n        }\n       }\n      },\n      {\n       \"type\": \"in commodo\",\n       \"crs\": {\n        \"type\": \"proident\",\n        \"properties\": {\n         \"name\": \"exercitation irure elit\"\n        }\n       }\n      }\n     ],\n     \"type\": \"et in cupidatat\",\n     \"crs\": {\n      \"type\": \"consequat amet ut Lorem\",\n      \"properties\": {\n       \"name\": \"sint consectetur amet dolor\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"culpa fugiat reprehenderit sunt labore\",\n    \"name\": \"Ut occaecat\",\n    \"eTag\": \"eiusmod cupidatat ullamco\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"Excepteur eiusmod cupidatat tempor\"\n     },\n     {\n      \"message\": \"in\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"labore eiusmod\",\n      \"cardPaymentsExternalUrl\": \"eu proident\",\n      \"paymentsTelephone\": \"officia\"\n     },\n     {\n      \"name\": \"laborum dolor magna ut consequat\",\n      \"cardPaymentsExternalUrl\": \"sunt\",\n      \"paymentsTelephone\": \"cupidatat nostrud elit non\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"nulla\",\n       \"crs\": {\n        \"type\": \"sint et fugiat cupidatat\",\n        \"properties\": {\n         \"name\": \"veniam est esse magna ipsum\"\n        }\n       }\n      },\n      {\n       \"type\": \"cillum exercitation reprehenderit\",\n       \"crs\": {\n        \"type\": \"officia irure\",\n        \"properties\": {\n         \"name\": \"commodo eu\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ipsum culpa deserunt aute\",\n     \"crs\": {\n      \"type\": \"cupidatat Excepteur qui\",\n      \"properties\": {\n       \"name\": \"et dolor\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"dolore\",\n    \"name\": \"consectetur aute Ex\",\n    \"eTag\": \"nisi deserunt et amet esse\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "31d77579-04e0-47b4-9f70-b47597530a8e",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"labore cillum\",\n \"errors\": [\n  {\n   \"property\": \"laborum officia culpa\",\n   \"code\": \"quis\",\n   \"message\": \"incidi\"\n  },\n  {\n   \"property\": \"in incididunt\",\n   \"code\": \"exercitation in proident\",\n   \"message\": \"ut ullamco amet adipisicing\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "67bbf8b2-ed63-4aba-871b-4ddfc656632c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d7a45f44-c6a5-4b9c-bc90-88f619045f6f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e867f2f8-bc93-41b7-a1e0-11d007130dd7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e0aaf8d8-d28b-4ba8-b115-b9deb04f812f",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "6ca6f9d1-e29f-4335-bcbf-fdf7523b19eb",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"sunt Excepteur qui dolore\",\n  \"entityType\": 4,\n  \"entityETag\": \"minim non ex\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -31886685,\n     -24739007\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     -41322709,\n     63741405\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e7aee3b9-ca87-422b-91fa-026c7dcaec62",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c7ae6c1f-c4b0-459d-be71-64abd3695261",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "18a4048c-1878-4387-a310-00961b41b8a6",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "88d5a105-5b02-40eb-b378-46a221462f09",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1b3c5690-4739-4c9d-88fd-3737b16741e8",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f290d443-1f39-4cec-9012-8e29567c033c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"do aute nulla minim\",\n   \"city\": \"dolor nostrud do\",\n   \"country\": \"velit tempor\",\n   \"postcode\": \"irure eu dolore do consequat\"\n  },\n  \"locationCode\": \"Lorem do labore v\",\n  \"totalCapacity\": -71662295,\n  \"zoneId\": \"est ea sunt\",\n  \"authorityId\": \"cupidatat dolor nulla Lorem\",\n  \"features\": {\n   \"type\": \"veniam\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"cupidatat consequat ullamco ad Duis\",\n        \"crs\": {\n         \"type\": \"id\",\n         \"properties\": {\n          \"name\": \"dolore cillum dolore ad eu\"\n         }\n        }\n       },\n       {\n        \"type\": \"sit Lorem culpa\",\n        \"crs\": {\n         \"type\": \"pariatur\",\n         \"properties\": {\n          \"name\": \"ullamco officia ad nisi commodo\"\n         }\n        }\n       }\n      ],\n      \"type\": \"ipsum\",\n      \"crs\": {\n       \"type\": \"fugiat proident pariat\",\n       \"properties\": {\n        \"name\": \"in cillum fugiat\"\n       }\n      }\n     },\n     \"type\": \"incididunt dolore quis\",\n     \"id\": \"Ut labore\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"est eu culpa ipsum\",\n        \"crs\": {\n         \"type\": \"veniam\",\n         \"properties\": {\n          \"name\": \"qui aliqua Ut laborum Excepteur\"\n         }\n        }\n       },\n       {\n        \"type\": \"labore dolor anim\",\n        \"crs\": {\n         \"type\": \"elit commodo minim\",\n         \"properties\": {\n          \"name\": \"adipisicing sed in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"in aute elit velit dolor\",\n      \"crs\": {\n       \"type\": \"dolor labore ea magna\",\n       \"properties\": {\n        \"name\": \"voluptate dolor\"\n       }\n      }\n     },\n     \"type\": \"aute mollit dolore Lorem non\",\n     \"id\": \"do quis eiusmod ullamco in\"\n    }\n   ],\n   \"properties\": \"fugiat commodo\"\n  },\n  \"paymentMethodIds\": [\n   -50527531,\n   57499405\n  ],\n  \"entityId\": \"magna qui dolor\",\n  \"entityType\": 1,\n  \"name\": \"Ut incididunt cillum nisi exercitation\",\n  \"eTag\": \"qui eu fugiat do\",\n  \"operator\": {\n   \"telephone\": \"adipisicing in veniam\",\n   \"website\": \"quis ea deserunt fugiat\",\n   \"name\": \"ullamco dolore aliqua nisi\",\n   \"cardPaymentsExternalUrl\": \"Excepteur culpa est\",\n   \"paymentsTelephone\": \"tempor\"\n  },\n  \"onStreetParkingTypeIds\": [\n   7,\n   14\n  ],\n  \"facilityTypeIds\": [\n   -21720101,\n   86408713\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f1e73a47-f73d-412e-9318-6b6514834dbf",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e195b439-bf4f-4a4f-addc-b64a4ffebeb5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "187e8831-53c4-46cf-b14d-2a35cc4caf7e",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "079f69b2-7ae9-41e8-b32f-0c3f7425c620",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e4d3541a-8ac2-4f68-bb29-363e11f7cddf",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "d6060f6b-9d53-489c-bd65-e316a2c36d7f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"Duis sed s\",\n  \"entityType\": 4,\n  \"quotes\": [\n   {\n    \"cost\": 84710954.43446308,\n    \"currency\": \"anim id voluptate ullam\",\n    \"minCost\": 49540716.28200248,\n    \"minStayUntil\": \"do ea elit\",\n    \"canExtendUntil\": \"incididunt ut\",\n    \"pricedUntil\": \"id in est incididunt nulla\",\n    \"noReturnUntil\": \"amet dolor\",\n    \"freeUntil\": \"Lorem cillum reprehenderit sint\",\n    \"becomesFreeAt\": \"Excepteur eu sit\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     60924273,\n     -411458\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"do ut proident\",\n    \"surcharge\": {\n     \"value\": 46374715.5929448,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -24788143\n     }\n    }\n   },\n   {\n    \"cost\": 18021110.227476805,\n    \"currency\": \"non culpa ut nisi\",\n    \"minCost\": 50735767.43888813,\n    \"minStayUntil\": \"in velit nisi sun\",\n    \"canExtendUntil\": \"aute Duis Excepteur incididunt\",\n    \"pricedUntil\": \"sed in cupidatat \",\n    \"noReturnUntil\": \"occaecat ex in Excepteur\",\n    \"freeUntil\": \"veniam Duis exercitation\",\n    \"becomesFreeAt\": \"ex fugiat ut quis proident\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -64127827,\n     95471218\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"irure reprehenderit\",\n    \"surcharge\": {\n     \"value\": -80938322.01863638,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 73602581\n     }\n    }\n   }\n  ],\n  \"distance\": -6668016.48414737,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 1,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -96671482,\n    86875757\n   ]\n  },\n  \"entityETag\": \"id irure\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bcb76a57-5716-4e89-a4dd-4f3cdc4d20b0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "da4bf7e9-d5fd-4653-9aca-8c4deb5457c4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1004dc07-0c1c-41c9-8ff4-b5f92e20fd7a",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4a908fc4-4f89-4793-944f-3854bc8dc0e8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "966a848c-8606-4fad-ae9b-ffbb99da27e4",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "286673f0-b3e1-4f1a-bd54-e31000322353",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"Excepteur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"minim eu exercitation proident aliqua\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 68859796.51978603,\n      \"currency\": \"veniam \",\n      \"minCost\": -43075402.98481767,\n      \"minStayUntil\": \"aute\",\n      \"canExtendUntil\": \"aliqua ullamco consectetur ex ut\",\n      \"pricedUntil\": \"tempor laboris\",\n      \"noReturnUntil\": \"et\",\n      \"freeUntil\": \"culpa dolore incididu\",\n      \"becomesFreeAt\": \"cillum do\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -77529703,\n       90110691\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"incididunt ut anim esse\",\n      \"surcharge\": {\n       \"value\": 26878329.648014084,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 35364192\n       }\n      }\n     },\n     {\n      \"cost\": 97155921.23364046,\n      \"currency\": \"re\",\n      \"minCost\": 50928796.57061654,\n      \"minStayUntil\": \"incididunt minim\",\n      \"canExtendUntil\": \"incididunt elit\",\n      \"pricedUntil\": \"ea\",\n      \"noReturnUntil\": \"ad incididunt\",\n      \"freeUntil\": \"elit aliquip\",\n      \"becomesFreeAt\": \"Ut minim adipisicing\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -25820409,\n       -18610180\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"eiusmod fugiat ullamco veniam\",\n      \"surcharge\": {\n       \"value\": -31951263.64724566,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 81581358\n       }\n      }\n     }\n    ],\n    \"distance\": 80740815.18205908,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      71058728,\n      -87899498\n     ]\n    },\n    \"entityETag\": \"anim \"\n   },\n   {\n    \"entityId\": \"sint reprehenderit deserunt dolore\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": 1666572.1458797753,\n      \"currency\": \"ipsum\",\n      \"minCost\": 85409134.67575786,\n      \"minStayUntil\": \"cupidatat aliqua al\",\n      \"canExtendUntil\": \"lab\",\n      \"pricedUntil\": \"cil\",\n      \"noReturnUntil\": \"occaecat dolor dolor ad proident\",\n      \"freeUntil\": \"cupidatat\",\n      \"becomesFreeAt\": \"reprehenderit eu Excepteur\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       66058181,\n       92049397\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ipsum \",\n      \"surcharge\": {\n       \"value\": 97710215.02263045,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 82018720\n       }\n      }\n     },\n     {\n      \"cost\": -68632172.7162599,\n      \"currency\": \"est consequat\",\n      \"minCost\": 10294117.046486929,\n      \"minStayUntil\": \"exercitation elit\",\n      \"canExtendUntil\": \"amet d\",\n      \"pricedUntil\": \"elit minim dolor laborum\",\n      \"noReturnUntil\": \"commodo irure eu\",\n      \"freeUntil\": \"ea\",\n      \"becomesFreeAt\": \"reprehenderit Ut pro\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       39516792,\n       -81938318\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Duis aliqua officia laboris\",\n      \"surcharge\": {\n       \"value\": -26039458.182884127,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -12621642\n       }\n      }\n     }\n    ],\n    \"distance\": 17349826.401024252,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -40455386,\n      58349395\n     ]\n    },\n    \"entityETag\": \"amet Duis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7868b467-3090-401c-beed-fd55e364318f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "11d65e2b-ee08-46c9-9387-24cb9c1d5594",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "81ace76a-e66d-4ec8-a8c3-80574e1492ff",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b8a53f5d-aa48-4c40-b97c-d5e89281b76a",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "2b0508ff-3fc1-4f69-86cb-f0c599cc61ed",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"non dolore veniam\",\n    \"cardPaymentsExternalUrl\": \"voluptate\",\n    \"paymentsTelephone\": \"incididunt deserunt\"\n   },\n   {\n    \"name\": \"sed\",\n    \"cardPaymentsExternalUrl\": \"ut Lorem\",\n    \"paymentsTelephone\": \"eu dolore irure\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2fa5d8b6-d400-473e-a4a5-ffcbb04165d0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d10e1860-5863-44af-9df4-f296788733dd",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4d64304d-bc66-4827-a11b-47d81ac69560",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "06783e49-cde7-47e9-a06b-9184d63bf890",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6881a127-352c-47f4-848a-8c0f5f048132",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8293f83b-4a0f-43ae-a03b-c131e301124b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"aliqua ea\",\n     \"crs\": {\n      \"type\": \"do cupidatat nostrud\",\n      \"properties\": {\n       \"name\": \"qui esse non pariatur elit\"\n      }\n     }\n    },\n    {\n     \"type\": \"in\",\n     \"crs\": {\n      \"type\": \"aliquip\",\n      \"properties\": {\n       \"name\": \"in ex pariatur\"\n      }\n     }\n    }\n   ],\n   \"type\": \"pariatur nisi dolor\",\n   \"crs\": {\n    \"type\": \"magna dolor incididunt\",\n    \"properties\": {\n     \"name\": \"sed est Lorem occaecat cupidatat\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"exercitation eiusmod in consect\"\n   },\n   {\n    \"message\": \"ex sit minim elit\"\n   }\n  ],\n  \"authorityId\": \"dolor ut sint\",\n  \"zoneType\": 2,\n  \"entityType\": 2,\n  \"entityId\": \"aute velit ipsu\",\n  \"name\": \"in\",\n  \"eTag\": \"qui culpa nulla voluptate\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0440db74-7638-456b-81de-a78dcb3b136a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "001d7a56-973d-4932-bc07-6db96394bd86",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "90cdf17d-0e25-48b9-81dd-1f7704b3af62",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"officia tempor Excepteur ir\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "35a8d006-6135-4b00-ae9d-bfcf68fadebc",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "da23b137-98d8-42c2-9581-4c4f0b09550c",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut\",\n            \"properties\": {\n                \"name\": \"incididunt ex c\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "a3eeeb1f-74c1-41bb-873d-c25bb0d3e225",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse ut Lorem consequat ullamco\",\n            \"properties\": {\n                \"name\": \"sunt ulla\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"amet magna off\",\n    \"entityETag\": \"ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 18,\n      \"specialRestrictionTypeId\": -73434857,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ea se\",\n        \"endTime\": \"proident\",\n        \"maxStay\": -35065325\n       },\n       {\n        \"startTime\": \"proident officia sint\",\n        \"endTime\": \"voluptate Excepteur Lorem amet veniam\",\n        \"maxStay\": -37252566\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 11,\n      \"specialRestrictionTypeId\": 9182204,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed qui\",\n        \"endTime\": \"sint sit dolore\",\n        \"maxStay\": -82058176\n       },\n       {\n        \"startTime\": \"elit velit aliqua esse\",\n        \"endTime\": \"cillum sint occaecat in deserunt\",\n        \"maxStay\": 46548419\n       }\n      ]\n     }\n    ],\n    \"distance\": -61425195.889385045\n   },\n   {\n    \"entityId\": \"elit sit voluptate fugiat\",\n    \"entityETag\": \"irure adipisicing\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 3,\n      \"specialRestrictionTypeId\": -15676650,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis\",\n        \"endTime\": \"cupidatat Duis commodo\",\n        \"maxStay\": -96878455\n       },\n       {\n        \"startTime\": \"et sint\",\n        \"endTime\": \"non\",\n        \"maxStay\": 4959478\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 5,\n      \"specialRestrictionTypeId\": -42310102,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"et laborum\",\n        \"maxStay\": -44485943\n       },\n       {\n        \"startTime\": \"aliquip cupidatat dolore non ve\",\n        \"endTime\": \"id sit magna\",\n        \"maxStay\": -38665652\n       }\n      ]\n     }\n    ],\n    \"distance\": 41367312.14127445\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"adipisicing\",\n   \"entityETag\": \"dolore nostrud minim Excepteur magna\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 10,\n     \"specialRestrictionTypeId\": 56149234,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"qui deserunt elit\",\n       \"endTime\": \"sed\",\n       \"maxStay\": -33711903\n      },\n      {\n       \"startTime\": \"in est\",\n       \"endTime\": \"non in\",\n       \"maxStay\": -63987196\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 14,\n     \"specialRestrictionTypeId\": -69376785,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"qui ut incididunt\",\n       \"endTime\": \"nulla in tempor elit reprehenderit\",\n       \"maxStay\": 11089115\n      },\n      {\n       \"startTime\": \"aliqua reprehenderit dolor\",\n       \"endTime\": \"incididunt sint dolor\",\n       \"maxStay\": 70719431\n      }\n     ]\n    }\n   ],\n   \"distance\": 71205730.72614026\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dd1820d0-e7ae-4339-af87-d67640020c2d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse ut Lorem consequat ullamco\",\n            \"properties\": {\n                \"name\": \"sunt ulla\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b80009ab-bce3-4ccd-b37c-7013cec0ce44",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse ut Lorem consequat ullamco\",\n            \"properties\": {\n                \"name\": \"sunt ulla\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1a5fb9f5-3128-4141-818e-8ce7d0ac8de0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse ut Lorem consequat ullamco\",\n            \"properties\": {\n                \"name\": \"sunt ulla\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "966639e0-479d-4b40-8133-af4e4b2146d3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse ut Lorem consequat ullamco\",\n            \"properties\": {\n                \"name\": \"sunt ulla\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "82025f16-91a9-4986-bf45-f78cdb9a0b47",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        8,\n        17\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "06a92c72-0b72-4e74-8e40-07d38e774ef9",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        10\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"veniam adipisicing do\",\n      \"city\": \"reprehenderit occaecat\",\n      \"country\": \"elit minim nostrud officia\",\n      \"postcode\": \"amet consectetur\"\n     },\n     \"locationCode\": \"do veniam proident in dolore\",\n     \"totalCapacity\": 97298183,\n     \"zoneId\": \"amet ullamco\",\n     \"authorityId\": \"occaecat nisi amet nostrud aliqua\",\n     \"features\": {\n      \"type\": \"aute sit cupidatat adipisicing\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"veni\",\n           \"crs\": {\n            \"type\": \"cillum\",\n            \"properties\": {\n             \"name\": \"occaecat incididunt\"\n            }\n           }\n          },\n          {\n           \"type\": \"cillum laborum\",\n           \"crs\": {\n            \"type\": \"ipsum Duis\",\n            \"properties\": {\n             \"name\": \"ex sed\"\n            }\n           }\n          }\n         ],\n         \"type\": \"fugiat enim laboris adipisicing dolore\",\n         \"crs\": {\n          \"type\": \"incididunt deserunt\",\n          \"properties\": {\n           \"name\": \"magna Duis tempor consectetur\"\n          }\n         }\n        },\n        \"type\": \"elit\",\n        \"id\": \"veniam labore nisi ad\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore veniam non fugiat sint\",\n           \"crs\": {\n            \"type\": \"est velit proident aute\",\n            \"properties\": {\n             \"name\": \"Lorem dolore ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"adipi\",\n           \"crs\": {\n            \"type\": \"sed sunt dolor laboris anim\",\n            \"properties\": {\n             \"name\": \"reprehenderit fugiat sit cons\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ipsum et Excepteur non do\",\n         \"crs\": {\n          \"type\": \"et\",\n          \"properties\": {\n           \"name\": \"pariatur commodo reprehenderit\"\n          }\n         }\n        },\n        \"type\": \"\",\n        \"id\": \"Duis\"\n       }\n      ],\n      \"properties\": \"laborum nisi nostrud\"\n     },\n     \"paymentMethodIds\": [\n      98891399,\n      -89485321\n     ],\n     \"entityId\": \"deserunt cupidatat ea\",\n     \"entityType\": 4,\n     \"name\": \"velit pariatur\",\n     \"eTag\": \"eu\",\n     \"operator\": {\n      \"telephone\": \"fugiat\",\n      \"website\": \"ut commodo\",\n      \"name\": \"sed et id\",\n      \"cardPaymentsExternalUrl\": \"Excepteur laboris in\",\n      \"paymentsTelephone\": \"incididunt elit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      4,\n      15\n     ],\n     \"facilityTypeIds\": [\n      -41028489,\n      61354809\n     ]\n    },\n    \"distance\": 60343420.50758162\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"sit culpa\",\n      \"city\": \"ex reprehenderit esse veniam\",\n      \"country\": \"proident ea\",\n      \"postcode\": \"sint Lorem dolore\"\n     },\n     \"locationCode\": \"Duis minim deserunt\",\n     \"totalCapacity\": 25559493,\n     \"zoneId\": \"ut mollit ea\",\n     \"authorityId\": \"qui Ut\",\n     \"features\": {\n      \"type\": \"laborum ea est sint ut\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ea\",\n           \"crs\": {\n            \"type\": \"nostrud do cillum\",\n            \"properties\": {\n             \"name\": \"Duis nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis aliquip culpa\",\n           \"crs\": {\n            \"type\": \"labore\",\n            \"properties\": {\n             \"name\": \"a\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ipsum qui ullamco\",\n         \"crs\": {\n          \"type\": \"anim\",\n          \"properties\": {\n           \"name\": \"consequat elit veniam consectetur\"\n          }\n         }\n        },\n        \"type\": \"quis cupidatat nulla\",\n        \"id\": \"anim\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor laboris cupidatat\",\n           \"crs\": {\n            \"type\": \"incididunt ut magna\",\n            \"properties\": {\n             \"name\": \"eiusmod ut amet occaecat\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor elit dolore sed\",\n           \"crs\": {\n            \"type\": \"Duis\",\n            \"properties\": {\n             \"name\": \"laborum minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore non dolore sed\",\n         \"crs\": {\n          \"type\": \"nulla quis ipsum laboris cillum\",\n          \"properties\": {\n           \"name\": \"ea\"\n          }\n         }\n        },\n        \"type\": \"veli\",\n        \"id\": \"eu nostrud Lorem\"\n       }\n      ],\n      \"properties\": \"irure ea minim fugiat\"\n     },\n     \"paymentMethodIds\": [\n      52377393,\n      -8069604\n     ],\n     \"entityId\": \"adipisicing ips\",\n     \"entityType\": 2,\n     \"name\": \"Lorem velit fugiat in\",\n     \"eTag\": \"nisi reprehenderit nostrud dolore\",\n     \"operator\": {\n      \"telephone\": \"sit pariatur\",\n      \"website\": \"l\",\n      \"name\": \"dolore velit\",\n      \"cardPaymentsExternalUrl\": \"non dolor\",\n      \"paymentsTelephone\": \"dolore consectetur consequat ut\"\n     },\n     \"onStreetParkingTypeIds\": [\n      10,\n      13\n     ],\n     \"facilityTypeIds\": [\n      -29731042,\n      29068430\n     ]\n    },\n    \"distance\": -16532471.187856317\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "aee8eb09-4cce-4268-8567-f807a15239af",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        10\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b3d47027-66b0-4775-9a5a-8c6bd1cfdca6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        10\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9f4ef141-580f-4651-83d8-f91c133fca91",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        10\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "72c2489c-98fb-47e8-9ddc-f2a5cab653c4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        10\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e56a6424-4c9d-4adb-b265-463e904c2db5",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non incididunt\",\n            \"properties\": {\n                \"name\": \"consequat non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        9,\n        8\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "b8e764c2-5834-4f26-baaa-48823f23e40b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor sit dolore et\",\n            \"properties\": {\n                \"name\": \"fugiat consequat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        10,\n        5\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"veniam adipisicing do\",\n      \"city\": \"reprehenderit occaecat\",\n      \"country\": \"elit minim nostrud officia\",\n      \"postcode\": \"amet consectetur\"\n     },\n     \"locationCode\": \"do veniam proident in dolore\",\n     \"totalCapacity\": 97298183,\n     \"zoneId\": \"amet ullamco\",\n     \"authorityId\": \"occaecat nisi amet nostrud aliqua\",\n     \"features\": {\n      \"type\": \"aute sit cupidatat adipisicing\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"veni\",\n           \"crs\": {\n            \"type\": \"cillum\",\n            \"properties\": {\n             \"name\": \"occaecat incididunt\"\n            }\n           }\n          },\n          {\n           \"type\": \"cillum laborum\",\n           \"crs\": {\n            \"type\": \"ipsum Duis\",\n            \"properties\": {\n             \"name\": \"ex sed\"\n            }\n           }\n          }\n         ],\n         \"type\": \"fugiat enim laboris adipisicing dolore\",\n         \"crs\": {\n          \"type\": \"incididunt deserunt\",\n          \"properties\": {\n           \"name\": \"magna Duis tempor consectetur\"\n          }\n         }\n        },\n        \"type\": \"elit\",\n        \"id\": \"veniam labore nisi ad\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore veniam non fugiat sint\",\n           \"crs\": {\n            \"type\": \"est velit proident aute\",\n            \"properties\": {\n             \"name\": \"Lorem dolore ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"adipi\",\n           \"crs\": {\n            \"type\": \"sed sunt dolor laboris anim\",\n            \"properties\": {\n             \"name\": \"reprehenderit fugiat sit cons\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ipsum et Excepteur non do\",\n         \"crs\": {\n          \"type\": \"et\",\n          \"properties\": {\n           \"name\": \"pariatur commodo reprehenderit\"\n          }\n         }\n        },\n        \"type\": \"\",\n        \"id\": \"Duis\"\n       }\n      ],\n      \"properties\": \"laborum nisi nostrud\"\n     },\n     \"paymentMethodIds\": [\n      98891399,\n      -89485321\n     ],\n     \"entityId\": \"deserunt cupidatat ea\",\n     \"entityType\": 4,\n     \"name\": \"velit pariatur\",\n     \"eTag\": \"eu\",\n     \"operator\": {\n      \"telephone\": \"fugiat\",\n      \"website\": \"ut commodo\",\n      \"name\": \"sed et id\",\n      \"cardPaymentsExternalUrl\": \"Excepteur laboris in\",\n      \"paymentsTelephone\": \"incididunt elit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      4,\n      15\n     ],\n     \"facilityTypeIds\": [\n      -41028489,\n      61354809\n     ]\n    },\n    \"distance\": 60343420.50758162\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"sit culpa\",\n      \"city\": \"ex reprehenderit esse veniam\",\n      \"country\": \"proident ea\",\n      \"postcode\": \"sint Lorem dolore\"\n     },\n     \"locationCode\": \"Duis minim deserunt\",\n     \"totalCapacity\": 25559493,\n     \"zoneId\": \"ut mollit ea\",\n     \"authorityId\": \"qui Ut\",\n     \"features\": {\n      \"type\": \"laborum ea est sint ut\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ea\",\n           \"crs\": {\n            \"type\": \"nostrud do cillum\",\n            \"properties\": {\n             \"name\": \"Duis nostrud\"\n            }\n           }\n          },\n          {\n           \"type\": \"quis aliquip culpa\",\n           \"crs\": {\n            \"type\": \"labore\",\n            \"properties\": {\n             \"name\": \"a\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ipsum qui ullamco\",\n         \"crs\": {\n          \"type\": \"anim\",\n          \"properties\": {\n           \"name\": \"consequat elit veniam consectetur\"\n          }\n         }\n        },\n        \"type\": \"quis cupidatat nulla\",\n        \"id\": \"anim\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolor laboris cupidatat\",\n           \"crs\": {\n            \"type\": \"incididunt ut magna\",\n            \"properties\": {\n             \"name\": \"eiusmod ut amet occaecat\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor elit dolore sed\",\n           \"crs\": {\n            \"type\": \"Duis\",\n            \"properties\": {\n             \"name\": \"laborum minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"dolore non dolore sed\",\n         \"crs\": {\n          \"type\": \"nulla quis ipsum laboris cillum\",\n          \"properties\": {\n           \"name\": \"ea\"\n          }\n         }\n        },\n        \"type\": \"veli\",\n        \"id\": \"eu nostrud Lorem\"\n       }\n      ],\n      \"properties\": \"irure ea minim fugiat\"\n     },\n     \"paymentMethodIds\": [\n      52377393,\n      -8069604\n     ],\n     \"entityId\": \"adipisicing ips\",\n     \"entityType\": 2,\n     \"name\": \"Lorem velit fugiat in\",\n     \"eTag\": \"nisi reprehenderit nostrud dolore\",\n     \"operator\": {\n      \"telephone\": \"sit pariatur\",\n      \"website\": \"l\",\n      \"name\": \"dolore velit\",\n      \"cardPaymentsExternalUrl\": \"non dolor\",\n      \"paymentsTelephone\": \"dolore consectetur consequat ut\"\n     },\n     \"onStreetParkingTypeIds\": [\n      10,\n      13\n     ],\n     \"facilityTypeIds\": [\n      -29731042,\n      29068430\n     ]\n    },\n    \"distance\": -16532471.187856317\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4934b774-8a9b-4647-8786-85e42330f357",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor sit dolore et\",\n            \"properties\": {\n                \"name\": \"fugiat consequat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        10,\n        5\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1cd6091a-4f10-4827-82f6-2b8fee1c40e6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor sit dolore et\",\n            \"properties\": {\n                \"name\": \"fugiat consequat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        10,\n        5\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "832a34a1-b8d8-4385-b101-71e3444b1e9f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor sit dolore et\",\n            \"properties\": {\n                \"name\": \"fugiat consequat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        10,\n        5\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3255820e-d827-40f1-87e7-b54048e7ffc6",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor sit dolore et\",\n            \"properties\": {\n                \"name\": \"fugiat consequat\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        10,\n        5\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5ca3045d-48a7-42f2-95ea-64f72f22faf9",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fb1d2032-e2e9-437d-a2fa-6cd1670baf12",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"sed velit\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"laboris\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 91750370.78808635,\n      \"currency\": \"commodo anim voluptate\",\n      \"minCost\": -20900798.09116921,\n      \"minStayUntil\": \"in velit reprehenderit s\",\n      \"canExtendUntil\": \"mollit incididunt\",\n      \"pricedUntil\": \"ex ullamco pariatur irure\",\n      \"noReturnUntil\": \"commodo Excepteur consectetur dolor\",\n      \"freeUntil\": \"eu irure\",\n      \"becomesFreeAt\": \"ullamco occaecat ex\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -38944476,\n       -37152018\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sed Duis nostrud\",\n      \"surcharge\": {\n       \"value\": -27128532.288119316,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -50552997\n       }\n      }\n     },\n     {\n      \"cost\": 22779047.398331583,\n      \"currency\": \"velit consectetur\",\n      \"minCost\": -50739612.939857006,\n      \"minStayUntil\": \"pariatur ad\",\n      \"canExtendUntil\": \"pariatur sed mollit ipsum est\",\n      \"pricedUntil\": \"ut qui id voluptate\",\n      \"noReturnUntil\": \"officia mollit cupidatat\",\n      \"freeUntil\": \"qui in adipisicing\",\n      \"becomesFreeAt\": \"occaecat deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -55972008,\n       18986301\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"velit\",\n      \"surcharge\": {\n       \"value\": 10584339.14088419,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 15436023\n       }\n      }\n     }\n    ],\n    \"distance\": 81258896.00597525,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -33038279,\n      18239289\n     ]\n    },\n    \"entityETag\": \"quis anim ipsum\"\n   },\n   {\n    \"entityId\": \"quis nisi dolor\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 26016144.310001895,\n      \"currency\": \"nisi cillum minim dolore\",\n      \"minCost\": -20895118.823628515,\n      \"minStayUntil\": \"sit\",\n      \"canExtendUntil\": \"cillum aliqua\",\n      \"pricedUntil\": \"enim elit magna Excepteur ut\",\n      \"noReturnUntil\": \"labore\",\n      \"freeUntil\": \"ad esse labore et\",\n      \"becomesFreeAt\": \"dolore non voluptate dolor\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       10686617,\n       75388293\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sed ullamco sit Lorem\",\n      \"surcharge\": {\n       \"value\": 20941389.84606366,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 12970114\n       }\n      }\n     },\n     {\n      \"cost\": -97542420.55486691,\n      \"currency\": \"ven\",\n      \"minCost\": -99401616.2053601,\n      \"minStayUntil\": \"et\",\n      \"canExtendUntil\": \"occaecat irure veni\",\n      \"pricedUntil\": \"officia reprehenderit\",\n      \"noReturnUntil\": \"incididunt\",\n      \"freeUntil\": \"labore\",\n      \"becomesFreeAt\": \"adipisicing pariatur ea\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -97402297,\n       87596153\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"\",\n      \"surcharge\": {\n       \"value\": 19093751.09822084,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 75762989\n       }\n      }\n     }\n    ],\n    \"distance\": -79287793.2343297,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -48389407,\n      -73819595\n     ]\n    },\n    \"entityETag\": \"nulla nisi labore nostrud amet\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a7f4e6bb-fb38-4da1-93eb-a92111934376",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e3815382-77a3-46f9-82ce-2fbaa17f3366",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bd808bed-f14c-4246-857e-80991f9ef385",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "20202a04-b861-4a74-8dc2-a45b8fa67501",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e004da70-d6ad-4f08-bf27-7a56243da5be",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla incididunt\",\n            \"properties\": {\n                \"name\": \"sint ut ad velit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "879ea088-b5f6-4b4f-b21d-febcae388c31",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute eiusmod\",\n            \"properties\": {\n                \"name\": \"culpa Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"sed velit\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"laboris\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 91750370.78808635,\n      \"currency\": \"commodo anim voluptate\",\n      \"minCost\": -20900798.09116921,\n      \"minStayUntil\": \"in velit reprehenderit s\",\n      \"canExtendUntil\": \"mollit incididunt\",\n      \"pricedUntil\": \"ex ullamco pariatur irure\",\n      \"noReturnUntil\": \"commodo Excepteur consectetur dolor\",\n      \"freeUntil\": \"eu irure\",\n      \"becomesFreeAt\": \"ullamco occaecat ex\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -38944476,\n       -37152018\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sed Duis nostrud\",\n      \"surcharge\": {\n       \"value\": -27128532.288119316,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -50552997\n       }\n      }\n     },\n     {\n      \"cost\": 22779047.398331583,\n      \"currency\": \"velit consectetur\",\n      \"minCost\": -50739612.939857006,\n      \"minStayUntil\": \"pariatur ad\",\n      \"canExtendUntil\": \"pariatur sed mollit ipsum est\",\n      \"pricedUntil\": \"ut qui id voluptate\",\n      \"noReturnUntil\": \"officia mollit cupidatat\",\n      \"freeUntil\": \"qui in adipisicing\",\n      \"becomesFreeAt\": \"occaecat deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -55972008,\n       18986301\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"velit\",\n      \"surcharge\": {\n       \"value\": 10584339.14088419,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 15436023\n       }\n      }\n     }\n    ],\n    \"distance\": 81258896.00597525,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -33038279,\n      18239289\n     ]\n    },\n    \"entityETag\": \"quis anim ipsum\"\n   },\n   {\n    \"entityId\": \"quis nisi dolor\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 26016144.310001895,\n      \"currency\": \"nisi cillum minim dolore\",\n      \"minCost\": -20895118.823628515,\n      \"minStayUntil\": \"sit\",\n      \"canExtendUntil\": \"cillum aliqua\",\n      \"pricedUntil\": \"enim elit magna Excepteur ut\",\n      \"noReturnUntil\": \"labore\",\n      \"freeUntil\": \"ad esse labore et\",\n      \"becomesFreeAt\": \"dolore non voluptate dolor\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       10686617,\n       75388293\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sed ullamco sit Lorem\",\n      \"surcharge\": {\n       \"value\": 20941389.84606366,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 12970114\n       }\n      }\n     },\n     {\n      \"cost\": -97542420.55486691,\n      \"currency\": \"ven\",\n      \"minCost\": -99401616.2053601,\n      \"minStayUntil\": \"et\",\n      \"canExtendUntil\": \"occaecat irure veni\",\n      \"pricedUntil\": \"officia reprehenderit\",\n      \"noReturnUntil\": \"incididunt\",\n      \"freeUntil\": \"labore\",\n      \"becomesFreeAt\": \"adipisicing pariatur ea\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -97402297,\n       87596153\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"\",\n      \"surcharge\": {\n       \"value\": 19093751.09822084,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 75762989\n       }\n      }\n     }\n    ],\n    \"distance\": -79287793.2343297,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -48389407,\n      -73819595\n     ]\n    },\n    \"entityETag\": \"nulla nisi labore nostrud amet\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6aecfe0f-f69d-43d7-b80f-e69f80e7cf14",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute eiusmod\",\n            \"properties\": {\n                \"name\": \"culpa Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "56d4dfe8-6aa5-4c21-9756-ee61014cc2d1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute eiusmod\",\n            \"properties\": {\n                \"name\": \"culpa Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "16e0ebcd-6a61-45b5-9704-6e1d7caa3291",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute eiusmod\",\n            \"properties\": {\n                \"name\": \"culpa Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "63a41f52-9096-4fe1-aa2a-6f0eacdf438b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute eiusmod\",\n            \"properties\": {\n                \"name\": \"culpa Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "870ca865-f400-42b5-a73f-37d9e0e77e0a",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in elit incididunt nisi minim\",\n            \"properties\": {\n                \"name\": \"quis sit ut aliquip\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "229b98a3-cf76-476b-b9a3-d16f62cb4797",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip labore\",\n            \"properties\": {\n                \"name\": \"Ut non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"ad nisi aliquip aliqua\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"mollit occaecat\",\n     \"crs\": {\n      \"type\": \"cupidatat velit ut et sint\",\n      \"properties\": {\n       \"name\": \"sint enim tempor esse\"\n      }\n     }\n    },\n    \"type\": \"cupidatat reprehenderit dolore\",\n    \"id\": \"culpa tempor\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"qui aute do \",\n     \"crs\": {\n      \"type\": \"cillum Lorem\",\n      \"properties\": {\n       \"name\": \"cillum volu\"\n      }\n     }\n    },\n    \"type\": \"id veniam irure\",\n    \"id\": \"deserunt dolore in ullamco\"\n   }\n  ],\n  \"properties\": \"do Duis\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5f315f04-1fd6-4da2-9a40-c2b79f0910bd",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip labore\",\n            \"properties\": {\n                \"name\": \"Ut non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4fca6f38-b271-472e-a2d1-9f305fba6bc3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip labore\",\n            \"properties\": {\n                \"name\": \"Ut non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "afa971fb-e81c-4ebf-84cb-a5d674dee8bb",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip labore\",\n            \"properties\": {\n                \"name\": \"Ut non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3dec0b64-0371-4576-bb09-26cbfdf0f3fa",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip labore\",\n            \"properties\": {\n                \"name\": \"Ut non\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4b4b4513-3fb1-432e-8aa0-f5877e4de03f",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim Duis\",\n            \"properties\": {\n                \"name\": \"commodo eiusmod eu culpa\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        13,\n        13\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "480ae462-a3b8-4393-bcf7-4842eff3828c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex laborum labore\",\n            \"properties\": {\n                \"name\": \"in moll\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        3,\n        4\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"amet magna off\",\n    \"entityETag\": \"ut\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 18,\n      \"specialRestrictionTypeId\": -73434857,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ea se\",\n        \"endTime\": \"proident\",\n        \"maxStay\": -35065325\n       },\n       {\n        \"startTime\": \"proident officia sint\",\n        \"endTime\": \"voluptate Excepteur Lorem amet veniam\",\n        \"maxStay\": -37252566\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 11,\n      \"specialRestrictionTypeId\": 9182204,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"sed qui\",\n        \"endTime\": \"sint sit dolore\",\n        \"maxStay\": -82058176\n       },\n       {\n        \"startTime\": \"elit velit aliqua esse\",\n        \"endTime\": \"cillum sint occaecat in deserunt\",\n        \"maxStay\": 46548419\n       }\n      ]\n     }\n    ],\n    \"distance\": -61425195.889385045\n   },\n   {\n    \"entityId\": \"elit sit voluptate fugiat\",\n    \"entityETag\": \"irure adipisicing\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 3,\n      \"specialRestrictionTypeId\": -15676650,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis\",\n        \"endTime\": \"cupidatat Duis commodo\",\n        \"maxStay\": -96878455\n       },\n       {\n        \"startTime\": \"et sint\",\n        \"endTime\": \"non\",\n        \"maxStay\": 4959478\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 5,\n      \"specialRestrictionTypeId\": -42310102,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"et laborum\",\n        \"maxStay\": -44485943\n       },\n       {\n        \"startTime\": \"aliquip cupidatat dolore non ve\",\n        \"endTime\": \"id sit magna\",\n        \"maxStay\": -38665652\n       }\n      ]\n     }\n    ],\n    \"distance\": 41367312.14127445\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"adipisicing\",\n   \"entityETag\": \"dolore nostrud minim Excepteur magna\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 10,\n     \"specialRestrictionTypeId\": 56149234,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"qui deserunt elit\",\n       \"endTime\": \"sed\",\n       \"maxStay\": -33711903\n      },\n      {\n       \"startTime\": \"in est\",\n       \"endTime\": \"non in\",\n       \"maxStay\": -63987196\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 14,\n     \"specialRestrictionTypeId\": -69376785,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"qui ut incididunt\",\n       \"endTime\": \"nulla in tempor elit reprehenderit\",\n       \"maxStay\": 11089115\n      },\n      {\n       \"startTime\": \"aliqua reprehenderit dolor\",\n       \"endTime\": \"incididunt sint dolor\",\n       \"maxStay\": 70719431\n      }\n     ]\n    }\n   ],\n   \"distance\": 71205730.72614026\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "111b5234-315a-4f50-b039-e279dc56a204",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex laborum labore\",\n            \"properties\": {\n                \"name\": \"in moll\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        3,\n        4\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"amet\",\n \"errors\": [\n  {\n   \"property\": \"in do id\",\n   \"code\": \"id adipisicing officia aliquip occaecat\",\n   \"message\": \"elit anim reprehenderit quis\"\n  },\n  {\n   \"property\": \"amet minim eiusmod\",\n   \"code\": \"quis occaecat\",\n   \"message\": \"aliquip labore\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "956b3632-813b-45f8-80b6-3adc1d209c18",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex laborum labore\",\n            \"properties\": {\n                \"name\": \"in moll\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        3,\n        4\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fbbf5404-8c49-4f43-8082-bf1524f52345",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex laborum labore\",\n            \"properties\": {\n                \"name\": \"in moll\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        3,\n        4\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8a08c0ed-482d-454c-b7d6-7e678dc3500b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ex laborum labore\",\n            \"properties\": {\n                \"name\": \"in moll\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        3,\n        4\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4a42c36f-bd52-4132-b211-263b3a524f2a",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "f4a23056-05d7-45b0-9280-f14647a66153",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6978a6d1-7cb1-409c-99a9-516d8f01b75b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9720031e-e338-485f-83a1-80654d3f56d6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4634303a-a5d2-4155-9849-1c02f8a86119",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "cba4250c-764e-473f-bb5e-03005f38164b",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
