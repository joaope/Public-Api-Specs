{
  "item": [
    {
      "id": "2e2ed262-660b-4689-ae78-4263d878f8af",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "5bdd596c-776b-4dca-99e8-45743274f890",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"consectetur\"\n   },\n   {\n    \"message\": \"pariatur deserunt\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"adipisici\",\n    \"cardPaymentsExternalUrl\": \"qui nostrud est quis adipisicing\",\n    \"paymentsTelephone\": \"Duis in sunt labore pariatur\"\n   },\n   {\n    \"name\": \"consequat\",\n    \"cardPaymentsExternalUrl\": \"Lorem in cillum \",\n    \"paymentsTelephone\": \"pariatur\"\n   }\n  ],\n  \"entityType\": 2,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"voluptate irure\",\n     \"crs\": {\n      \"type\": \"commodo eu occaecat sed do\",\n      \"properties\": {\n       \"name\": \"proident laborum sint\"\n      }\n     }\n    },\n    {\n     \"type\": \"qui exercitation minim\",\n     \"crs\": {\n      \"type\": \"ad sunt voluptate in\",\n      \"properties\": {\n       \"name\": \"Lorem id consequat fugiat\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ea aute\",\n   \"crs\": {\n    \"type\": \"eu Duis\",\n    \"properties\": {\n     \"name\": \"aute ut Ut quis\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"ut ullamco cillum occaecat\",\n  \"name\": \"fugiat minim magna aute ex\",\n  \"eTag\": \"aliqua amet voluptate\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "25cbf3ac-4901-421b-9df0-c1d570976c3f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1827dfe5-cee9-4aee-bbfc-c229c13989b3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "477ab582-3e83-4d55-82a1-cafd8b1dcef7",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"consequat adipisicing Lorem magna\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dc685b1b-5aaa-4867-9980-062deb45b807",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1d985972-dfed-472b-846e-a089671a1bc2",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "a4796d5e-a567-4331-8843-f7e2e468b2d6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"officia do\",\n     \"city\": \"occaecat exercitation enim id\",\n     \"country\": \"nostrud sunt veniam non\",\n     \"postcode\": \"est ad exercitation\"\n    },\n    \"locationCode\": \"magna\",\n    \"totalCapacity\": 84538877,\n    \"zoneId\": \"est exercitation esse\",\n    \"authorityId\": \"cillum id\",\n    \"features\": {\n     \"type\": \"culpa est\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"laborum sed\",\n          \"crs\": {\n           \"type\": \"magna Excepteur occaecat\",\n           \"properties\": {\n            \"name\": \"eiusmod anim ipsum\"\n           }\n          }\n         },\n         {\n          \"type\": \"in ea deserunt\",\n          \"crs\": {\n           \"type\": \"ea id do\",\n           \"properties\": {\n            \"name\": \"eiusm\"\n           }\n          }\n         }\n        ],\n        \"type\": \"deserunt dolor eiusmod sit\",\n        \"crs\": {\n         \"type\": \"labore dolore laboris\",\n         \"properties\": {\n          \"name\": \"ut deserunt \"\n         }\n        }\n       },\n       \"type\": \"proident ullamco commodo\",\n       \"id\": \"laborum in aute qui volupta\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"dolor cillum sed\",\n          \"crs\": {\n           \"type\": \"sed velit et nostrud\",\n           \"properties\": {\n            \"name\": \"ex sunt id labore\"\n           }\n          }\n         },\n         {\n          \"type\": \"Excepteur sint dolore mollit\",\n          \"crs\": {\n           \"type\": \"Lorem dolor sit\",\n           \"properties\": {\n            \"name\": \"cupidatat Exce\"\n           }\n          }\n         }\n        ],\n        \"type\": \"culpa veniam\",\n        \"crs\": {\n         \"type\": \"commodo magna minim\",\n         \"properties\": {\n          \"name\": \"esse dolor\"\n         }\n        }\n       },\n       \"type\": \"dolor mollit consequat aliqua\",\n       \"id\": \"incididunt culpa nisi do cupidatat\"\n      }\n     ],\n     \"properties\": \"nulla officia tempo\"\n    },\n    \"paymentMethodIds\": [\n     -10371169,\n     4013955\n    ],\n    \"entityId\": \"anim elit\",\n    \"entityType\": 3,\n    \"name\": \"aute\",\n    \"eTag\": \"pariatur dolore labore aute est\"\n   },\n   {\n    \"address\": {\n     \"street\": \"Lorem magna deserunt\",\n     \"city\": \"voluptate\",\n     \"country\": \"do in\",\n     \"postcode\": \"Excepteur do\"\n    },\n    \"locationCode\": \"irure qui sunt cupidatat\",\n    \"totalCapacity\": -21365538,\n    \"zoneId\": \"consequat\",\n    \"authorityId\": \"qui exercitation dolore mag\",\n    \"features\": {\n     \"type\": \"proident cupidatat Excepteur\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"eiusmod cillum ex mollit consectetur\",\n          \"crs\": {\n           \"type\": \"incididunt dolor quis deserunt\",\n           \"properties\": {\n            \"name\": \"Ut do\"\n           }\n          }\n         },\n         {\n          \"type\": \"aliquip\",\n          \"crs\": {\n           \"type\": \"occaecat \",\n           \"properties\": {\n            \"name\": \"aliqua tempor irure quis\"\n           }\n          }\n         }\n        ],\n        \"type\": \"in dolore labore\",\n        \"crs\": {\n         \"type\": \"adipisicing\",\n         \"properties\": {\n          \"name\": \"cupidatat ea\"\n         }\n        }\n       },\n       \"type\": \"Excepteur ut dolore\",\n       \"id\": \"sed et\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"id ea ut\",\n          \"crs\": {\n           \"type\": \"dolore\",\n           \"properties\": {\n            \"name\": \"sunt velit exercitation\"\n           }\n          }\n         },\n         {\n          \"type\": \"veniam\",\n          \"crs\": {\n           \"type\": \"proident ut Ut\",\n           \"properties\": {\n            \"name\": \"reprehenderit laborum do\"\n           }\n          }\n         }\n        ],\n        \"type\": \"non in pariatur ad\",\n        \"crs\": {\n         \"type\": \"culpa amet \",\n         \"properties\": {\n          \"name\": \"occaecat nostrud\"\n         }\n        }\n       },\n       \"type\": \"nisi\",\n       \"id\": \"eu Duis\"\n      }\n     ],\n     \"properties\": \"irure aliquip in fugiat\"\n    },\n    \"paymentMethodIds\": [\n     95475649,\n     -45008400\n    ],\n    \"entityId\": \"laborum ea aliqua in amet\",\n    \"entityType\": 3,\n    \"name\": \"ea adipisicing\",\n    \"eTag\": \"est do ex tempor\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"veniam\",\n       \"crs\": {\n        \"type\": \"commodo mollit reprehenderit\",\n        \"properties\": {\n         \"name\": \"sit occaecat\"\n        }\n       }\n      },\n      {\n       \"type\": \"aliquip voluptate\",\n       \"crs\": {\n        \"type\": \"c\",\n        \"properties\": {\n         \"name\": \"velit tempor dolor qui reprehenderit\"\n        }\n       }\n      }\n     ],\n     \"type\": \"aliqua tempor sit\",\n     \"crs\": {\n      \"type\": \"sint deserunt\",\n      \"properties\": {\n       \"name\": \"proident dolore\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"aliquip pariatur sunt cillum labore\"\n     },\n     {\n      \"message\": \"adipisicing occaecat\"\n     }\n    ],\n    \"authorityId\": \"dolore dolore consequat occaecat et\",\n    \"zoneType\": 5,\n    \"entityType\": 1,\n    \"entityId\": \"reprehenderit eiusmod\",\n    \"name\": \"labore exercitation Ut\",\n    \"eTag\": \"officia laborum ut aliqua\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"qui fugiat\",\n       \"crs\": {\n        \"type\": \"sed dolore officia qui Duis\",\n        \"properties\": {\n         \"name\": \"aute \"\n        }\n       }\n      },\n      {\n       \"type\": \"sit laborum commodo\",\n       \"crs\": {\n        \"type\": \"aliquip Duis irure\",\n        \"properties\": {\n         \"name\": \"eiusmod \"\n        }\n       }\n      }\n     ],\n     \"type\": \"irure\",\n     \"crs\": {\n      \"type\": \"in consectetur Lorem ullamc\",\n      \"properties\": {\n       \"name\": \"enim\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"qui\"\n     },\n     {\n      \"message\": \"Ut\"\n     }\n    ],\n    \"authorityId\": \"pariatur\",\n    \"zoneType\": 5,\n    \"entityType\": 2,\n    \"entityId\": \"Excepteur aliqua labore amet\",\n    \"name\": \"elit adipisicing\",\n    \"eTag\": \"labore mollit ipsum ea\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"proident consequat\"\n     },\n     {\n      \"message\": \"est\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"in enim velit\",\n      \"cardPaymentsExternalUrl\": \"ullamco non enim\",\n      \"paymentsTelephone\": \"adipisicing labore\"\n     },\n     {\n      \"name\": \"occaecat nostrud ut\",\n      \"cardPaymentsExternalUrl\": \"sunt velit fug\",\n      \"paymentsTelephone\": \"occa\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"laborum dolor officia\",\n       \"crs\": {\n        \"type\": \"ut enim\",\n        \"properties\": {\n         \"name\": \"ipsum in culpa\"\n        }\n       }\n      },\n      {\n       \"type\": \"tempor enim Excepteur ea\",\n       \"crs\": {\n        \"type\": \"proident\",\n        \"properties\": {\n         \"name\": \"labore officia magna nisi\"\n        }\n       }\n      }\n     ],\n     \"type\": \"fugiat veniam aute occaecat consectetur\",\n     \"crs\": {\n      \"type\": \"cupidatat nostrud laboris Ut culpa\",\n      \"properties\": {\n       \"name\": \"deserunt id\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"eiusmod mollit\",\n    \"name\": \"sit et\",\n    \"eTag\": \"magna \"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"fug\"\n     },\n     {\n      \"message\": \"id\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"dolor ullamco amet minim\",\n      \"cardPaymentsExternalUrl\": \"eiusmod\",\n      \"paymentsTelephone\": \"sed enim\"\n     },\n     {\n      \"name\": \"officia enim\",\n      \"cardPaymentsExternalUrl\": \"occaecat qui officia\",\n      \"paymentsTelephone\": \"nulla occaecat culpa\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"commodo minim sed ea c\",\n       \"crs\": {\n        \"type\": \"incididunt do enim\",\n        \"properties\": {\n         \"name\": \"proident irure velit adipisicing\"\n        }\n       }\n      },\n      {\n       \"type\": \"adipisicing irure sint\",\n       \"crs\": {\n        \"type\": \"veniam\",\n        \"properties\": {\n         \"name\": \"tempor dolore officia incididunt\"\n        }\n       }\n      }\n     ],\n     \"type\": \"eiusmod deserunt ipsum\",\n     \"crs\": {\n      \"type\": \"nisi consectetur et commodo eu\",\n      \"properties\": {\n       \"name\": \"labore\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"et nisi Lorem nostrud sed\",\n    \"name\": \"ut officia laborum proident\",\n    \"eTag\": \"ut eu conse\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d28207c4-6a82-4af2-ae52-87104e3f0822",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"Ut officia\",\n \"errors\": [\n  {\n   \"property\": \"enim\",\n   \"code\": \"incididunt cupidatat magna id quis\",\n   \"message\": \"in proident ut\"\n  },\n  {\n   \"property\": \"dolore\",\n   \"code\": \"magna Duis ut incididunt\",\n   \"message\": \"sed\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5d44094c-7d99-4955-a4dc-89c7b43a9f0e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c4dc80e3-ed4a-436e-aa04-f49c1493eaa4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "549e91ea-04a5-4d1e-a7ec-bce3ccc4bcdf",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "36927635-2237-4cb9-9f48-e25faa8dda8b",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "936f9cd2-35bb-4328-b719-460693aa1df1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"do nisi cupidatat\",\n   \"city\": \"sint aliquip ea\",\n   \"country\": \"dolore id laboris\",\n   \"postcode\": \"adipisicing mollit incididunt\"\n  },\n  \"locationCode\": \"adipisicing ea\",\n  \"totalCapacity\": 71672067,\n  \"zoneId\": \"amet irure laboris\",\n  \"authorityId\": \"aliquip sunt aliqua\",\n  \"features\": {\n   \"type\": \"culpa consectetur\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"exercitation ullamco voluptate aute irure\",\n        \"crs\": {\n         \"type\": \"cillum incididunt sint\",\n         \"properties\": {\n          \"name\": \"do\"\n         }\n        }\n       },\n       {\n        \"type\": \"mollit enim\",\n        \"crs\": {\n         \"type\": \"qui incididunt ea\",\n         \"properties\": {\n          \"name\": \"ut labore irure\"\n         }\n        }\n       }\n      ],\n      \"type\": \"tempor\",\n      \"crs\": {\n       \"type\": \"sed \",\n       \"properties\": {\n        \"name\": \"sint irure sed\"\n       }\n      }\n     },\n     \"type\": \"voluptate minim officia\",\n     \"id\": \"cupidatat exercitation elit\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"mollit anim\",\n        \"crs\": {\n         \"type\": \"eiusmod veniam\",\n         \"properties\": {\n          \"name\": \"dolore cupidatat\"\n         }\n        }\n       },\n       {\n        \"type\": \"sed quis eu\",\n        \"crs\": {\n         \"type\": \"aliqua pariatur esse\",\n         \"properties\": {\n          \"name\": \"sit aute\"\n         }\n        }\n       }\n      ],\n      \"type\": \"officia est\",\n      \"crs\": {\n       \"type\": \"deserunt nulla culpa ea\",\n       \"properties\": {\n        \"name\": \"laborum amet fugiat dolore\"\n       }\n      }\n     },\n     \"type\": \"laboris dolor laborum sint non\",\n     \"id\": \"in proident Duis laborum aliquip\"\n    }\n   ],\n   \"properties\": \"quis dolor laboris\"\n  },\n  \"paymentMethodIds\": [\n   65259503,\n   53745628\n  ],\n  \"entityId\": \"adipisicing\",\n  \"entityType\": 3,\n  \"name\": \"nisi\",\n  \"eTag\": \"do dolore exercitation\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e99c3709-47e8-4085-bc0e-5f5ddf47171b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "71afe13c-5eef-4e7b-8a67-491dc8cf5157",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "839d2476-1a8c-4973-a45d-804df6edbf42",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"consequat adipisicing Lorem magna\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "578ab4e5-85f4-41e1-bcf9-6ece09ccc7ec",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2dea2c56-a7e7-447b-ae67-46b557663f7c",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e956f280-aab6-4ed6-b436-77a19a48b748",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"et cillum ea\",\n  \"entityType\": 2,\n  \"quotes\": [\n   {\n    \"cost\": -42731203.461843714,\n    \"currency\": \"do dolore irure am\",\n    \"minCost\": -97282787.06081048,\n    \"minStayUntil\": \"ut adipisicing Lorem\",\n    \"canExtendUntil\": \"esse veniam amet co\",\n    \"pricedUntil\": \"ut nisi sint\",\n    \"noReturnUntil\": \"aliqua nostrud enim\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -68996370,\n     -25112195\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"in\",\n    \"surcharge\": {\n     \"value\": -5764927.133031607,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -18831052\n     }\n    }\n   },\n   {\n    \"cost\": -63352340.713720776,\n    \"currency\": \"in nostrud dolor anim\",\n    \"minCost\": -70334043.98459311,\n    \"minStayUntil\": \"laboris\",\n    \"canExtendUntil\": \"tempor labor\",\n    \"pricedUntil\": \"laborum et sint est\",\n    \"noReturnUntil\": \"proident non\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -72746586,\n     -48543583\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"minim nostrud ipsum\",\n    \"surcharge\": {\n     \"value\": 37737817.04540905,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -4597224\n     }\n    }\n   }\n  ],\n  \"distance\": -7897653.45788011,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -57317907,\n    -25391840\n   ]\n  },\n  \"entityETag\": \"Excepteur pariatur eiusmod aliquip\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "12199752-220d-47f6-9704-d8f844172a2f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "867fc793-094e-4485-885a-00b43b60c4ae",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e53ae016-2dd0-4892-a58a-8cb1eb7ca03a",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"consequat adipisicing Lorem magna\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9e1199ab-60db-49eb-8095-36f39a34b428",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6b06298b-787b-4d00-894e-c4dbf571764a",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fa4e4b23-5628-44c9-a18f-4e8cbc248fdf",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"officia adipisicing\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"Lorem cillum sunt\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 42613194.07704276,\n      \"currency\": \"sunt non Lorem irure\",\n      \"minCost\": 8339668.133389726,\n      \"minStayUntil\": \"ea\",\n      \"canExtendUntil\": \"Excepteur in qui\",\n      \"pricedUntil\": \"labore nisi fugiat dolore Duis\",\n      \"noReturnUntil\": \"dolor Excepteur enim laboris\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -40023981,\n       25905936\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor ex et minim\",\n      \"surcharge\": {\n       \"value\": 2044613.2482320815,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 37423665\n       }\n      }\n     },\n     {\n      \"cost\": 56208434.82743889,\n      \"currency\": \"aliqua irure esse ullamco quis\",\n      \"minCost\": 5602734.997097954,\n      \"minStayUntil\": \"veniam dolor\",\n      \"canExtendUntil\": \"Duis consectetur\",\n      \"pricedUntil\": \"consequat\",\n      \"noReturnUntil\": \"consectetur consequat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       33793359,\n       -92741824\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"adipisicing ea incididunt mollit aliqua\",\n      \"surcharge\": {\n       \"value\": -5348189.716999218,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 38086237\n       }\n      }\n     }\n    ],\n    \"distance\": 57938462.60519126,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -59003601,\n      56626871\n     ]\n    },\n    \"entityETag\": \"sint dolor dolore\"\n   },\n   {\n    \"entityId\": \"Lorem mollit adipisicing minim\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 28511059.178950354,\n      \"currency\": \"ea in\",\n      \"minCost\": -73115360.47908893,\n      \"minStayUntil\": \"ex\",\n      \"canExtendUntil\": \"occaecat qui labore\",\n      \"pricedUntil\": \"reprehenderit occaecat\",\n      \"noReturnUntil\": \"dolore\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       30851324,\n       -60741044\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore amet officia qui\",\n      \"surcharge\": {\n       \"value\": 18073916.828125387,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 84287863\n       }\n      }\n     },\n     {\n      \"cost\": -81242369.38332579,\n      \"currency\": \"non in\",\n      \"minCost\": 77559027.10919762,\n      \"minStayUntil\": \"Ut\",\n      \"canExtendUntil\": \"laborum eu aliqua anim dolor\",\n      \"pricedUntil\": \"consectetur laboris\",\n      \"noReturnUntil\": \"dolor sint exercitation consectetur occaecat\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       83133788,\n       -82183535\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat in mollit magna\",\n      \"surcharge\": {\n       \"value\": -38652525.490723245,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -8225675\n       }\n      }\n     }\n    ],\n    \"distance\": -36330037.34963025,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -28651953,\n      61471493\n     ]\n    },\n    \"entityETag\": \"Ut\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d5639c50-ad9f-45a1-9c93-b386df135b38",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "75835d36-d3d3-4069-94f8-92040d4c48e5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8ef4e8d0-4567-44e7-ae61-2e8adb24c280",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e6eb1746-87d1-4c8a-a079-d9076c67b4d3",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8d926b9a-5b10-4d36-8441-a3b3cc407608",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"nisi culpa est\",\n    \"cardPaymentsExternalUrl\": \"in\",\n    \"paymentsTelephone\": \"dolore laborum eu anim minim\"\n   },\n   {\n    \"name\": \"irure dolore\",\n    \"cardPaymentsExternalUrl\": \"commodo Duis esse irure\",\n    \"paymentsTelephone\": \"ipsum exercitation eiusmod adipisicing cupidatat\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "415ffa1c-1f8b-4534-9c6d-f3dcd9abe2db",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0637320e-8cf8-4813-95e1-5727dd88c72c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8a8d9ac2-44b1-41f6-95ea-ab055c66c5e9",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"consequat adipisicing Lorem magna\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "754ecc33-b2a5-4ad9-9473-777e42c01a15",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7bb180d3-6177-4b60-b8b1-2c4d1106f817",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "eb7b25e8-ac6f-4bd5-a56f-689e70f2afad",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"ull\",\n     \"crs\": {\n      \"type\": \"dolore tempor laborum fugiat\",\n      \"properties\": {\n       \"name\": \"sunt sint officia\"\n      }\n     }\n    },\n    {\n     \"type\": \"irure enim aute minim\",\n     \"crs\": {\n      \"type\": \"ut reprehenderit do est Ut\",\n      \"properties\": {\n       \"name\": \"ad laborum reprehenderit in dolore\"\n      }\n     }\n    }\n   ],\n   \"type\": \"proident\",\n   \"crs\": {\n    \"type\": \"sit et\",\n    \"properties\": {\n     \"name\": \"in ea \"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"id Ut elit Lorem\"\n   },\n   {\n    \"message\": \"aute consectetur sed\"\n   }\n  ],\n  \"authorityId\": \"dolore do sint ut tempor\",\n  \"zoneType\": 4,\n  \"entityType\": 3,\n  \"entityId\": \"sed nostrud\",\n  \"name\": \"proident consectetur ut Excepteur laborum\",\n  \"eTag\": \"et nisi quis\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "29694eee-f2a6-438f-b5b4-f0a7e9cf4c96",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b670d9c6-cc73-4e17-82f2-157521869342",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "36985702-0b24-4378-bfb6-2e820bac0e5b",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"consequat adipisicing Lorem magna\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "34c0747d-92a7-4f64-ab80-c81925a0a224",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "db0d8e5a-acf5-4fba-8eb2-8354dd12114b",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"tempor nostrud laborum\",\n            \"properties\": {\n                \"name\": \"aliqua aute cupidatat proident adipisicing\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "328a2bda-0a1c-4112-bc12-93bbe3021982",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore in laboris qui est\",\n            \"properties\": {\n                \"name\": \"est\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"enim\",\n    \"entityETag\": \"elit adipisicing aliquip\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -63141500,\n      \"specialRestrictionTypeId\": 73086529,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Excepteur \",\n        \"endTime\": \"minim proident\",\n        \"maxStay\": -50709615\n       },\n       {\n        \"startTime\": \"esse culpa officia\",\n        \"endTime\": \"id occaecat\",\n        \"maxStay\": 58639930\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 35955442,\n      \"specialRestrictionTypeId\": 68016220,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex Excepteur minim\",\n        \"endTime\": \"nisi veniam\",\n        \"maxStay\": -53480250\n       },\n       {\n        \"startTime\": \"sit\",\n        \"endTime\": \"non magna aliquip\",\n        \"maxStay\": 80089034\n       }\n      ]\n     }\n    ],\n    \"distance\": -34200073.06942434\n   },\n   {\n    \"entityId\": \"pariatur eu ad\",\n    \"entityETag\": \"veniam aliquip minim laborum amet\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -29233170,\n      \"specialRestrictionTypeId\": 19080792,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"reprehenderit eiusmo\",\n        \"endTime\": \"nulla est sed\",\n        \"maxStay\": 97891169\n       },\n       {\n        \"startTime\": \"sed cupidatat sit in ut\",\n        \"endTime\": \"irure officia in reprehenderit sint\",\n        \"maxStay\": 79401772\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -18358967,\n      \"specialRestrictionTypeId\": -25017816,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"in nulla consectetur aliqua\",\n        \"endTime\": \"sit eiusmod Duis magna\",\n        \"maxStay\": -99051097\n       },\n       {\n        \"startTime\": \"sint n\",\n        \"endTime\": \"do\",\n        \"maxStay\": -83998825\n       }\n      ]\n     }\n    ],\n    \"distance\": -53964953.955482684\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"ut occaecat dolore \",\n   \"entityETag\": \"cillum ut eiusmod dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 62288831,\n     \"specialRestrictionTypeId\": 27997189,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"dolor\",\n       \"endTime\": \"ut esse labore\",\n       \"maxStay\": 96139735\n      },\n      {\n       \"startTime\": \"laborum enim\",\n       \"endTime\": \"ipsum Lorem consequat elit\",\n       \"maxStay\": -89733535\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -60158495,\n     \"specialRestrictionTypeId\": 68477435,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex magn\",\n       \"endTime\": \"enim sed\",\n       \"maxStay\": 5056479\n      },\n      {\n       \"startTime\": \"Ut dolor\",\n       \"endTime\": \"non elit ad\",\n       \"maxStay\": 27388065\n      }\n     ]\n    }\n   ],\n   \"distance\": -18365980.972540185\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "530aa1c8-feab-4013-96e0-c57902033891",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore in laboris qui est\",\n            \"properties\": {\n                \"name\": \"est\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a39556eb-cb3c-460a-b895-869b319afa39",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore in laboris qui est\",\n            \"properties\": {\n                \"name\": \"est\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1d164884-2fcc-46f8-828b-3ea5c154acb3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore in laboris qui est\",\n            \"properties\": {\n                \"name\": \"est\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c130f647-7ed3-4c31-b127-244b6915eba5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore in laboris qui est\",\n            \"properties\": {\n                \"name\": \"est\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d10078e6-9e78-4cc3-b4e2-1c514f3b6030",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "845c36b9-bfc7-4f5d-96fd-62d090d9edb5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"qui\",\n      \"city\": \"do ea dolore\",\n      \"country\": \"tempor ut eu\",\n      \"postcode\": \"do elit culpa dolore\"\n     },\n     \"locationCode\": \"qui fugiat s\",\n     \"totalCapacity\": -73413456,\n     \"zoneId\": \"Duis ea non esse\",\n     \"authorityId\": \"laboris eu sint\",\n     \"features\": {\n      \"type\": \"ex nostrud\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed Excepteur cillum Ut\",\n           \"crs\": {\n            \"type\": \"do est id\",\n            \"properties\": {\n             \"name\": \"esse ad minim\"\n            }\n           }\n          },\n          {\n           \"type\": \"Lorem\",\n           \"crs\": {\n            \"type\": \"nulla dolor irure\",\n            \"properties\": {\n             \"name\": \"Excepteur\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ullamco\",\n         \"crs\": {\n          \"type\": \"sint ad ex id\",\n          \"properties\": {\n           \"name\": \"culpa magna\"\n          }\n         }\n        },\n        \"type\": \"adipisicing et pariatur nulla\",\n        \"id\": \"qui do Excepteur\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"occaecat in\",\n           \"crs\": {\n            \"type\": \"dolor enim ipsum\",\n            \"properties\": {\n             \"name\": \"ea et ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolore consequat deserunt\",\n           \"crs\": {\n            \"type\": \"Ut mollit exercitation\",\n            \"properties\": {\n             \"name\": \"ut nostrud nulla ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nisi\",\n         \"crs\": {\n          \"type\": \"laborum qui ullam\",\n          \"properties\": {\n           \"name\": \"in proident dolor\"\n          }\n         }\n        },\n        \"type\": \"ea sed\",\n        \"id\": \"ut est ipsum eu\"\n       }\n      ],\n      \"properties\": \"et \"\n     },\n     \"paymentMethodIds\": [\n      83881182,\n      18510211\n     ],\n     \"entityId\": \"id in tempor dolor enim\",\n     \"entityType\": 2,\n     \"name\": \"in amet aute occaecat pariatur\",\n     \"eTag\": \"incididunt quis occaecat exercitatio\"\n    },\n    \"distance\": -61845844.34421865\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ipsum dolor laboris officia\",\n      \"city\": \"reprehenderit sunt enim\",\n      \"country\": \"do enim culpa in\",\n      \"postcode\": \"aute occaecat\"\n     },\n     \"locationCode\": \"eu labore laborum\",\n     \"totalCapacity\": -19405207,\n     \"zoneId\": \"incididunt eu offic\",\n     \"authorityId\": \"labore reprehenderit\",\n     \"features\": {\n      \"type\": \"magna\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt amet Ut irure ea\",\n           \"crs\": {\n            \"type\": \"ut est\",\n            \"properties\": {\n             \"name\": \"irure fugiat eiusmo\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut occaecat\",\n           \"crs\": {\n            \"type\": \"velit est id\",\n            \"properties\": {\n             \"name\": \"in occaecat\"\n            }\n           }\n          }\n         ],\n         \"type\": \"exercitation ex elit\",\n         \"crs\": {\n          \"type\": \"consectetur fugiat occaecat\",\n          \"properties\": {\n           \"name\": \"eu pariatur fugiat\"\n          }\n         }\n        },\n        \"type\": \"cillum\",\n        \"id\": \"Ut enim ullamco esse officia\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"anim cillum voluptate Lorem\",\n           \"crs\": {\n            \"type\": \"ea nisi Lorem\",\n            \"properties\": {\n             \"name\": \"Excepteur minim anim in\"\n            }\n           }\n          },\n          {\n           \"type\": \"deserunt irure dolore\",\n           \"crs\": {\n            \"type\": \"nostrud tempor officia\",\n            \"properties\": {\n             \"name\": \"aliquip reprehenderit qui sunt do\"\n            }\n           }\n          }\n         ],\n         \"type\": \"magna consequat commodo quis\",\n         \"crs\": {\n          \"type\": \"ea pariatur sunt\",\n          \"properties\": {\n           \"name\": \"in qui in ullamco\"\n          }\n         }\n        },\n        \"type\": \"culpa\",\n        \"id\": \"occaecat culpa\"\n       }\n      ],\n      \"properties\": \"qui inci\"\n     },\n     \"paymentMethodIds\": [\n      52813685,\n      -95888778\n     ],\n     \"entityId\": \"ad\",\n     \"entityType\": 3,\n     \"name\": \"aliqua esse\",\n     \"eTag\": \"reprehenderit occaecat ea\"\n    },\n    \"distance\": -4033262.3904408365\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1470784d-556d-40ba-9114-a3fe87ec40d0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "22beca39-ee80-4266-8c23-e9058462f288",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e2c3ce7d-466e-4a2f-ab83-6c82c6f18878",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c51f6819-12d8-4b4b-8309-b4ff9344092e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "08297d5d-f542-4902-ab31-4c11cbb5a859",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute est magna\",\n            \"properties\": {\n                \"name\": \"cillum nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "5fc20aab-06b2-4277-83d4-22a42c8aed98",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et tempor minim pariatur\",\n            \"properties\": {\n                \"name\": \"aliquip consequat Lorem dolore\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"qui\",\n      \"city\": \"do ea dolore\",\n      \"country\": \"tempor ut eu\",\n      \"postcode\": \"do elit culpa dolore\"\n     },\n     \"locationCode\": \"qui fugiat s\",\n     \"totalCapacity\": -73413456,\n     \"zoneId\": \"Duis ea non esse\",\n     \"authorityId\": \"laboris eu sint\",\n     \"features\": {\n      \"type\": \"ex nostrud\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sed Excepteur cillum Ut\",\n           \"crs\": {\n            \"type\": \"do est id\",\n            \"properties\": {\n             \"name\": \"esse ad minim\"\n            }\n           }\n          },\n          {\n           \"type\": \"Lorem\",\n           \"crs\": {\n            \"type\": \"nulla dolor irure\",\n            \"properties\": {\n             \"name\": \"Excepteur\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ullamco\",\n         \"crs\": {\n          \"type\": \"sint ad ex id\",\n          \"properties\": {\n           \"name\": \"culpa magna\"\n          }\n         }\n        },\n        \"type\": \"adipisicing et pariatur nulla\",\n        \"id\": \"qui do Excepteur\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"occaecat in\",\n           \"crs\": {\n            \"type\": \"dolor enim ipsum\",\n            \"properties\": {\n             \"name\": \"ea et ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolore consequat deserunt\",\n           \"crs\": {\n            \"type\": \"Ut mollit exercitation\",\n            \"properties\": {\n             \"name\": \"ut nostrud nulla ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nisi\",\n         \"crs\": {\n          \"type\": \"laborum qui ullam\",\n          \"properties\": {\n           \"name\": \"in proident dolor\"\n          }\n         }\n        },\n        \"type\": \"ea sed\",\n        \"id\": \"ut est ipsum eu\"\n       }\n      ],\n      \"properties\": \"et \"\n     },\n     \"paymentMethodIds\": [\n      83881182,\n      18510211\n     ],\n     \"entityId\": \"id in tempor dolor enim\",\n     \"entityType\": 2,\n     \"name\": \"in amet aute occaecat pariatur\",\n     \"eTag\": \"incididunt quis occaecat exercitatio\"\n    },\n    \"distance\": -61845844.34421865\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ipsum dolor laboris officia\",\n      \"city\": \"reprehenderit sunt enim\",\n      \"country\": \"do enim culpa in\",\n      \"postcode\": \"aute occaecat\"\n     },\n     \"locationCode\": \"eu labore laborum\",\n     \"totalCapacity\": -19405207,\n     \"zoneId\": \"incididunt eu offic\",\n     \"authorityId\": \"labore reprehenderit\",\n     \"features\": {\n      \"type\": \"magna\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt amet Ut irure ea\",\n           \"crs\": {\n            \"type\": \"ut est\",\n            \"properties\": {\n             \"name\": \"irure fugiat eiusmo\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut occaecat\",\n           \"crs\": {\n            \"type\": \"velit est id\",\n            \"properties\": {\n             \"name\": \"in occaecat\"\n            }\n           }\n          }\n         ],\n         \"type\": \"exercitation ex elit\",\n         \"crs\": {\n          \"type\": \"consectetur fugiat occaecat\",\n          \"properties\": {\n           \"name\": \"eu pariatur fugiat\"\n          }\n         }\n        },\n        \"type\": \"cillum\",\n        \"id\": \"Ut enim ullamco esse officia\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"anim cillum voluptate Lorem\",\n           \"crs\": {\n            \"type\": \"ea nisi Lorem\",\n            \"properties\": {\n             \"name\": \"Excepteur minim anim in\"\n            }\n           }\n          },\n          {\n           \"type\": \"deserunt irure dolore\",\n           \"crs\": {\n            \"type\": \"nostrud tempor officia\",\n            \"properties\": {\n             \"name\": \"aliquip reprehenderit qui sunt do\"\n            }\n           }\n          }\n         ],\n         \"type\": \"magna consequat commodo quis\",\n         \"crs\": {\n          \"type\": \"ea pariatur sunt\",\n          \"properties\": {\n           \"name\": \"in qui in ullamco\"\n          }\n         }\n        },\n        \"type\": \"culpa\",\n        \"id\": \"occaecat culpa\"\n       }\n      ],\n      \"properties\": \"qui inci\"\n     },\n     \"paymentMethodIds\": [\n      52813685,\n      -95888778\n     ],\n     \"entityId\": \"ad\",\n     \"entityType\": 3,\n     \"name\": \"aliqua esse\",\n     \"eTag\": \"reprehenderit occaecat ea\"\n    },\n    \"distance\": -4033262.3904408365\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "913dd29b-fbdd-4130-a503-98b92204393d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et tempor minim pariatur\",\n            \"properties\": {\n                \"name\": \"aliquip consequat Lorem dolore\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0276df5a-c3af-4dfb-b7e5-d3074a25bddd",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et tempor minim pariatur\",\n            \"properties\": {\n                \"name\": \"aliquip consequat Lorem dolore\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6b5441b7-bdc0-4ccc-aec4-ec6e0c4f8b8c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et tempor minim pariatur\",\n            \"properties\": {\n                \"name\": \"aliquip consequat Lorem dolore\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b6747530-d972-4918-b999-805752545f8e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et tempor minim pariatur\",\n            \"properties\": {\n                \"name\": \"aliquip consequat Lorem dolore\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1d0ece5a-49d2-41e1-9d2f-18f7ebb39d16",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "b96d3cbb-0c6a-4a1c-9b66-e1765325aa90",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"commodo aute est consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"nostrud\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -12808036.108029783,\n      \"currency\": \"laboris in irure\",\n      \"minCost\": -86890937.33451454,\n      \"minStayUntil\": \"et laborum mollit laboris\",\n      \"canExtendUntil\": \"ut\",\n      \"pricedUntil\": \"elit velit\",\n      \"noReturnUntil\": \"magna eu et\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       32209147,\n       -62227570\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"voluptate proident\",\n      \"surcharge\": {\n       \"value\": -63556339.50341058,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -66152214\n       }\n      }\n     },\n     {\n      \"cost\": 24878662.014243156,\n      \"currency\": \"ipsum veniam minim do consequat\",\n      \"minCost\": 34614645.2617735,\n      \"minStayUntil\": \"mollit in laboris cillum\",\n      \"canExtendUntil\": \"magna in ut\",\n      \"pricedUntil\": \"consectetur reprehenderit ullamco occaecat\",\n      \"noReturnUntil\": \"nisi commodo Excepteur\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       37054267,\n       50679179\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat mollit ad irure do\",\n      \"surcharge\": {\n       \"value\": -1182303.427113101,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 4560480\n       }\n      }\n     }\n    ],\n    \"distance\": 36845279.23043519,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      42740118,\n      -63628567\n     ]\n    },\n    \"entityETag\": \"incididunt proident magna consequat\"\n   },\n   {\n    \"entityId\": \"in ex qui\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -86141114.49124815,\n      \"currency\": \"commodo dolore velit\",\n      \"minCost\": 45469837.69257018,\n      \"minStayUntil\": \"officia\",\n      \"canExtendUntil\": \"proident aliquip aliqua adipisicing\",\n      \"pricedUntil\": \"sed anim nisi\",\n      \"noReturnUntil\": \"nulla tempor enim minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -71831015,\n       -10991300\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ullamco\",\n      \"surcharge\": {\n       \"value\": 75916312.4876382,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -17136698\n       }\n      }\n     },\n     {\n      \"cost\": 83393866.53001583,\n      \"currency\": \"Excepteur veniam\",\n      \"minCost\": 20660644.38754624,\n      \"minStayUntil\": \"officia \",\n      \"canExtendUntil\": \"pariatur non eu laboris\",\n      \"pricedUntil\": \"ex\",\n      \"noReturnUntil\": \"in elit do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       9226720,\n       15956402\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"proident labore pariatur\",\n      \"surcharge\": {\n       \"value\": -36599450.3842495,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 64094831\n       }\n      }\n     }\n    ],\n    \"distance\": 25865261.66622983,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -23968389,\n      56169555\n     ]\n    },\n    \"entityETag\": \"sunt et Excepteur irure\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "20213f54-d539-4b29-a876-216d1e7e629b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d0084aad-2c1d-417b-8c60-75663f836062",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1ff3530a-856b-49dd-ba6b-092ac1d1edae",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a4979d2c-2699-411d-90df-8c87c4c922f7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f03b5b04-e1c0-4e20-940a-731f30a3c3d7",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sint consectetur Lorem\",\n            \"properties\": {\n                \"name\": \"labore magna dolore Excepteur\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e0a12b79-aaee-427d-a0f8-74f0d74d758c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat incididunt elit in\",\n            \"properties\": {\n                \"name\": \"eu elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"commodo aute est consequat\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"nostrud\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -12808036.108029783,\n      \"currency\": \"laboris in irure\",\n      \"minCost\": -86890937.33451454,\n      \"minStayUntil\": \"et laborum mollit laboris\",\n      \"canExtendUntil\": \"ut\",\n      \"pricedUntil\": \"elit velit\",\n      \"noReturnUntil\": \"magna eu et\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       32209147,\n       -62227570\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"voluptate proident\",\n      \"surcharge\": {\n       \"value\": -63556339.50341058,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -66152214\n       }\n      }\n     },\n     {\n      \"cost\": 24878662.014243156,\n      \"currency\": \"ipsum veniam minim do consequat\",\n      \"minCost\": 34614645.2617735,\n      \"minStayUntil\": \"mollit in laboris cillum\",\n      \"canExtendUntil\": \"magna in ut\",\n      \"pricedUntil\": \"consectetur reprehenderit ullamco occaecat\",\n      \"noReturnUntil\": \"nisi commodo Excepteur\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       37054267,\n       50679179\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consequat mollit ad irure do\",\n      \"surcharge\": {\n       \"value\": -1182303.427113101,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 4560480\n       }\n      }\n     }\n    ],\n    \"distance\": 36845279.23043519,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      42740118,\n      -63628567\n     ]\n    },\n    \"entityETag\": \"incididunt proident magna consequat\"\n   },\n   {\n    \"entityId\": \"in ex qui\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -86141114.49124815,\n      \"currency\": \"commodo dolore velit\",\n      \"minCost\": 45469837.69257018,\n      \"minStayUntil\": \"officia\",\n      \"canExtendUntil\": \"proident aliquip aliqua adipisicing\",\n      \"pricedUntil\": \"sed anim nisi\",\n      \"noReturnUntil\": \"nulla tempor enim minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -71831015,\n       -10991300\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ullamco\",\n      \"surcharge\": {\n       \"value\": 75916312.4876382,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -17136698\n       }\n      }\n     },\n     {\n      \"cost\": 83393866.53001583,\n      \"currency\": \"Excepteur veniam\",\n      \"minCost\": 20660644.38754624,\n      \"minStayUntil\": \"officia \",\n      \"canExtendUntil\": \"pariatur non eu laboris\",\n      \"pricedUntil\": \"ex\",\n      \"noReturnUntil\": \"in elit do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       9226720,\n       15956402\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"proident labore pariatur\",\n      \"surcharge\": {\n       \"value\": -36599450.3842495,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 64094831\n       }\n      }\n     }\n    ],\n    \"distance\": 25865261.66622983,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -23968389,\n      56169555\n     ]\n    },\n    \"entityETag\": \"sunt et Excepteur irure\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "04b7467f-31c0-49e1-bf1e-dd76933b6ab1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat incididunt elit in\",\n            \"properties\": {\n                \"name\": \"eu elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f791a5b9-9de1-4b18-81ed-936784eaf128",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat incididunt elit in\",\n            \"properties\": {\n                \"name\": \"eu elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6643b790-7280-4671-9e3d-d72f2d9ee437",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat incididunt elit in\",\n            \"properties\": {\n                \"name\": \"eu elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "71bdd253-6a6e-40b8-9e6f-036da62edeea",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat incididunt elit in\",\n            \"properties\": {\n                \"name\": \"eu elit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "77bfffc6-6286-4399-a2c0-42adb7bb0b0b",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna occaecat labore\",\n            \"properties\": {\n                \"name\": \"dolor labore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "534b9451-a59d-426c-98e8-bc39fef57b47",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod aliqua cupidatat\",\n            \"properties\": {\n                \"name\": \"sint\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"mollit veniam voluptate\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 3,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"id adipisicing\",\n     \"crs\": {\n      \"type\": \"adipisicing ipsum occaecat\",\n      \"properties\": {\n       \"name\": \"id esse exercitation voluptate\"\n      }\n     }\n    },\n    \"type\": \"qui cillum\",\n    \"id\": \"tempor incididunt\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"Lorem\",\n     \"crs\": {\n      \"type\": \"culpa id ea commodo in\",\n      \"properties\": {\n       \"name\": \"exercitation in laboris proident ex\"\n      }\n     }\n    },\n    \"type\": \"consectetur\",\n    \"id\": \"amet anim\"\n   }\n  ],\n  \"properties\": \"irure anim\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "49a45be2-21f5-4a41-9a9b-c31f43d3234a",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod aliqua cupidatat\",\n            \"properties\": {\n                \"name\": \"sint\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "963a54bb-db8a-46de-95c6-f6b03ef8a2d6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod aliqua cupidatat\",\n            \"properties\": {\n                \"name\": \"sint\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0e36ce83-ba3b-42fd-9da6-a9e183df59bf",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod aliqua cupidatat\",\n            \"properties\": {\n                \"name\": \"sint\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9cfac873-bd73-48ee-b575-bc2ce41ea429",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod aliqua cupidatat\",\n            \"properties\": {\n                \"name\": \"sint\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c156b707-5ddf-4c60-9f85-fb6af551e357",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"est irure velit\",\n            \"properties\": {\n                \"name\": \"nulla in\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "8f36c1b1-671a-4c09-b845-9cc9ac46264f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"officia fugiat ut anim aute\",\n            \"properties\": {\n                \"name\": \"\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"enim\",\n    \"entityETag\": \"elit adipisicing aliquip\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -63141500,\n      \"specialRestrictionTypeId\": 73086529,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"Excepteur \",\n        \"endTime\": \"minim proident\",\n        \"maxStay\": -50709615\n       },\n       {\n        \"startTime\": \"esse culpa officia\",\n        \"endTime\": \"id occaecat\",\n        \"maxStay\": 58639930\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 35955442,\n      \"specialRestrictionTypeId\": 68016220,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex Excepteur minim\",\n        \"endTime\": \"nisi veniam\",\n        \"maxStay\": -53480250\n       },\n       {\n        \"startTime\": \"sit\",\n        \"endTime\": \"non magna aliquip\",\n        \"maxStay\": 80089034\n       }\n      ]\n     }\n    ],\n    \"distance\": -34200073.06942434\n   },\n   {\n    \"entityId\": \"pariatur eu ad\",\n    \"entityETag\": \"veniam aliquip minim laborum amet\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -29233170,\n      \"specialRestrictionTypeId\": 19080792,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"reprehenderit eiusmo\",\n        \"endTime\": \"nulla est sed\",\n        \"maxStay\": 97891169\n       },\n       {\n        \"startTime\": \"sed cupidatat sit in ut\",\n        \"endTime\": \"irure officia in reprehenderit sint\",\n        \"maxStay\": 79401772\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -18358967,\n      \"specialRestrictionTypeId\": -25017816,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"in nulla consectetur aliqua\",\n        \"endTime\": \"sit eiusmod Duis magna\",\n        \"maxStay\": -99051097\n       },\n       {\n        \"startTime\": \"sint n\",\n        \"endTime\": \"do\",\n        \"maxStay\": -83998825\n       }\n      ]\n     }\n    ],\n    \"distance\": -53964953.955482684\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"ut occaecat dolore \",\n   \"entityETag\": \"cillum ut eiusmod dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 62288831,\n     \"specialRestrictionTypeId\": 27997189,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"dolor\",\n       \"endTime\": \"ut esse labore\",\n       \"maxStay\": 96139735\n      },\n      {\n       \"startTime\": \"laborum enim\",\n       \"endTime\": \"ipsum Lorem consequat elit\",\n       \"maxStay\": -89733535\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": -60158495,\n     \"specialRestrictionTypeId\": 68477435,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex magn\",\n       \"endTime\": \"enim sed\",\n       \"maxStay\": 5056479\n      },\n      {\n       \"startTime\": \"Ut dolor\",\n       \"endTime\": \"non elit ad\",\n       \"maxStay\": 27388065\n      }\n     ]\n    }\n   ],\n   \"distance\": -18365980.972540185\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9190f106-22d5-4226-b4ac-c67053deaa96",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"officia fugiat ut anim aute\",\n            \"properties\": {\n                \"name\": \"\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"dolore laborum exercitation\",\n \"errors\": [\n  {\n   \"property\": \"sit elit consequat\",\n   \"code\": \"veniam anim\",\n   \"message\": \"pariatur laboris\"\n  },\n  {\n   \"property\": \"dolore exercitation\",\n   \"code\": \"deserunt et aute\",\n   \"message\": \"ipsum cupidatat\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fb5b2c56-92b8-4e06-a5fe-3d736c09bd24",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"officia fugiat ut anim aute\",\n            \"properties\": {\n                \"name\": \"\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "abfd693d-5fb5-49b6-8c81-c2b2062946b3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"officia fugiat ut anim aute\",\n            \"properties\": {\n                \"name\": \"\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a3ebf03c-e135-4c8a-a89a-b3045436bf0e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"officia fugiat ut anim aute\",\n            \"properties\": {\n                \"name\": \"\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1f929ff4-b037-4bd7-95d3-063eba06743e",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "d7d7cad6-5119-4734-bce0-17c2ddabd63d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c7650247-3ec1-45bc-85ef-2a6c01130b83",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9f416d1d-17df-4f6b-91aa-41e33d469007",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2f340fe3-7d8c-436b-81b1-cd6f18df341c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "ce0d5ac0-a424-4fb7-a154-f9007365cffd",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
