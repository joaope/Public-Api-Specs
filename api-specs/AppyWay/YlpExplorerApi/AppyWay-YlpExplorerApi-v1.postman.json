{
  "item": [
    {
      "id": "85e59f82-03cb-41f6-9b87-136eba798084",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "d6e3c0df-f7a2-418d-9593-e6b715859db1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"elit D\"\n   },\n   {\n    \"message\": \"occaecat do\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"sint aute nisi\",\n    \"cardPaymentsExternalUrl\": \"aliqu\",\n    \"paymentsTelephone\": \"occaecat Lorem cillum\"\n   },\n   {\n    \"name\": \"cupidatat Excepteur in veniam\",\n    \"cardPaymentsExternalUrl\": \"occaecat ut\",\n    \"paymentsTelephone\": \"Duis voluptate\"\n   }\n  ],\n  \"entityType\": 4,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"adipisicing velit officia occaecat\",\n     \"crs\": {\n      \"type\": \"exercitation ut\",\n      \"properties\": {\n       \"name\": \"incididunt Excepteur veniam\"\n      }\n     }\n    },\n    {\n     \"type\": \"Duis mollit\",\n     \"crs\": {\n      \"type\": \"anim ullamco Ut nostrud\",\n      \"properties\": {\n       \"name\": \"proident tempor ex\"\n      }\n     }\n    }\n   ],\n   \"type\": \"qui reprehenderit incididunt nisi Ut\",\n   \"crs\": {\n    \"type\": \"veniam Excepteur enim sint\",\n    \"properties\": {\n     \"name\": \"tempor commodo elit laboris\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"amet labore\",\n  \"name\": \"qui pariatur Ut consectetur\",\n  \"eTag\": \"ut eu proident qui Lorem\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c9b6e3ce-94dc-4b5f-8f4d-c2ee5649a467",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9cd6a9a7-af8b-46bc-bf1d-75f501162819",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "84a48eb1-9c57-45de-b583-14f6f9d1fcb8",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna ea\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4e4961ae-3463-4b81-b798-8c1dffbebc53",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6814a0a6-9178-4cf8-be92-aba45964ad00",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "78075673-b91d-44fa-b94d-ac082ce17657",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"consectetur dolor nostrud\",\n     \"city\": \"nulla in non consectetur\",\n     \"country\": \"ullamco eiusmod sit\",\n     \"postcode\": \"aliquip tempor reprehenderit minim\"\n    },\n    \"locationCode\": \"laboris deserunt cupidatat\",\n    \"totalCapacity\": 53445686,\n    \"zoneId\": \"consectetur et\",\n    \"authorityId\": \"id cillum labore\",\n    \"features\": {\n     \"type\": \"consequat ut pariatur enim\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"irure tempor do in\",\n          \"crs\": {\n           \"type\": \"nisi fugiat dolor\",\n           \"properties\": {\n            \"name\": \"cillum elit nulla\"\n           }\n          }\n         },\n         {\n          \"type\": \"Excepteur consequat\",\n          \"crs\": {\n           \"type\": \"laboris eu nisi voluptate Lorem\",\n           \"properties\": {\n            \"name\": \"laborum nulla aut\"\n           }\n          }\n         }\n        ],\n        \"type\": \"consectetur ea labore\",\n        \"crs\": {\n         \"type\": \"minim fugiat ipsum commodo\",\n         \"properties\": {\n          \"name\": \"in cillum \"\n         }\n        }\n       },\n       \"type\": \"ipsum minim in\",\n       \"id\": \"mollit laboris id enim laborum\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ea proident occaecat Ut ex\",\n          \"crs\": {\n           \"type\": \"quis elit in ipsum iru\",\n           \"properties\": {\n            \"name\": \"\"\n           }\n          }\n         },\n         {\n          \"type\": \"reprehender\",\n          \"crs\": {\n           \"type\": \"aliquip sint\",\n           \"properties\": {\n            \"name\": \"officia sed\"\n           }\n          }\n         }\n        ],\n        \"type\": \"incididunt eu voluptate quis\",\n        \"crs\": {\n         \"type\": \"nostrud non ip\",\n         \"properties\": {\n          \"name\": \"enim quis velit est\"\n         }\n        }\n       },\n       \"type\": \"qui\",\n       \"id\": \"aliquip dolor\"\n      }\n     ],\n     \"properties\": \"nulla magna commodo mollit\"\n    },\n    \"paymentMethodIds\": [\n     -15612905,\n     -32276675\n    ],\n    \"entityId\": \"commodo esse nostrud non\",\n    \"entityType\": 3,\n    \"name\": \"ea aute\",\n    \"eTag\": \"sint magna irure\"\n   },\n   {\n    \"address\": {\n     \"street\": \"irure commodo\",\n     \"city\": \"ea velit in pariatur\",\n     \"country\": \"reprehenderit quis consectetur\",\n     \"postcode\": \"tempor in labore\"\n    },\n    \"locationCode\": \"cupidatat ullamco\",\n    \"totalCapacity\": -86133998,\n    \"zoneId\": \"ipsum\",\n    \"authorityId\": \"dolor sed magna reprehenderit\",\n    \"features\": {\n     \"type\": \"eiusmod\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"sunt dolor\",\n          \"crs\": {\n           \"type\": \"consectetur aliquip pariatur ut\",\n           \"properties\": {\n            \"name\": \"sint tempor non ut ut\"\n           }\n          }\n         },\n         {\n          \"type\": \"Lorem aliqua\",\n          \"crs\": {\n           \"type\": \"id ad\",\n           \"properties\": {\n            \"name\": \"exercitation deserunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"incididunt officia\",\n        \"crs\": {\n         \"type\": \"dolore Ut\",\n         \"properties\": {\n          \"name\": \"occaecat irure magna elit est\"\n         }\n        }\n       },\n       \"type\": \"repr\",\n       \"id\": \"in est\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"cupidatat id\",\n          \"crs\": {\n           \"type\": \"reprehenderi\",\n           \"properties\": {\n            \"name\": \"fugiat ea Duis\"\n           }\n          }\n         },\n         {\n          \"type\": \"laboris Excepteur ut\",\n          \"crs\": {\n           \"type\": \"nisi consequat\",\n           \"properties\": {\n            \"name\": \"pariatur consectetur ex\"\n           }\n          }\n         }\n        ],\n        \"type\": \"exercitation ad eiusmod\",\n        \"crs\": {\n         \"type\": \"non voluptate aliqua\",\n         \"properties\": {\n          \"name\": \"consequat Ut sed proident\"\n         }\n        }\n       },\n       \"type\": \"mollit\",\n       \"id\": \"dolor laborum\"\n      }\n     ],\n     \"properties\": \"dolor\"\n    },\n    \"paymentMethodIds\": [\n     -19629400,\n     14468702\n    ],\n    \"entityId\": \"id cupidatat est\",\n    \"entityType\": 3,\n    \"name\": \"aute\",\n    \"eTag\": \"esse proident anim\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ex incididunt culpa\",\n       \"crs\": {\n        \"type\": \"sunt deserunt labore enim esse\",\n        \"properties\": {\n         \"name\": \"minim consequat aliquip et\"\n        }\n       }\n      },\n      {\n       \"type\": \"qui irure laboris amet cupidatat\",\n       \"crs\": {\n        \"type\": \"et non\",\n        \"properties\": {\n         \"name\": \"irure elit\"\n        }\n       }\n      }\n     ],\n     \"type\": \"dolore in pariatur dolore ea\",\n     \"crs\": {\n      \"type\": \"el\",\n      \"properties\": {\n       \"name\": \"anim officia\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"occaecat Duis incididunt dolor Ut\"\n     },\n     {\n      \"message\": \"cupidatat ullamco\"\n     }\n    ],\n    \"authorityId\": \"consectetur reprehenderit consequat\",\n    \"zoneType\": 9,\n    \"entityType\": 2,\n    \"entityId\": \"amet non tempor\",\n    \"name\": \"sunt officia adipis\",\n    \"eTag\": \"eu\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ipsum velit Lorem anim\",\n       \"crs\": {\n        \"type\": \"non e\",\n        \"properties\": {\n         \"name\": \"et in Duis pariatur\"\n        }\n       }\n      },\n      {\n       \"type\": \"ullamco\",\n       \"crs\": {\n        \"type\": \"do amet nisi\",\n        \"properties\": {\n         \"name\": \"aliqua\"\n        }\n       }\n      }\n     ],\n     \"type\": \"veniam consectetur\",\n     \"crs\": {\n      \"type\": \"fugiat\",\n      \"properties\": {\n       \"name\": \"ullamco\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"labore ad cupidat\"\n     },\n     {\n      \"message\": \"in quis\"\n     }\n    ],\n    \"authorityId\": \"sint ullamco nulla in\",\n    \"zoneType\": 3,\n    \"entityType\": 1,\n    \"entityId\": \"veniam in consectetur\",\n    \"name\": \"officia nulla\",\n    \"eTag\": \"ex nost\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"reprehenderit\"\n     },\n     {\n      \"message\": \"deserunt elit\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"occaecat dolore\",\n      \"cardPaymentsExternalUrl\": \"esse do dolore\",\n      \"paymentsTelephone\": \"fugiat proident dolor id\"\n     },\n     {\n      \"name\": \"tempor nulla\",\n      \"cardPaymentsExternalUrl\": \"consectetur\",\n      \"paymentsTelephone\": \"laborum amet anim\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ut ipsum qui e\",\n       \"crs\": {\n        \"type\": \"ea Excepteur cupidatat tempor in\",\n        \"properties\": {\n         \"name\": \"cupidatat et velit\"\n        }\n       }\n      },\n      {\n       \"type\": \"fugiat quis voluptate nulla\",\n       \"crs\": {\n        \"type\": \"et deserunt\",\n        \"properties\": {\n         \"name\": \"in officia\"\n        }\n       }\n      }\n     ],\n     \"type\": \"fugiat\",\n     \"crs\": {\n      \"type\": \"dolor ea nisi non in\",\n      \"properties\": {\n       \"name\": \"ex\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"officia veniam tempor \",\n    \"name\": \"dolor Duis\",\n    \"eTag\": \"irure Duis tempor laboris nostrud\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"id\"\n     },\n     {\n      \"message\": \"aliquip anim Excepteur cupidatat\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"dolor in anim ipsum\",\n      \"cardPaymentsExternalUrl\": \"dolo\",\n      \"paymentsTelephone\": \"m\"\n     },\n     {\n      \"name\": \"anim\",\n      \"cardPaymentsExternalUrl\": \"ea est eu\",\n      \"paymentsTelephone\": \"amet in qui lab\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"Ut labore esse\",\n       \"crs\": {\n        \"type\": \"eiusmod\",\n        \"properties\": {\n         \"name\": \"enim officia adipisicing \"\n        }\n       }\n      },\n      {\n       \"type\": \"molli\",\n       \"crs\": {\n        \"type\": \"aute quis in sed\",\n        \"properties\": {\n         \"name\": \"laborum occaecat in officia\"\n        }\n       }\n      }\n     ],\n     \"type\": \"eiusmod sint Lorem\",\n     \"crs\": {\n      \"type\": \"dolore\",\n      \"properties\": {\n       \"name\": \"laboris ut\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"laborum\",\n    \"name\": \"ullamco culpa\",\n    \"eTag\": \"nisi ea\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3528950e-a10d-416f-8db3-5fe85358f7c4",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"ut et minim commodo\",\n \"errors\": [\n  {\n   \"property\": \"id sit sint\",\n   \"code\": \"consectetur ut\",\n   \"message\": \"laborum ipsum\"\n  },\n  {\n   \"property\": \"dolor cillum elit in\",\n   \"code\": \"minim do quis\",\n   \"message\": \"cupidatat Ut Duis enim\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "404b85ef-166c-4d10-b3a8-66c2e99a6823",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9b475336-d678-472e-bf08-f9a1a9829325",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b5f83c29-c6e1-408d-ae93-cf095bd75732",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ba53f242-75cd-4d77-ab6e-3b7f624f91cb",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "30501b19-c3c4-4346-9d57-cc5583161d8d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"ex ad officia minim\",\n   \"city\": \"nulla incididunt\",\n   \"country\": \"aute ullamco aliqua irure\",\n   \"postcode\": \"nisi aute\"\n  },\n  \"locationCode\": \"sit tempor ex esse\",\n  \"totalCapacity\": -18448721,\n  \"zoneId\": \"eu laborum minim\",\n  \"authorityId\": \"et non amet ad dolor\",\n  \"features\": {\n   \"type\": \"culpa proident\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"laborum ex ea do\",\n        \"crs\": {\n         \"type\": \"sit sint non ut\",\n         \"properties\": {\n          \"name\": \"sed laborum proident magna\"\n         }\n        }\n       },\n       {\n        \"type\": \"amet\",\n        \"crs\": {\n         \"type\": \"Duis in incididunt\",\n         \"properties\": {\n          \"name\": \"tempor non in veniam labore\"\n         }\n        }\n       }\n      ],\n      \"type\": \"pariatur culpa\",\n      \"crs\": {\n       \"type\": \"irure proident anim ex\",\n       \"properties\": {\n        \"name\": \"occaecat adipisicing eiusmod\"\n       }\n      }\n     },\n     \"type\": \"eiusmod\",\n     \"id\": \"ex reprehenderit sunt\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"sint qui dolor magna\",\n        \"crs\": {\n         \"type\": \"adipisicing eu sit nisi officia\",\n         \"properties\": {\n          \"name\": \"consectetur qui\"\n         }\n        }\n       },\n       {\n        \"type\": \"nostrud adipisicing commodo minim\",\n        \"crs\": {\n         \"type\": \"ut\",\n         \"properties\": {\n          \"name\": \"ex\"\n         }\n        }\n       }\n      ],\n      \"type\": \"quis sint nostrud irure adipisicing\",\n      \"crs\": {\n       \"type\": \"irure non dolore\",\n       \"properties\": {\n        \"name\": \"Ut eiusmod \"\n       }\n      }\n     },\n     \"type\": \"d\",\n     \"id\": \"in laborum deserunt\"\n    }\n   ],\n   \"properties\": \"in mollit\"\n  },\n  \"paymentMethodIds\": [\n   -20388830,\n   -14750663\n  ],\n  \"entityId\": \"qui pariatur Duis officia\",\n  \"entityType\": 3,\n  \"name\": \"dolore qui magna dolor\",\n  \"eTag\": \"non dolor\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ef404575-115c-48ee-b0d6-dc589fddb80f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "735ac018-2f0f-4d89-abe7-10674462520b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "68e5069c-5356-4132-88d8-c9f943aac3f4",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna ea\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1068109a-4efd-4542-8f1a-b370fa5ec382",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "90ea6be4-d9f0-4e2d-9dd7-4716041fa8bb",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "05d0eb7c-a23d-4176-91d5-3a43bbd0371d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"exercitation\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": 39227850.15637356,\n    \"currency\": \"officia ut ex do\",\n    \"minCost\": 33911448.512036204,\n    \"minStayUntil\": \"dolore fugiat\",\n    \"canExtendUntil\": \"cillum consectetur\",\n    \"pricedUntil\": \"culpa aliqua adipisicing sint\",\n    \"noReturnUntil\": \"sunt labore aliqua ipsum\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     -88665538,\n     66923970\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"irure in nisi consequat \",\n    \"surcharge\": {\n     \"value\": -51949138.83736305,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -25278586\n     }\n    }\n   },\n   {\n    \"cost\": 36588177.69493458,\n    \"currency\": \"aliquip nostrud\",\n    \"minCost\": -19263565.392182037,\n    \"minStayUntil\": \"sed magna \",\n    \"canExtendUntil\": \"labore esse Lorem\",\n    \"pricedUntil\": \"ex sunt magna\",\n    \"noReturnUntil\": \"ex adipisicing velit consequat\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -96297432,\n     21498533\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"deserunt sit ut ut\",\n    \"surcharge\": {\n     \"value\": -16338414.381482333,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -39637036\n     }\n    }\n   }\n  ],\n  \"distance\": -7311209.491198942,\n  \"parkingAllowed\": 2,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -22708151,\n    36017041\n   ]\n  },\n  \"entityETag\": \"aliqua\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "12669b82-d5e0-4dfa-8db4-b462057ac9ba",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b09dbb6f-91cc-4b9c-95a2-a94f3c9986f0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "81098bfc-63d6-4623-9466-4c7c1bad47eb",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna ea\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "57e73471-ed7c-4c7c-a464-54f4bc13dd59",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8357347a-1f96-4f87-947a-9fee8f907621",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "aae324da-6ae8-448f-aa76-9ef496738efa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"occaecat nulla commodo dolor\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"veniam irure amet\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": 19589768.832380235,\n      \"currency\": \"commodo consequat\",\n      \"minCost\": 23228492.380260587,\n      \"minStayUntil\": \"ullamco velit elit in ut\",\n      \"canExtendUntil\": \"eu aute Duis cupidatat culpa\",\n      \"pricedUntil\": \"veniam\",\n      \"noReturnUntil\": \"consectetur dolore reprehenderit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -82452008,\n       -1897757\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Excepteu\",\n      \"surcharge\": {\n       \"value\": -90004439.32996358,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -60931764\n       }\n      }\n     },\n     {\n      \"cost\": 16321895.91303201,\n      \"currency\": \"exercitation velit laborum ea\",\n      \"minCost\": -31360227.2234284,\n      \"minStayUntil\": \"ullamco commodo incididunt sint\",\n      \"canExtendUntil\": \"est irure\",\n      \"pricedUntil\": \"fugiat\",\n      \"noReturnUntil\": \"laboris id ad\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -73441710,\n       54994151\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"occaecat velit\",\n      \"surcharge\": {\n       \"value\": 39610446.61428103,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 70228862\n       }\n      }\n     }\n    ],\n    \"distance\": -51414780.117029846,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      52807908,\n      71763511\n     ]\n    },\n    \"entityETag\": \"qui consecte\"\n   },\n   {\n    \"entityId\": \"deserunt ea\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 46147598.28908071,\n      \"currency\": \"ipsum culpa minim\",\n      \"minCost\": 60507825.74340442,\n      \"minStayUntil\": \"anim eu\",\n      \"canExtendUntil\": \"ea deserunt consequat sunt\",\n      \"pricedUntil\": \"esse aute eiusmod repr\",\n      \"noReturnUntil\": \"veniam\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -21075390,\n       -9598060\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nisi adipisicing Excepteur\",\n      \"surcharge\": {\n       \"value\": -99401217.49758287,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 22170445\n       }\n      }\n     },\n     {\n      \"cost\": 54428215.51251149,\n      \"currency\": \"Duis deserunt\",\n      \"minCost\": -93638624.0048623,\n      \"minStayUntil\": \"Duis aliqua mollit in\",\n      \"canExtendUntil\": \"ut\",\n      \"pricedUntil\": \"esse quis incididunt\",\n      \"noReturnUntil\": \"dolore\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       67970814,\n       -76445510\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"elit sed\",\n      \"surcharge\": {\n       \"value\": -96091943.00434774,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 87002289\n       }\n      }\n     }\n    ],\n    \"distance\": 75382974.70358336,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      18736919,\n      -65255492\n     ]\n    },\n    \"entityETag\": \"deserunt id quis\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3d643968-9b97-417d-801a-d75bac6dc797",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "563ab179-381e-4276-b07d-a314c14f5227",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e1ec52c1-9960-4c8e-87cb-970d9ff68e51",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d27d3af8-4218-4318-85cf-ea2268ad8eab",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8aa8e3a8-5ff9-4d54-844c-906612967d8f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"deserunt exercitation\",\n    \"cardPaymentsExternalUrl\": \"pro\",\n    \"paymentsTelephone\": \"aliquip in eu proident\"\n   },\n   {\n    \"name\": \"fugiat consequat aliqua consectetur\",\n    \"cardPaymentsExternalUrl\": \"aliquip\",\n    \"paymentsTelephone\": \"a\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1ebd3762-17be-49ef-aadd-c052c72c4b0a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "03bca7d3-6837-405e-9c8a-80b70c44a37c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "064fa41a-c183-4a42-9ed9-6bd6dedf076a",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna ea\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cfd2c91d-29d1-480a-b7a0-bbe59c707f80",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b2ac0f31-f98c-4381-9cbd-fe3baa12da1c",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "11e6b4ac-232e-44e8-b3dc-1d6f14318e3f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"culpa sunt consequat\",\n     \"crs\": {\n      \"type\": \"in culpa exercitation est aute\",\n      \"properties\": {\n       \"name\": \"adipisicing\"\n      }\n     }\n    },\n    {\n     \"type\": \"dolore eiusmod ut ut\",\n     \"crs\": {\n      \"type\": \"Excepteur fugiat laboris mollit nulla\",\n      \"properties\": {\n       \"name\": \"laboru\"\n      }\n     }\n    }\n   ],\n   \"type\": \"eiusmod Excepteur proident\",\n   \"crs\": {\n    \"type\": \"do magna est irure\",\n    \"properties\": {\n     \"name\": \"laboris sunt ad eu\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"consectetur ut dolor\"\n   },\n   {\n    \"message\": \"ex ea\"\n   }\n  ],\n  \"authorityId\": \"culpa nulla\",\n  \"zoneType\": 8,\n  \"entityType\": 3,\n  \"entityId\": \"ex aliquip ut\",\n  \"name\": \"aliquip laborum\",\n  \"eTag\": \"\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "834ccd07-3d95-49cd-af1b-499335e9f042",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "41f9c3ab-3d15-4283-b765-de9a5ea3b25f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5aa809f3-7d53-458a-806f-ebbfbc528ba8",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna ea\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a7d277af-74dd-4ce0-bdf0-8da26036d244",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a328cddb-4ee9-4121-8244-7a02524d3242",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"\",\n            \"properties\": {\n                \"name\": \"in\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "19816f30-067a-415b-aaf3-ede4928ce86e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et adipisicing in\",\n            \"properties\": {\n                \"name\": \"aliquip occaecat do\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"cillum\",\n    \"entityETag\": \"in dolor mo\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -97398433,\n      \"specialRestrictionTypeId\": -52657872,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"pariatur irure\",\n        \"endTime\": \"non culpa cillum pariatur minim\",\n        \"maxStay\": -45043620\n       },\n       {\n        \"startTime\": \"ea non velit magn\",\n        \"endTime\": \"Excepteur\",\n        \"maxStay\": -55283746\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 54554343,\n      \"specialRestrictionTypeId\": -99357337,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"laborum amet Lorem voluptate proident\",\n        \"endTime\": \"sint\",\n        \"maxStay\": 24915103\n       },\n       {\n        \"startTime\": \"cillum Lorem\",\n        \"endTime\": \"elit\",\n        \"maxStay\": -41261188\n       }\n      ]\n     }\n    ],\n    \"distance\": 46096766.248000205\n   },\n   {\n    \"entityId\": \"voluptate\",\n    \"entityETag\": \"reprehenderit Excepteur\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 93030955,\n      \"specialRestrictionTypeId\": -71591293,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ad consequat ullamco cillum\",\n        \"endTime\": \"velit fugiat sunt irure sint\",\n        \"maxStay\": 3220893\n       },\n       {\n        \"startTime\": \"magna dolore commodo\",\n        \"endTime\": \"velit id in ut reprehenderit\",\n        \"maxStay\": -28864548\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 39350343,\n      \"specialRestrictionTypeId\": -81807817,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"reprehenderit occaecat elit\",\n        \"endTime\": \"deser\",\n        \"maxStay\": -60483087\n       },\n       {\n        \"startTime\": \"minim sunt cupidatat nulla Excepteur\",\n        \"endTime\": \"do non tempor\",\n        \"maxStay\": 94349349\n       }\n      ]\n     }\n    ],\n    \"distance\": 21466030.456745118\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"est pariatur\",\n   \"entityETag\": \"sint amet aute\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 86660111,\n     \"specialRestrictionTypeId\": 32214160,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"quis reprehenderit commodo irure in\",\n       \"endTime\": \"elit laboris\",\n       \"maxStay\": -3455885\n      },\n      {\n       \"startTime\": \"exercitation do\",\n       \"endTime\": \"ad consectetur magna\",\n       \"maxStay\": 42726828\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 90538646,\n     \"specialRestrictionTypeId\": -1870048,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"quis ex velit laboris\",\n       \"endTime\": \"anim sed incididunt magna commodo\",\n       \"maxStay\": 11335857\n      },\n      {\n       \"startTime\": \"incididunt deserunt tempor dolore dolore\",\n       \"endTime\": \"Duis aliqua irure eiusmod\",\n       \"maxStay\": 7596849\n      }\n     ]\n    }\n   ],\n   \"distance\": -12594634.279518902\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b51060f0-d826-4c08-8163-2825428eb915",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et adipisicing in\",\n            \"properties\": {\n                \"name\": \"aliquip occaecat do\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "611b29c9-8499-47dc-99df-4ba9702025b5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et adipisicing in\",\n            \"properties\": {\n                \"name\": \"aliquip occaecat do\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8d71ec40-21c2-4158-b8bf-d6f4c6cb5c62",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et adipisicing in\",\n            \"properties\": {\n                \"name\": \"aliquip occaecat do\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "559f76be-ddcd-452d-bc1e-933333ebc637",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et adipisicing in\",\n            \"properties\": {\n                \"name\": \"aliquip occaecat do\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "645b5163-2ee2-49ba-8126-74ebf588a7e8",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "1063ac3a-d262-4703-89a5-b9600d7df889",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"irure Lorem mollit Ut proident\",\n      \"city\": \"do deserunt\",\n      \"country\": \"culpa sint consectetur ex Ut\",\n      \"postcode\": \"amet ullamco Ut non\"\n     },\n     \"locationCode\": \"esse consectetur proident est\",\n     \"totalCapacity\": -33247053,\n     \"zoneId\": \"Lorem consequat dolore\",\n     \"authorityId\": \"et deserunt ut\",\n     \"features\": {\n      \"type\": \"sit id esse\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"Excepteur fugiat\",\n           \"crs\": {\n            \"type\": \"ea Ut\",\n            \"properties\": {\n             \"name\": \"laborum anim nulla\"\n            }\n           }\n          },\n          {\n           \"type\": \"culpa laboris ad eu\",\n           \"crs\": {\n            \"type\": \"occaecat eu\",\n            \"properties\": {\n             \"name\": \"nostrud ullamco dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do Excepteur ad proident\",\n         \"crs\": {\n          \"type\": \"voluptate officia ex velit reprehenderit\",\n          \"properties\": {\n           \"name\": \"adipisicing\"\n          }\n         }\n        },\n        \"type\": \"irure pariatur nulla\",\n        \"id\": \"aliqua ex laborum quis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"exercitation\",\n           \"crs\": {\n            \"type\": \"ex\",\n            \"properties\": {\n             \"name\": \"reprehenderit veniam\"\n            }\n           }\n          },\n          {\n           \"type\": \"aute Ut enim\",\n           \"crs\": {\n            \"type\": \"deserunt Excepteur dolor dolore id\",\n            \"properties\": {\n             \"name\": \"Duis ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur adipisicing ad\",\n         \"crs\": {\n          \"type\": \"officia ea velit\",\n          \"properties\": {\n           \"name\": \"aliquip eiusmod su\"\n          }\n         }\n        },\n        \"type\": \"ipsum irure\",\n        \"id\": \"cupidatat adipisicing\"\n       }\n      ],\n      \"properties\": \"sint\"\n     },\n     \"paymentMethodIds\": [\n      -40990761,\n      -60071903\n     ],\n     \"entityId\": \"occaecat cillum cupidatat dolore\",\n     \"entityType\": 4,\n     \"name\": \"qui pariatur nisi dolore\",\n     \"eTag\": \"commodo ea sit ut\"\n    },\n    \"distance\": 69518417.8715257\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"elit dolore sit\",\n      \"city\": \"exercitation nulla dolore consequat\",\n      \"country\": \"quis aliqua consequat ea\",\n      \"postcode\": \"dolor Duis fugiat\"\n     },\n     \"locationCode\": \"laboris nulla incididunt ut\",\n     \"totalCapacity\": 94227602,\n     \"zoneId\": \"dolore culpa sit\",\n     \"authorityId\": \"sed irure ipsum\",\n     \"features\": {\n      \"type\": \"ipsum velit Lorem nulla\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"enim id ipsum amet dolore\",\n           \"crs\": {\n            \"type\": \"Lorem ut exercitatio\",\n            \"properties\": {\n             \"name\": \"exercitation incididunt commodo quis amet\"\n            }\n           }\n          },\n          {\n           \"type\": \"non ipsum\",\n           \"crs\": {\n            \"type\": \"ut nostrud\",\n            \"properties\": {\n             \"name\": \"eu sint l\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cupidatat nulla aute \",\n         \"crs\": {\n          \"type\": \"Duis eiusmod veniam\",\n          \"properties\": {\n           \"name\": \"eiusmod\"\n          }\n         }\n        },\n        \"type\": \"Duis\",\n        \"id\": \"aute Excepteur consectetur est\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nisi exercitation in ipsum\",\n           \"crs\": {\n            \"type\": \"nostrud\",\n            \"properties\": {\n             \"name\": \"adipisicing irure culpa enim\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor laboris minim nostrud\",\n           \"crs\": {\n            \"type\": \"adipisicing magna\",\n            \"properties\": {\n             \"name\": \"minim ut sint in enim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"enim amet eiusmod exercitation\",\n         \"crs\": {\n          \"type\": \"voluptate\",\n          \"properties\": {\n           \"name\": \"aliqua\"\n          }\n         }\n        },\n        \"type\": \"\",\n        \"id\": \"ea cupidatat nisi\"\n       }\n      ],\n      \"properties\": \"non nulla\"\n     },\n     \"paymentMethodIds\": [\n      -68521138,\n      92344043\n     ],\n     \"entityId\": \"in amet\",\n     \"entityType\": 4,\n     \"name\": \"id dolor fugiat\",\n     \"eTag\": \"enim et ad qui\"\n    },\n    \"distance\": 1367585.5709108114\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bc743da9-df74-4d0f-afe2-0305ce7dda97",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c1c1d487-abe3-4a0d-8b58-e7402eeb5808",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a2982762-50be-41f4-990f-30ad1aee357b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1be6264c-e031-404b-a45a-17ecab16d347",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d7e7db58-f639-4e35-8925-d69d665f63fd",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip nostrud\",\n            \"properties\": {\n                \"name\": \"officia est quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "e3be71a3-dd89-4f73-ae11-e3f13e9b5af6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum labore\",\n            \"properties\": {\n                \"name\": \"ut dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"irure Lorem mollit Ut proident\",\n      \"city\": \"do deserunt\",\n      \"country\": \"culpa sint consectetur ex Ut\",\n      \"postcode\": \"amet ullamco Ut non\"\n     },\n     \"locationCode\": \"esse consectetur proident est\",\n     \"totalCapacity\": -33247053,\n     \"zoneId\": \"Lorem consequat dolore\",\n     \"authorityId\": \"et deserunt ut\",\n     \"features\": {\n      \"type\": \"sit id esse\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"Excepteur fugiat\",\n           \"crs\": {\n            \"type\": \"ea Ut\",\n            \"properties\": {\n             \"name\": \"laborum anim nulla\"\n            }\n           }\n          },\n          {\n           \"type\": \"culpa laboris ad eu\",\n           \"crs\": {\n            \"type\": \"occaecat eu\",\n            \"properties\": {\n             \"name\": \"nostrud ullamco dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"do Excepteur ad proident\",\n         \"crs\": {\n          \"type\": \"voluptate officia ex velit reprehenderit\",\n          \"properties\": {\n           \"name\": \"adipisicing\"\n          }\n         }\n        },\n        \"type\": \"irure pariatur nulla\",\n        \"id\": \"aliqua ex laborum quis\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"exercitation\",\n           \"crs\": {\n            \"type\": \"ex\",\n            \"properties\": {\n             \"name\": \"reprehenderit veniam\"\n            }\n           }\n          },\n          {\n           \"type\": \"aute Ut enim\",\n           \"crs\": {\n            \"type\": \"deserunt Excepteur dolor dolore id\",\n            \"properties\": {\n             \"name\": \"Duis ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur adipisicing ad\",\n         \"crs\": {\n          \"type\": \"officia ea velit\",\n          \"properties\": {\n           \"name\": \"aliquip eiusmod su\"\n          }\n         }\n        },\n        \"type\": \"ipsum irure\",\n        \"id\": \"cupidatat adipisicing\"\n       }\n      ],\n      \"properties\": \"sint\"\n     },\n     \"paymentMethodIds\": [\n      -40990761,\n      -60071903\n     ],\n     \"entityId\": \"occaecat cillum cupidatat dolore\",\n     \"entityType\": 4,\n     \"name\": \"qui pariatur nisi dolore\",\n     \"eTag\": \"commodo ea sit ut\"\n    },\n    \"distance\": 69518417.8715257\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"elit dolore sit\",\n      \"city\": \"exercitation nulla dolore consequat\",\n      \"country\": \"quis aliqua consequat ea\",\n      \"postcode\": \"dolor Duis fugiat\"\n     },\n     \"locationCode\": \"laboris nulla incididunt ut\",\n     \"totalCapacity\": 94227602,\n     \"zoneId\": \"dolore culpa sit\",\n     \"authorityId\": \"sed irure ipsum\",\n     \"features\": {\n      \"type\": \"ipsum velit Lorem nulla\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"enim id ipsum amet dolore\",\n           \"crs\": {\n            \"type\": \"Lorem ut exercitatio\",\n            \"properties\": {\n             \"name\": \"exercitation incididunt commodo quis amet\"\n            }\n           }\n          },\n          {\n           \"type\": \"non ipsum\",\n           \"crs\": {\n            \"type\": \"ut nostrud\",\n            \"properties\": {\n             \"name\": \"eu sint l\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cupidatat nulla aute \",\n         \"crs\": {\n          \"type\": \"Duis eiusmod veniam\",\n          \"properties\": {\n           \"name\": \"eiusmod\"\n          }\n         }\n        },\n        \"type\": \"Duis\",\n        \"id\": \"aute Excepteur consectetur est\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"nisi exercitation in ipsum\",\n           \"crs\": {\n            \"type\": \"nostrud\",\n            \"properties\": {\n             \"name\": \"adipisicing irure culpa enim\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor laboris minim nostrud\",\n           \"crs\": {\n            \"type\": \"adipisicing magna\",\n            \"properties\": {\n             \"name\": \"minim ut sint in enim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"enim amet eiusmod exercitation\",\n         \"crs\": {\n          \"type\": \"voluptate\",\n          \"properties\": {\n           \"name\": \"aliqua\"\n          }\n         }\n        },\n        \"type\": \"\",\n        \"id\": \"ea cupidatat nisi\"\n       }\n      ],\n      \"properties\": \"non nulla\"\n     },\n     \"paymentMethodIds\": [\n      -68521138,\n      92344043\n     ],\n     \"entityId\": \"in amet\",\n     \"entityType\": 4,\n     \"name\": \"id dolor fugiat\",\n     \"eTag\": \"enim et ad qui\"\n    },\n    \"distance\": 1367585.5709108114\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "254c51f9-abdc-4780-937c-2050706bad4c",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum labore\",\n            \"properties\": {\n                \"name\": \"ut dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e0bbe19b-480e-4e77-aea7-0ed6ac64d4fb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum labore\",\n            \"properties\": {\n                \"name\": \"ut dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6b726a0a-b9b3-4c32-a31c-df4a9e8d1416",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum labore\",\n            \"properties\": {\n                \"name\": \"ut dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cf004fbb-c0f2-4fab-8dcf-205bbad548ee",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum labore\",\n            \"properties\": {\n                \"name\": \"ut dolor\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4cbb7f77-a1df-40fa-a536-c133f6f4970f",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "20b84ca5-310f-426e-9ece-2cc5c5bc5c44",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"et Excepteur deserunt\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"adipisicing sed proident\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -48459963.455161504,\n      \"currency\": \"Duis pariatur elit\",\n      \"minCost\": 61632564.57508877,\n      \"minStayUntil\": \"sed exercitation sint consequat\",\n      \"canExtendUntil\": \"ut ea\",\n      \"pricedUntil\": \"culpa eu nostrud tempor\",\n      \"noReturnUntil\": \"ea aliquip\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -68012169,\n       -39586207\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris pariatur nulla\",\n      \"surcharge\": {\n       \"value\": -78427057.13292544,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -60647948\n       }\n      }\n     },\n     {\n      \"cost\": 26963260.848750755,\n      \"currency\": \"laborum ullamco\",\n      \"minCost\": -73652100.98144655,\n      \"minStayUntil\": \"laborum eu mollit ut comm\",\n      \"canExtendUntil\": \"quis Excepteur exercitation\",\n      \"pricedUntil\": \"co\",\n      \"noReturnUntil\": \"adipisicing aute ad aliquip\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -99753911,\n       -51540164\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia dolore ut\",\n      \"surcharge\": {\n       \"value\": -24234626.413406298,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 3817761\n       }\n      }\n     }\n    ],\n    \"distance\": 50390301.43974236,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -84892306,\n      -85445700\n     ]\n    },\n    \"entityETag\": \"deserunt dolor do Ut cupidatat\"\n   },\n   {\n    \"entityId\": \"enim aliqua id\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -36769719.746434815,\n      \"currency\": \"esse amet\",\n      \"minCost\": -98157266.24167235,\n      \"minStayUntil\": \"aliquip qui\",\n      \"canExtendUntil\": \"et elit\",\n      \"pricedUntil\": \"laborum sit ut laboris\",\n      \"noReturnUntil\": \"ut laboris ad\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -30325554,\n       -19946914\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nisi ipsum pariatur occaecat\",\n      \"surcharge\": {\n       \"value\": 73010977.88225403,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 15008955\n       }\n      }\n     },\n     {\n      \"cost\": 63750507.727795124,\n      \"currency\": \"consequat pariatur\",\n      \"minCost\": 22763709.267552912,\n      \"minStayUntil\": \"aute in\",\n      \"canExtendUntil\": \"sed eu\",\n      \"pricedUntil\": \"nostrud esse\",\n      \"noReturnUntil\": \"in reprehenderit \",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -53923635,\n       49317163\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"magna nisi aliquip nulla\",\n      \"surcharge\": {\n       \"value\": 49368011.25195265,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -65742659\n       }\n      }\n     }\n    ],\n    \"distance\": 65365491.55034953,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -66256727,\n      -62881267\n     ]\n    },\n    \"entityETag\": \"non sunt ut anim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "deba8987-2bc3-4421-af69-1c9022736929",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1a919e0b-ed2e-4dca-aaa8-5f3651bb6421",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "89cb6b18-9647-40e3-8060-d2f345fb7e05",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ff0e427c-b8ce-44cd-9a4f-d6a337644724",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e984afaf-8766-4b08-a28d-ecc8decdea80",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"culpa aliqua dolor cillum velit\",\n            \"properties\": {\n                \"name\": \"dolore ea\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "9f25825c-5c15-4fd8-bc9b-e9e8424fa6f1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ad Ut\",\n            \"properties\": {\n                \"name\": \"in dolor minim commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 2,\n  \"requestedStartTime\": \"et Excepteur deserunt\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"adipisicing sed proident\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -48459963.455161504,\n      \"currency\": \"Duis pariatur elit\",\n      \"minCost\": 61632564.57508877,\n      \"minStayUntil\": \"sed exercitation sint consequat\",\n      \"canExtendUntil\": \"ut ea\",\n      \"pricedUntil\": \"culpa eu nostrud tempor\",\n      \"noReturnUntil\": \"ea aliquip\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -68012169,\n       -39586207\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris pariatur nulla\",\n      \"surcharge\": {\n       \"value\": -78427057.13292544,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -60647948\n       }\n      }\n     },\n     {\n      \"cost\": 26963260.848750755,\n      \"currency\": \"laborum ullamco\",\n      \"minCost\": -73652100.98144655,\n      \"minStayUntil\": \"laborum eu mollit ut comm\",\n      \"canExtendUntil\": \"quis Excepteur exercitation\",\n      \"pricedUntil\": \"co\",\n      \"noReturnUntil\": \"adipisicing aute ad aliquip\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -99753911,\n       -51540164\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"officia dolore ut\",\n      \"surcharge\": {\n       \"value\": -24234626.413406298,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 3817761\n       }\n      }\n     }\n    ],\n    \"distance\": 50390301.43974236,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -84892306,\n      -85445700\n     ]\n    },\n    \"entityETag\": \"deserunt dolor do Ut cupidatat\"\n   },\n   {\n    \"entityId\": \"enim aliqua id\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -36769719.746434815,\n      \"currency\": \"esse amet\",\n      \"minCost\": -98157266.24167235,\n      \"minStayUntil\": \"aliquip qui\",\n      \"canExtendUntil\": \"et elit\",\n      \"pricedUntil\": \"laborum sit ut laboris\",\n      \"noReturnUntil\": \"ut laboris ad\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -30325554,\n       -19946914\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nisi ipsum pariatur occaecat\",\n      \"surcharge\": {\n       \"value\": 73010977.88225403,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 15008955\n       }\n      }\n     },\n     {\n      \"cost\": 63750507.727795124,\n      \"currency\": \"consequat pariatur\",\n      \"minCost\": 22763709.267552912,\n      \"minStayUntil\": \"aute in\",\n      \"canExtendUntil\": \"sed eu\",\n      \"pricedUntil\": \"nostrud esse\",\n      \"noReturnUntil\": \"in reprehenderit \",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -53923635,\n       49317163\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"magna nisi aliquip nulla\",\n      \"surcharge\": {\n       \"value\": 49368011.25195265,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -65742659\n       }\n      }\n     }\n    ],\n    \"distance\": 65365491.55034953,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -66256727,\n      -62881267\n     ]\n    },\n    \"entityETag\": \"non sunt ut anim\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e65df72c-c920-4096-bdfa-bae432534198",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ad Ut\",\n            \"properties\": {\n                \"name\": \"in dolor minim commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d062a04c-90e0-4195-8fdc-994002bcf437",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ad Ut\",\n            \"properties\": {\n                \"name\": \"in dolor minim commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "380ea136-d065-4550-8c93-1cd6c0f2bad1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ad Ut\",\n            \"properties\": {\n                \"name\": \"in dolor minim commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c48f7284-8744-45ee-8bfe-1fbe332b34bc",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip ad Ut\",\n            \"properties\": {\n                \"name\": \"in dolor minim commodo\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9a4b4283-7f8e-452d-aff4-53e04a0b87fd",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cillum com\",\n            \"properties\": {\n                \"name\": \"occaecat officia\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "b3683b23-26a9-40db-a6f5-5e9a2de98991",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui officia proident culpa\",\n            \"properties\": {\n                \"name\": \"in consequat cillum dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"ea pariatur et dolor\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"non mollit do\",\n     \"crs\": {\n      \"type\": \"ad Duis\",\n      \"properties\": {\n       \"name\": \"velit commodo\"\n      }\n     }\n    },\n    \"type\": \"dolor ullamco in\",\n    \"id\": \"minim id velit Ut pariatur\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"officia et\",\n     \"crs\": {\n      \"type\": \"laborum Duis\",\n      \"properties\": {\n       \"name\": \"consectetur nisi\"\n      }\n     }\n    },\n    \"type\": \"laboris pariatur\",\n    \"id\": \"dolor in\"\n   }\n  ],\n  \"properties\": \"dolor veniam cillum fugiat\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c67990b0-ac6d-4011-9e35-6d4145d493f5",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui officia proident culpa\",\n            \"properties\": {\n                \"name\": \"in consequat cillum dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6a2d84ad-027c-407f-80e7-21a6b876836b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui officia proident culpa\",\n            \"properties\": {\n                \"name\": \"in consequat cillum dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "95dd1bfb-279d-4b28-8b05-2deda4c67485",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui officia proident culpa\",\n            \"properties\": {\n                \"name\": \"in consequat cillum dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bfc1d9c2-886a-4b9c-885e-129bf4985562",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui officia proident culpa\",\n            \"properties\": {\n                \"name\": \"in consequat cillum dolore\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1f922603-0fad-461d-bf05-9671a23d7f5d",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"do in fugiat\",\n            \"properties\": {\n                \"name\": \"fugiat incididunt ipsum dolore minim\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "4ff10477-d5c5-45cb-8e1d-236533a34117",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur magna\",\n            \"properties\": {\n                \"name\": \"amet qui id\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"cillum\",\n    \"entityETag\": \"in dolor mo\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -97398433,\n      \"specialRestrictionTypeId\": -52657872,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"pariatur irure\",\n        \"endTime\": \"non culpa cillum pariatur minim\",\n        \"maxStay\": -45043620\n       },\n       {\n        \"startTime\": \"ea non velit magn\",\n        \"endTime\": \"Excepteur\",\n        \"maxStay\": -55283746\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 54554343,\n      \"specialRestrictionTypeId\": -99357337,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"laborum amet Lorem voluptate proident\",\n        \"endTime\": \"sint\",\n        \"maxStay\": 24915103\n       },\n       {\n        \"startTime\": \"cillum Lorem\",\n        \"endTime\": \"elit\",\n        \"maxStay\": -41261188\n       }\n      ]\n     }\n    ],\n    \"distance\": 46096766.248000205\n   },\n   {\n    \"entityId\": \"voluptate\",\n    \"entityETag\": \"reprehenderit Excepteur\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 93030955,\n      \"specialRestrictionTypeId\": -71591293,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ad consequat ullamco cillum\",\n        \"endTime\": \"velit fugiat sunt irure sint\",\n        \"maxStay\": 3220893\n       },\n       {\n        \"startTime\": \"magna dolore commodo\",\n        \"endTime\": \"velit id in ut reprehenderit\",\n        \"maxStay\": -28864548\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 39350343,\n      \"specialRestrictionTypeId\": -81807817,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"reprehenderit occaecat elit\",\n        \"endTime\": \"deser\",\n        \"maxStay\": -60483087\n       },\n       {\n        \"startTime\": \"minim sunt cupidatat nulla Excepteur\",\n        \"endTime\": \"do non tempor\",\n        \"maxStay\": 94349349\n       }\n      ]\n     }\n    ],\n    \"distance\": 21466030.456745118\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"est pariatur\",\n   \"entityETag\": \"sint amet aute\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 86660111,\n     \"specialRestrictionTypeId\": 32214160,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"quis reprehenderit commodo irure in\",\n       \"endTime\": \"elit laboris\",\n       \"maxStay\": -3455885\n      },\n      {\n       \"startTime\": \"exercitation do\",\n       \"endTime\": \"ad consectetur magna\",\n       \"maxStay\": 42726828\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 90538646,\n     \"specialRestrictionTypeId\": -1870048,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"quis ex velit laboris\",\n       \"endTime\": \"anim sed incididunt magna commodo\",\n       \"maxStay\": 11335857\n      },\n      {\n       \"startTime\": \"incididunt deserunt tempor dolore dolore\",\n       \"endTime\": \"Duis aliqua irure eiusmod\",\n       \"maxStay\": 7596849\n      }\n     ]\n    }\n   ],\n   \"distance\": -12594634.279518902\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9626823a-2df2-492a-a40c-06ea911420b1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur magna\",\n            \"properties\": {\n                \"name\": \"amet qui id\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sint sit ad\",\n \"errors\": [\n  {\n   \"property\": \"reprehenderit exercitati\",\n   \"code\": \"et do aliquip laboris\",\n   \"message\": \"officia Lorem est in mollit\"\n  },\n  {\n   \"property\": \"nulla ut\",\n   \"code\": \"proident minim sit Lorem\",\n   \"message\": \"d\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7a96765f-4772-4098-aab4-e7192349de56",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur magna\",\n            \"properties\": {\n                \"name\": \"amet qui id\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3a0efcbf-25dd-41a6-add5-a99944129325",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur magna\",\n            \"properties\": {\n                \"name\": \"amet qui id\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a4a6cc0d-4b05-4170-a539-47690eaaeef5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Excepteur magna\",\n            \"properties\": {\n                \"name\": \"amet qui id\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5584f9cc-ce07-4155-8fd0-e972cd223c24",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "7f5cc5af-126a-4113-a1cc-bae4c59a3ab6",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d5331965-ef84-48a8-bfe8-9197ee43b5d7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "96da62c4-3c62-41fc-a797-1a2f92fa4517",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1a21c32e-3b90-4d98-9c70-18744a8360a0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "d3f09578-1c5b-4b72-98d4-6eb0156a34f4",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
