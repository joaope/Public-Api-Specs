{
  "item": [
    {
      "id": "5d8fa7a1-2c14-499f-8941-c27daf8986fd",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "4549c29c-529a-4c2e-9c5c-8616fa049487",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"Ut anim\"\n   },\n   {\n    \"message\": \"aliquip fugiat\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"in sunt\",\n    \"cardPaymentsExternalUrl\": \"dolore eiusmod do eu tempor\",\n    \"paymentsTelephone\": \"sed officia velit labore\"\n   },\n   {\n    \"name\": \"sunt\",\n    \"cardPaymentsExternalUrl\": \"tempor esse deserunt\",\n    \"paymentsTelephone\": \"incididunt occaecat veniam officia\"\n   }\n  ],\n  \"entityType\": 2,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"sint\",\n     \"crs\": {\n      \"type\": \"aliqua\",\n      \"properties\": {\n       \"name\": \"velit qui\"\n      }\n     }\n    },\n    {\n     \"type\": \"laborum ad nulla\",\n     \"crs\": {\n      \"type\": \"anim mollit consequat incididunt irure\",\n      \"properties\": {\n       \"name\": \"sint\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ea\",\n   \"crs\": {\n    \"type\": \"adipisicing dolor\",\n    \"properties\": {\n     \"name\": \"deserunt culpa incididunt\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"proident\",\n  \"name\": \"magna voluptate id Ut\",\n  \"eTag\": \"cillum ea\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "73040169-333e-4fd3-bf4b-c4066a779891",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f1a2aee7-3ae7-4d5e-89a6-758d982eac68",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "835e2158-c3a1-4b33-9067-498152748c9c",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim elit esse\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c253b523-06bf-4db9-8d60-d8d31e49c613",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a09e3789-29ba-408b-a26a-5f689f7787a9",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "bb15a4fa-6724-441c-967a-afefba05fc61",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"incididunt dolore est esse labore\",\n     \"city\": \"ipsum\",\n     \"country\": \"sint ea\",\n     \"postcode\": \"quis officia sed enim\"\n    },\n    \"locationCode\": \"amet molli\",\n    \"totalCapacity\": -48229631,\n    \"zoneId\": \"voluptate velit ut enim sed\",\n    \"authorityId\": \"non dolore in\",\n    \"features\": {\n     \"type\": \"a\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"officia\",\n          \"crs\": {\n           \"type\": \"amet consequat esse\",\n           \"properties\": {\n            \"name\": \"voluptate anim ut\"\n           }\n          }\n         },\n         {\n          \"type\": \"occaecat irure nisi\",\n          \"crs\": {\n           \"type\": \"eu laboris\",\n           \"properties\": {\n            \"name\": \"officia sit qui dolor elit\"\n           }\n          }\n         }\n        ],\n        \"type\": \"officia laboris reprehenderit deserunt ullam\",\n        \"crs\": {\n         \"type\": \"adipisicing\",\n         \"properties\": {\n          \"name\": \"anim in\"\n         }\n        }\n       },\n       \"type\": \"officia\",\n       \"id\": \"voluptate in\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"nulla voluptate\",\n          \"crs\": {\n           \"type\": \"esse aliquip velit sint\",\n           \"properties\": {\n            \"name\": \"sint laboris enim\"\n           }\n          }\n         },\n         {\n          \"type\": \"amet\",\n          \"crs\": {\n           \"type\": \"ipsum non\",\n           \"properties\": {\n            \"name\": \"amet ex veniam quis\"\n           }\n          }\n         }\n        ],\n        \"type\": \"culpa amet commodo\",\n        \"crs\": {\n         \"type\": \"ex labore sed\",\n         \"properties\": {\n          \"name\": \"magna ad\"\n         }\n        }\n       },\n       \"type\": \"ad\",\n       \"id\": \"anim Excepteur velit\"\n      }\n     ],\n     \"properties\": \"enim quis et dolor\"\n    },\n    \"paymentMethodIds\": [\n     -19672926,\n     86202127\n    ],\n    \"entityId\": \"elit exercitation\",\n    \"entityType\": 3,\n    \"name\": \"deserunt incididunt\",\n    \"eTag\": \"commodo incididu\"\n   },\n   {\n    \"address\": {\n     \"street\": \"aliquip cupidatat incididunt\",\n     \"city\": \"dolore amet\",\n     \"country\": \"id esse anim enim\",\n     \"postcode\": \"reprehenderit fugiat\"\n    },\n    \"locationCode\": \"qui mollit sint\",\n    \"totalCapacity\": 86214684,\n    \"zoneId\": \"do ut in in\",\n    \"authorityId\": \"Lorem ut culpa\",\n    \"features\": {\n     \"type\": \"exercitation minim ad\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"veniam dolor nisi\",\n          \"crs\": {\n           \"type\": \"dolore sint est\",\n           \"properties\": {\n            \"name\": \"culpa magna aliqua\"\n           }\n          }\n         },\n         {\n          \"type\": \"commodo\",\n          \"crs\": {\n           \"type\": \"i\",\n           \"properties\": {\n            \"name\": \"quis dolore elit velit eu\"\n           }\n          }\n         }\n        ],\n        \"type\": \"Duis mollit\",\n        \"crs\": {\n         \"type\": \"dolore\",\n         \"properties\": {\n          \"name\": \"dolore laborum consectetur\"\n         }\n        }\n       },\n       \"type\": \"laboris ipsum elit nostrud minim\",\n       \"id\": \"in dolore nostrud occaecat\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"enim ut\",\n          \"crs\": {\n           \"type\": \"eu do deserunt sed\",\n           \"properties\": {\n            \"name\": \"occaecat non\"\n           }\n          }\n         },\n         {\n          \"type\": \"id elit minim sint\",\n          \"crs\": {\n           \"type\": \"quis magna nisi velit\",\n           \"properties\": {\n            \"name\": \"velit dolore in deserunt sunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"aute ut\",\n        \"crs\": {\n         \"type\": \"reprehenderit non nisi sit nulla\",\n         \"properties\": {\n          \"name\": \"pariatur commodo in Excepteur\"\n         }\n        }\n       },\n       \"type\": \"aliquip nostrud \",\n       \"id\": \"ut ullamco fugiat\"\n      }\n     ],\n     \"properties\": \"exercitation irure amet in\"\n    },\n    \"paymentMethodIds\": [\n     -6373255,\n     50177712\n    ],\n    \"entityId\": \"sunt Ut\",\n    \"entityType\": 2,\n    \"name\": \"et officia\",\n    \"eTag\": \"magn\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"dolore\",\n       \"crs\": {\n        \"type\": \"id eiusmod cillum\",\n        \"properties\": {\n         \"name\": \"reprehenderit ad laboris in\"\n        }\n       }\n      },\n      {\n       \"type\": \"nisi\",\n       \"crs\": {\n        \"type\": \"ad ex enim\",\n        \"properties\": {\n         \"name\": \"esse cons\"\n        }\n       }\n      }\n     ],\n     \"type\": \"officia in mollit\",\n     \"crs\": {\n      \"type\": \"voluptate nostrud\",\n      \"properties\": {\n       \"name\": \"pariatur qui ad\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"dolor et occaecat dolore\"\n     },\n     {\n      \"message\": \"mollit\"\n     }\n    ],\n    \"authorityId\": \"co\",\n    \"zoneType\": 5,\n    \"entityType\": 2,\n    \"entityId\": \"est consequat Ut id aute\",\n    \"name\": \"occaecat Lorem elit ut\",\n    \"eTag\": \"dolore\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"officia\",\n       \"crs\": {\n        \"type\": \"labore sint commodo tempor adipisicing\",\n        \"properties\": {\n         \"name\": \"pariatur mollit aliquip eiusmod nulla\"\n        }\n       }\n      },\n      {\n       \"type\": \"aute exercitation ut ani\",\n       \"crs\": {\n        \"type\": \"laborum laboris ullamco minim\",\n        \"properties\": {\n         \"name\": \"mollit est ame\"\n        }\n       }\n      }\n     ],\n     \"type\": \"qui elit\",\n     \"crs\": {\n      \"type\": \"labore dolor eiusmod dolore\",\n      \"properties\": {\n       \"name\": \"ea\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"aliqua ad in exercitation\"\n     },\n     {\n      \"message\": \"culpa dolor deserunt\"\n     }\n    ],\n    \"authorityId\": \"reprehenderit Ut\",\n    \"zoneType\": 4,\n    \"entityType\": 3,\n    \"entityId\": \"ex culpa sit\",\n    \"name\": \"commodo\",\n    \"eTag\": \"minim enim occaecat cillum laboris\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"sit nulla est labore dolor\"\n     },\n     {\n      \"message\": \"pariatur cupidatat fugiat Ut\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"non amet cillum\",\n      \"cardPaymentsExternalUrl\": \"mollit reprehenderit consequat\",\n      \"paymentsTelephone\": \"tempor culpa\"\n     },\n     {\n      \"name\": \"mollit occaecat adipisicing\",\n      \"cardPaymentsExternalUrl\": \"laborum pariatur ad occaecat\",\n      \"paymentsTelephone\": \"nostrud cupidatat ea\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"id sed\",\n       \"crs\": {\n        \"type\": \"culpa aliquip velit fugiat esse\",\n        \"properties\": {\n         \"name\": \"dolore velit pariatur\"\n        }\n       }\n      },\n      {\n       \"type\": \"aute veniam\",\n       \"crs\": {\n        \"type\": \"magna tempor proident\",\n        \"properties\": {\n         \"name\": \"commodo nisi\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ad do\",\n     \"crs\": {\n      \"type\": \"id f\",\n      \"properties\": {\n       \"name\": \"velit aliquip sunt\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"p\",\n    \"name\": \"labore mollit\",\n    \"eTag\": \"ut velit reprehenderit ut\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"voluptate ad aute ut\"\n     },\n     {\n      \"message\": \"nostrud ad dolore Duis\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"incididunt nulla cupidatat dolor eiusmod\",\n      \"cardPaymentsExternalUrl\": \"magna ipsum ut proident\",\n      \"paymentsTelephone\": \"cillum officia deserunt id\"\n     },\n     {\n      \"name\": \"incididunt et\",\n      \"cardPaymentsExternalUrl\": \"ut aute nisi\",\n      \"paymentsTelephone\": \"minim voluptate ani\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"dolor nulla\",\n       \"crs\": {\n        \"type\": \"magna amet\",\n        \"properties\": {\n         \"name\": \"ex consectetur fugiat labore\"\n        }\n       }\n      },\n      {\n       \"type\": \"Ut\",\n       \"crs\": {\n        \"type\": \"consequat ut dolore et\",\n        \"properties\": {\n         \"name\": \"sit pariatur\"\n        }\n       }\n      }\n     ],\n     \"type\": \"magna sed aliqua enim esse\",\n     \"crs\": {\n      \"type\": \"enim Duis in laborum ut\",\n      \"properties\": {\n       \"name\": \"sed\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"amet Lorem sunt fugiat laborum\",\n    \"name\": \"minim reprehenderit\",\n    \"eTag\": \"e\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6bc5d4c3-fe3a-426d-a91d-9fdbe557bd00",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"et exercitation\",\n \"errors\": [\n  {\n   \"property\": \"voluptate reprehenderit mollit nisi\",\n   \"code\": \"eu minim\",\n   \"message\": \"sunt id fugiat occaecat\"\n  },\n  {\n   \"property\": \"ci\",\n   \"code\": \"laborum aliqua ex quis\",\n   \"message\": \"ut quis non aliquip eu\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c4c2808a-8d9c-401b-a77a-a6689347fe0a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "35e5e830-2d04-41a1-8117-8934965a0d36",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b7426300-34c9-47fb-86ca-d73da6d6686b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0f4a91ae-e895-4d03-8aab-a08b243c70b8",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "a54dad8d-beb5-4dde-a7d2-ffb0cb2bd6f4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"cillum\",\n   \"city\": \"quis occaecat nulla ut exercitation\",\n   \"country\": \"sed laboris\",\n   \"postcode\": \"veniam magna reprehenderit culpa\"\n  },\n  \"locationCode\": \"do commodo\",\n  \"totalCapacity\": 64930478,\n  \"zoneId\": \"ex culpa\",\n  \"authorityId\": \"aliqua laborum\",\n  \"features\": {\n   \"type\": \"ullamco tempor anim\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"quis voluptate est\",\n        \"crs\": {\n         \"type\": \"consectetur Excepteur ut nisi amet\",\n         \"properties\": {\n          \"name\": \"Lorem\"\n         }\n        }\n       },\n       {\n        \"type\": \"incididunt\",\n        \"crs\": {\n         \"type\": \"reprehenderit exercitation tempor Ut\",\n         \"properties\": {\n          \"name\": \"qui\"\n         }\n        }\n       }\n      ],\n      \"type\": \"ipsum ad\",\n      \"crs\": {\n       \"type\": \"quis id\",\n       \"properties\": {\n        \"name\": \"fugiat veniam amet\"\n       }\n      }\n     },\n     \"type\": \"do officia\",\n     \"id\": \"aute Excepteur\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"laboris deserunt aliquip\",\n        \"crs\": {\n         \"type\": \"tempor cillum\",\n         \"properties\": {\n          \"name\": \"ut Duis\"\n         }\n        }\n       },\n       {\n        \"type\": \"ex nostrud\",\n        \"crs\": {\n         \"type\": \"eiusmod cillum aliqua\",\n         \"properties\": {\n          \"name\": \"aliqua ex nulla\"\n         }\n        }\n       }\n      ],\n      \"type\": \"minim reprehenderit dolor nulla\",\n      \"crs\": {\n       \"type\": \"Ut pariatur adipisicing enim\",\n       \"properties\": {\n        \"name\": \"fugiat ullamco\"\n       }\n      }\n     },\n     \"type\": \"in adipisicing consectetur ex\",\n     \"id\": \"Excepteur nulla deserunt tempor\"\n    }\n   ],\n   \"properties\": \"reprehenderit eiusmod amet sint\"\n  },\n  \"paymentMethodIds\": [\n   -37543546,\n   -92885946\n  ],\n  \"entityId\": \"t\",\n  \"entityType\": 4,\n  \"name\": \"amet aliquip\",\n  \"eTag\": \"ullamco culpa nostrud consectetur velit\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "63e8a633-1ba2-4e92-b6ba-3fd62b791a64",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a091241c-39be-468a-9de3-5ecc3c86026d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0394eb3a-637e-4a4a-8088-f763399a47ba",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim elit esse\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8abc455c-13cb-4c73-8965-3b481709f656",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b914431d-ef98-444f-a363-2826dca73578",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "7ca6f1f3-b373-427b-b6e1-4862c3a482ae",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"off\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": 80529091.67103216,\n    \"currency\": \"dolor consequat sunt\",\n    \"minCost\": 29346815.395621657,\n    \"minStayUntil\": \"deserunt non id et dolor\",\n    \"canExtendUntil\": \"deserunt irure dolor\",\n    \"pricedUntil\": \"sint dolore minim\",\n    \"noReturnUntil\": \"ut consequat\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     24569387,\n     72481091\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"sint irure\",\n    \"surcharge\": {\n     \"value\": -19134547.132081494,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -9761660\n     }\n    }\n   },\n   {\n    \"cost\": 86475284.55916244,\n    \"currency\": \"voluptate\",\n    \"minCost\": 33214486.884502664,\n    \"minStayUntil\": \"ad\",\n    \"canExtendUntil\": \"in\",\n    \"pricedUntil\": \"mollit anim pariatur\",\n    \"noReturnUntil\": \"esse\",\n    \"isFreeParking\": false,\n    \"paymentMethodIds\": [\n     24425206,\n     29342480\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"reprehenderit in\",\n    \"surcharge\": {\n     \"value\": -47036999.358393185,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -30333542\n     }\n    }\n   }\n  ],\n  \"distance\": -28469395.914573655,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    86026908,\n    -46181455\n   ]\n  },\n  \"entityETag\": \"laborum non ullamco dolore\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "05429472-7f84-4521-8f01-d3458b7563dd",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b5930ce6-2172-4b90-96df-c50f9fcd7a28",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "01d2982c-121d-4df1-a9e0-a527a0328bd0",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim elit esse\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "59bc844f-ac30-4f9f-92d9-bd25733a6439",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0c68489f-0a96-4e08-a2d0-e1e64aa327a4",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "bd373e9e-e6a4-4d25-82d6-ce28e34a6e63",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"in\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"officia\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -6569772.965782315,\n      \"currency\": \"cupidatat id ess\",\n      \"minCost\": 4041348.4480444193,\n      \"minStayUntil\": \"commodo ullamco nulla\",\n      \"canExtendUntil\": \"id consectetur\",\n      \"pricedUntil\": \"eiu\",\n      \"noReturnUntil\": \"culpa officia\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       8913182,\n       -57583716\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint \",\n      \"surcharge\": {\n       \"value\": 67932515.69259593,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -4565015\n       }\n      }\n     },\n     {\n      \"cost\": 55941651.14321026,\n      \"currency\": \"in veniam\",\n      \"minCost\": -60009024.11139672,\n      \"minStayUntil\": \"anim amet aliquip Excepteu\",\n      \"canExtendUntil\": \"elit do sit proident esse\",\n      \"pricedUntil\": \"sint eu\",\n      \"noReturnUntil\": \"qu\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -88787483,\n       9261460\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex officia irure\",\n      \"surcharge\": {\n       \"value\": 47825410.13650441,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -36098171\n       }\n      }\n     }\n    ],\n    \"distance\": -41239743.61579807,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -91548592,\n      63636791\n     ]\n    },\n    \"entityETag\": \"mollit reprehenderit\"\n   },\n   {\n    \"entityId\": \"velit in\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -14766120.834305197,\n      \"currency\": \"ex cillum dolor aute adipisicing\",\n      \"minCost\": -54550721.792727105,\n      \"minStayUntil\": \"exercitation sint in\",\n      \"canExtendUntil\": \"ipsum veniam officia\",\n      \"pricedUntil\": \"qui dolor ut\",\n      \"noReturnUntil\": \"laborum eu\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       84708646,\n       -95245194\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"elit amet esse\",\n      \"surcharge\": {\n       \"value\": 924915.8328496218,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 34239200\n       }\n      }\n     },\n     {\n      \"cost\": -64476247.706891686,\n      \"currency\": \"exercitation sit\",\n      \"minCost\": -93318235.57927641,\n      \"minStayUntil\": \"in Excepteur veniam\",\n      \"canExtendUntil\": \"Lorem mollit nostrud proident\",\n      \"pricedUntil\": \"dolor fugiat ea in proident\",\n      \"noReturnUntil\": \"Ut eu sed nostrud aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       79215383,\n       -5918523\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cupidatat tempor consectetur\",\n      \"surcharge\": {\n       \"value\": -6083064.9084993005,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 97073104\n       }\n      }\n     }\n    ],\n    \"distance\": -69230059.3166701,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -73799122,\n      11413331\n     ]\n    },\n    \"entityETag\": \"sunt esse nisi\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "89f69cc9-c1f6-44a8-88a9-666f0b88fc13",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0d5c4063-35ca-4eb6-83e3-f05ea42f470f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "16d45fdd-74cf-4039-a22c-e66302be7a9f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "642f013a-5f13-47a4-990f-087b8448a215",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7150574f-a2f3-4dd4-8b23-4581715c621c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"id ut amet cupidatat dolor\",\n    \"cardPaymentsExternalUrl\": \"quis ve\",\n    \"paymentsTelephone\": \"occaecat cupidatat fugiat\"\n   },\n   {\n    \"name\": \"Lorem minim\",\n    \"cardPaymentsExternalUrl\": \"veniam amet ex\",\n    \"paymentsTelephone\": \"tempor veniam\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "59294b0d-c73c-41a0-ac55-496f547790ac",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ffeb0fc8-a33a-4d2a-bc4e-8ab69a827688",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cbdb3d13-fa74-4422-a73b-5478fe2de028",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim elit esse\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8b178417-fe44-4864-bfcb-6747d49ad046",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "893e818e-635f-4c1f-a2e3-f562ccd7fb45",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7031779e-5626-4860-9a8e-91cde5b3b947",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"commodo nostrud aliqua\",\n     \"crs\": {\n      \"type\": \"ad\",\n      \"properties\": {\n       \"name\": \"fugiat laboris \"\n      }\n     }\n    },\n    {\n     \"type\": \"et ad dolor\",\n     \"crs\": {\n      \"type\": \"incididunt nulla ad labore\",\n      \"properties\": {\n       \"name\": \"culpa tempor sed\"\n      }\n     }\n    }\n   ],\n   \"type\": \"anim mollit aliqua consectetur\",\n   \"crs\": {\n    \"type\": \"ut magna nostrud\",\n    \"properties\": {\n     \"name\": \"officia esse\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"in laboris enim\"\n   },\n   {\n    \"message\": \"nostrud aute magna\"\n   }\n  ],\n  \"authorityId\": \"ad aute deserunt adipisicing\",\n  \"zoneType\": 9,\n  \"entityType\": 1,\n  \"entityId\": \"ut mollit\",\n  \"name\": \"sit culpa \",\n  \"eTag\": \"pariatur aliquip Excepteur ea occaecat\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "65d9550f-6e32-4e06-8dfb-c8f2706c73d2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "02419733-28f5-40dd-b4ed-09493156df73",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9a6a3b1c-cdf8-40a0-9cb4-c034271eaa54",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"enim elit esse\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5824528c-137d-42e0-b870-74ecd6a82647",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "73d1b0d9-39c1-4703-bd78-fb8d4897513f",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat ani\",\n            \"properties\": {\n                \"name\": \"do id commodo culpa\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2a9f6fd0-b40b-450a-b756-c68354f74ece",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"pariatur irure incididunt\",\n            \"properties\": {\n                \"name\": \"et reprehenderit in\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"nulla veniam sit ex proident\",\n    \"entityETag\": \"deserunt\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -2160655,\n      \"specialRestrictionTypeId\": -41840038,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"eu enim reprehenderit\",\n        \"endTime\": \"veniam quis\",\n        \"maxStay\": -24239383\n       },\n       {\n        \"startTime\": \"cillum id Ut\",\n        \"endTime\": \"dolor adipisicing eu\",\n        \"maxStay\": -1021043\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -59693246,\n      \"specialRestrictionTypeId\": -89511223,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"culpa do\",\n        \"endTime\": \"dolor\",\n        \"maxStay\": 25295734\n       },\n       {\n        \"startTime\": \"labo\",\n        \"endTime\": \"eu\",\n        \"maxStay\": -89318626\n       }\n      ]\n     }\n    ],\n    \"distance\": 22460426.839330778\n   },\n   {\n    \"entityId\": \"in nisi quis\",\n    \"entityETag\": \"nisi sed\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 69861866,\n      \"specialRestrictionTypeId\": -97075171,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolor ea\",\n        \"endTime\": \"dolor in sunt\",\n        \"maxStay\": 93593040\n       },\n       {\n        \"startTime\": \"culpa nostrud laboris\",\n        \"endTime\": \"dolor ea mollit tempor dolore\",\n        \"maxStay\": 52069934\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -69608499,\n      \"specialRestrictionTypeId\": 70146819,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"voluptate\",\n        \"endTime\": \"Duis qui Lorem in officia\",\n        \"maxStay\": -68502340\n       },\n       {\n        \"startTime\": \"fugiat ut ea ut\",\n        \"endTime\": \"sunt in aliquip proident ullamco\",\n        \"maxStay\": 2672054\n       }\n      ]\n     }\n    ],\n    \"distance\": -89277777.56565547\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"in aute proident laborum veniam\",\n   \"entityETag\": \"nulla velit \",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 76328779,\n     \"specialRestrictionTypeId\": -51095008,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ut\",\n       \"endTime\": \"cupidatat do adipisicing irure\",\n       \"maxStay\": 34774425\n      },\n      {\n       \"startTime\": \"e\",\n       \"endTime\": \"nulla sint\",\n       \"maxStay\": 59371664\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 91674581,\n     \"specialRestrictionTypeId\": -28432282,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"est\",\n       \"endTime\": \"sint est reprehenderit\",\n       \"maxStay\": -31945862\n      },\n      {\n       \"startTime\": \"dolore ut ad\",\n       \"endTime\": \"ex aliq\",\n       \"maxStay\": -30574339\n      }\n     ]\n    }\n   ],\n   \"distance\": -91094532.67443323\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bb0127e8-850b-4808-aeb4-765d8518e711",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"pariatur irure incididunt\",\n            \"properties\": {\n                \"name\": \"et reprehenderit in\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "99bf1536-e2ce-4513-b6db-e4faede352b1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"pariatur irure incididunt\",\n            \"properties\": {\n                \"name\": \"et reprehenderit in\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6954c04a-a03e-4679-9e0d-3ca9aeab22b3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"pariatur irure incididunt\",\n            \"properties\": {\n                \"name\": \"et reprehenderit in\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "68830812-2341-4347-b8ca-29e2b1d8b984",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"pariatur irure incididunt\",\n            \"properties\": {\n                \"name\": \"et reprehenderit in\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2f61fa16-1530-4e3f-a27a-5850bdba6003",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "35cce598-c2af-4b11-a8f6-d6612ec8353c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud e\",\n      \"city\": \"esse ullamco cillum\",\n      \"country\": \"exercitation voluptate Duis\",\n      \"postcode\": \"consectetur sunt esse\"\n     },\n     \"locationCode\": \"laboris dolore magna anim\",\n     \"totalCapacity\": 4980946,\n     \"zoneId\": \"id incididunt in aute\",\n     \"authorityId\": \"aliquip\",\n     \"features\": {\n      \"type\": \"nulla voluptate reprehenderit dolor id\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut\",\n           \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n             \"name\": \"Ut voluptate esse dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"nulla p\",\n           \"crs\": {\n            \"type\": \"in commodo ad officia quis\",\n            \"properties\": {\n             \"name\": \"ipsum minim aute exercitation\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim\",\n         \"crs\": {\n          \"type\": \"ipsum elit\",\n          \"properties\": {\n           \"name\": \"consectetur id esse\"\n          }\n         }\n        },\n        \"type\": \"commodo laborum\",\n        \"id\": \"dolore consectetur veniam ipsum esse\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"consequat laboris culpa id occaecat\",\n           \"crs\": {\n            \"type\": \"aliqua est eiusmod sed in\",\n            \"properties\": {\n             \"name\": \"culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"anim elit\",\n           \"crs\": {\n            \"type\": \"do irure\",\n            \"properties\": {\n             \"name\": \"et aute in dolor anim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cillum in id\",\n         \"crs\": {\n          \"type\": \"culpa magna\",\n          \"properties\": {\n           \"name\": \"dolore \"\n          }\n         }\n        },\n        \"type\": \"in sunt\",\n        \"id\": \"amet enim ad\"\n       }\n      ],\n      \"properties\": \"sed culpa\"\n     },\n     \"paymentMethodIds\": [\n      75199453,\n      -50570745\n     ],\n     \"entityId\": \"ad in\",\n     \"entityType\": 3,\n     \"name\": \"aute eu dolor velit\",\n     \"eTag\": \"sunt officia est labore fugiat\"\n    },\n    \"distance\": -94147986.86202142\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"deserunt officia ullamco aliqua\",\n      \"city\": \"laboris\",\n      \"country\": \"Ut culpa e\",\n      \"postcode\": \"nulla do adipisicing amet\"\n     },\n     \"locationCode\": \"in eiusmod\",\n     \"totalCapacity\": -58744878,\n     \"zoneId\": \"laborum irure sit enim nostrud\",\n     \"authorityId\": \"eu dolor\",\n     \"features\": {\n      \"type\": \"aute sed consectetur cupidatat fugiat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"officia ullamco culpa est minim\",\n           \"crs\": {\n            \"type\": \"exercitation culpa ullamco reprehenderit\",\n            \"properties\": {\n             \"name\": \"nulla\"\n            }\n           }\n          },\n          {\n           \"type\": \"ipsum qui cupi\",\n           \"crs\": {\n            \"type\": \"commodo sint \",\n            \"properties\": {\n             \"name\": \"dolor sint anim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nostrud commo\",\n         \"crs\": {\n          \"type\": \"ea in\",\n          \"properties\": {\n           \"name\": \"et sit est\"\n          }\n         }\n        },\n        \"type\": \"Duis velit\",\n        \"id\": \"consequat\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"do Ut\",\n           \"crs\": {\n            \"type\": \"laborum\",\n            \"properties\": {\n             \"name\": \"sunt ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"veniam ut\",\n           \"crs\": {\n            \"type\": \"cupidatat dolor\",\n            \"properties\": {\n             \"name\": \"nisi qui esse dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Duis nisi\",\n         \"crs\": {\n          \"type\": \"dolor ea\",\n          \"properties\": {\n           \"name\": \"dolor\"\n          }\n         }\n        },\n        \"type\": \"commodo laborum\",\n        \"id\": \"in occaecat\"\n       }\n      ],\n      \"properties\": \"velit laborum commodo veniam\"\n     },\n     \"paymentMethodIds\": [\n      -39749623,\n      71670792\n     ],\n     \"entityId\": \"esse cillum dolor et\",\n     \"entityType\": 4,\n     \"name\": \"dolor voluptate est dolore\",\n     \"eTag\": \"proident in et occaecat exerci\"\n    },\n    \"distance\": 85700820.06547114\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e66695f9-d2ce-427b-8f59-ba66faf0bd2b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8c65dec7-388d-4bd0-919c-ee227ead6fe7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "69d99054-d6cd-419c-ae49-80303b464618",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "abcdf695-5565-4595-9e65-581ae7e88b21",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7707a541-cb88-46d5-a78f-77d9c31af434",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"et sed occaecat elit\",\n            \"properties\": {\n                \"name\": \"ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "92abacfb-0820-4e15-aa7b-aecd61c948e9",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad commodo nostrud\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud e\",\n      \"city\": \"esse ullamco cillum\",\n      \"country\": \"exercitation voluptate Duis\",\n      \"postcode\": \"consectetur sunt esse\"\n     },\n     \"locationCode\": \"laboris dolore magna anim\",\n     \"totalCapacity\": 4980946,\n     \"zoneId\": \"id incididunt in aute\",\n     \"authorityId\": \"aliquip\",\n     \"features\": {\n      \"type\": \"nulla voluptate reprehenderit dolor id\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ut\",\n           \"crs\": {\n            \"type\": \"enim\",\n            \"properties\": {\n             \"name\": \"Ut voluptate esse dolore\"\n            }\n           }\n          },\n          {\n           \"type\": \"nulla p\",\n           \"crs\": {\n            \"type\": \"in commodo ad officia quis\",\n            \"properties\": {\n             \"name\": \"ipsum minim aute exercitation\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim\",\n         \"crs\": {\n          \"type\": \"ipsum elit\",\n          \"properties\": {\n           \"name\": \"consectetur id esse\"\n          }\n         }\n        },\n        \"type\": \"commodo laborum\",\n        \"id\": \"dolore consectetur veniam ipsum esse\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"consequat laboris culpa id occaecat\",\n           \"crs\": {\n            \"type\": \"aliqua est eiusmod sed in\",\n            \"properties\": {\n             \"name\": \"culpa\"\n            }\n           }\n          },\n          {\n           \"type\": \"anim elit\",\n           \"crs\": {\n            \"type\": \"do irure\",\n            \"properties\": {\n             \"name\": \"et aute in dolor anim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cillum in id\",\n         \"crs\": {\n          \"type\": \"culpa magna\",\n          \"properties\": {\n           \"name\": \"dolore \"\n          }\n         }\n        },\n        \"type\": \"in sunt\",\n        \"id\": \"amet enim ad\"\n       }\n      ],\n      \"properties\": \"sed culpa\"\n     },\n     \"paymentMethodIds\": [\n      75199453,\n      -50570745\n     ],\n     \"entityId\": \"ad in\",\n     \"entityType\": 3,\n     \"name\": \"aute eu dolor velit\",\n     \"eTag\": \"sunt officia est labore fugiat\"\n    },\n    \"distance\": -94147986.86202142\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"deserunt officia ullamco aliqua\",\n      \"city\": \"laboris\",\n      \"country\": \"Ut culpa e\",\n      \"postcode\": \"nulla do adipisicing amet\"\n     },\n     \"locationCode\": \"in eiusmod\",\n     \"totalCapacity\": -58744878,\n     \"zoneId\": \"laborum irure sit enim nostrud\",\n     \"authorityId\": \"eu dolor\",\n     \"features\": {\n      \"type\": \"aute sed consectetur cupidatat fugiat\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"officia ullamco culpa est minim\",\n           \"crs\": {\n            \"type\": \"exercitation culpa ullamco reprehenderit\",\n            \"properties\": {\n             \"name\": \"nulla\"\n            }\n           }\n          },\n          {\n           \"type\": \"ipsum qui cupi\",\n           \"crs\": {\n            \"type\": \"commodo sint \",\n            \"properties\": {\n             \"name\": \"dolor sint anim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"nostrud commo\",\n         \"crs\": {\n          \"type\": \"ea in\",\n          \"properties\": {\n           \"name\": \"et sit est\"\n          }\n         }\n        },\n        \"type\": \"Duis velit\",\n        \"id\": \"consequat\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"do Ut\",\n           \"crs\": {\n            \"type\": \"laborum\",\n            \"properties\": {\n             \"name\": \"sunt ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"veniam ut\",\n           \"crs\": {\n            \"type\": \"cupidatat dolor\",\n            \"properties\": {\n             \"name\": \"nisi qui esse dolore\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Duis nisi\",\n         \"crs\": {\n          \"type\": \"dolor ea\",\n          \"properties\": {\n           \"name\": \"dolor\"\n          }\n         }\n        },\n        \"type\": \"commodo laborum\",\n        \"id\": \"in occaecat\"\n       }\n      ],\n      \"properties\": \"velit laborum commodo veniam\"\n     },\n     \"paymentMethodIds\": [\n      -39749623,\n      71670792\n     ],\n     \"entityId\": \"esse cillum dolor et\",\n     \"entityType\": 4,\n     \"name\": \"dolor voluptate est dolore\",\n     \"eTag\": \"proident in et occaecat exerci\"\n    },\n    \"distance\": 85700820.06547114\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "acf102fc-45b5-4fa2-8507-cdae36e2c180",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad commodo nostrud\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "621fedba-f83b-45dc-96ad-e7e5d2c2c692",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad commodo nostrud\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "cc20360e-2e7d-45c4-bdb4-6dcc3da78ee9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad commodo nostrud\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1396ec60-28c0-445d-94c4-6c536846cfb9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ad commodo nostrud\",\n            \"properties\": {\n                \"name\": \"non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4957f0b0-9cbd-469d-944e-d254ed5915e1",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "99c391c8-1f59-4e3e-8e49-d9764bd5f327",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"sint sunt adipisi\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"do ex in ipsum\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -57829640.64381968,\n      \"currency\": \"irure\",\n      \"minCost\": -56513016.03045349,\n      \"minStayUntil\": \"velit in aute est\",\n      \"canExtendUntil\": \"id nostrud\",\n      \"pricedUntil\": \"in adipisicing esse\",\n      \"noReturnUntil\": \"ut ea dolor Ut\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -31819036,\n       75782426\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor nostrud consectetur laborum Excepteur\",\n      \"surcharge\": {\n       \"value\": -39614897.37976129,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -4615535\n       }\n      }\n     },\n     {\n      \"cost\": -79322575.1520617,\n      \"currency\": \"ut velit\",\n      \"minCost\": -84553383.98321594,\n      \"minStayUntil\": \"ullamco\",\n      \"canExtendUntil\": \"reprehenderit\",\n      \"pricedUntil\": \"ea ut\",\n      \"noReturnUntil\": \"adipisicing qui incididunt minim mollit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -3834521,\n       43488111\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ad do\",\n      \"surcharge\": {\n       \"value\": -44190832.4585989,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 63469086\n       }\n      }\n     }\n    ],\n    \"distance\": -7907092.171078697,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -13911048,\n      -67412302\n     ]\n    },\n    \"entityETag\": \"cupidatat officia veniam Duis\"\n   },\n   {\n    \"entityId\": \"eius\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 63637255.438684225,\n      \"currency\": \"labore est sunt\",\n      \"minCost\": 95081940.75110295,\n      \"minStayUntil\": \"culpa qui elit\",\n      \"canExtendUntil\": \"aute laboris\",\n      \"pricedUntil\": \"nisi elit consequat eiusmod\",\n      \"noReturnUntil\": \"ipsum fugiat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -62613715,\n       7285387\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nostrud ullamco et enim\",\n      \"surcharge\": {\n       \"value\": -78638293.2215572,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 67879284\n       }\n      }\n     },\n     {\n      \"cost\": -31530305.4106196,\n      \"currency\": \"Duis est Lorem laborum minim\",\n      \"minCost\": -99521388.84200212,\n      \"minStayUntil\": \"Duis veniam\",\n      \"canExtendUntil\": \"sunt\",\n      \"pricedUntil\": \"occaecat minim\",\n      \"noReturnUntil\": \"voluptate officia\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -50576074,\n       92187801\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ea quis occaecat nisi\",\n      \"surcharge\": {\n       \"value\": -34823825.7761432,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 61621370\n       }\n      }\n     }\n    ],\n    \"distance\": 51637146.91298339,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -98264985,\n      -42738508\n     ]\n    },\n    \"entityETag\": \"ut\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b6f22920-9f2a-442b-ada7-8c0292535fdf",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bc7745f9-69f7-436d-9826-2027541377cc",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dd968078-765e-458d-b1ba-b70cbd895347",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4d0c6320-6651-4b3c-9f5e-b5c65743c3e4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "754f9d58-f6a0-4b3e-bb87-a1610883d03a",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore reprehenderit magna irure\",\n            \"properties\": {\n                \"name\": \"mollit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "139c4b0b-9af0-4faa-b5d2-19cfbdcbbca3",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id ut minim\",\n            \"properties\": {\n                \"name\": \"sunt sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 4,\n  \"requestedStartTime\": \"sint sunt adipisi\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"do ex in ipsum\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -57829640.64381968,\n      \"currency\": \"irure\",\n      \"minCost\": -56513016.03045349,\n      \"minStayUntil\": \"velit in aute est\",\n      \"canExtendUntil\": \"id nostrud\",\n      \"pricedUntil\": \"in adipisicing esse\",\n      \"noReturnUntil\": \"ut ea dolor Ut\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -31819036,\n       75782426\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolor nostrud consectetur laborum Excepteur\",\n      \"surcharge\": {\n       \"value\": -39614897.37976129,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -4615535\n       }\n      }\n     },\n     {\n      \"cost\": -79322575.1520617,\n      \"currency\": \"ut velit\",\n      \"minCost\": -84553383.98321594,\n      \"minStayUntil\": \"ullamco\",\n      \"canExtendUntil\": \"reprehenderit\",\n      \"pricedUntil\": \"ea ut\",\n      \"noReturnUntil\": \"adipisicing qui incididunt minim mollit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -3834521,\n       43488111\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ad do\",\n      \"surcharge\": {\n       \"value\": -44190832.4585989,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 63469086\n       }\n      }\n     }\n    ],\n    \"distance\": -7907092.171078697,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -13911048,\n      -67412302\n     ]\n    },\n    \"entityETag\": \"cupidatat officia veniam Duis\"\n   },\n   {\n    \"entityId\": \"eius\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 63637255.438684225,\n      \"currency\": \"labore est sunt\",\n      \"minCost\": 95081940.75110295,\n      \"minStayUntil\": \"culpa qui elit\",\n      \"canExtendUntil\": \"aute laboris\",\n      \"pricedUntil\": \"nisi elit consequat eiusmod\",\n      \"noReturnUntil\": \"ipsum fugiat\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -62613715,\n       7285387\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nostrud ullamco et enim\",\n      \"surcharge\": {\n       \"value\": -78638293.2215572,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 67879284\n       }\n      }\n     },\n     {\n      \"cost\": -31530305.4106196,\n      \"currency\": \"Duis est Lorem laborum minim\",\n      \"minCost\": -99521388.84200212,\n      \"minStayUntil\": \"Duis veniam\",\n      \"canExtendUntil\": \"sunt\",\n      \"pricedUntil\": \"occaecat minim\",\n      \"noReturnUntil\": \"voluptate officia\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -50576074,\n       92187801\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ea quis occaecat nisi\",\n      \"surcharge\": {\n       \"value\": -34823825.7761432,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 61621370\n       }\n      }\n     }\n    ],\n    \"distance\": 51637146.91298339,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -98264985,\n      -42738508\n     ]\n    },\n    \"entityETag\": \"ut\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c8a4a13e-03a9-4c73-9118-110b7f901614",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id ut minim\",\n            \"properties\": {\n                \"name\": \"sunt sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4319409f-0874-4564-8c27-5e292ae9610a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id ut minim\",\n            \"properties\": {\n                \"name\": \"sunt sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e78c0e78-f5ac-4c4d-8043-0079ad7befd5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id ut minim\",\n            \"properties\": {\n                \"name\": \"sunt sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8b57bce6-2c02-4a9c-966b-e6e98033d27c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id ut minim\",\n            \"properties\": {\n                \"name\": \"sunt sit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7daf5206-9a54-4881-83e5-de8ca9b457e2",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"veniam magna sed ea\",\n            \"properties\": {\n                \"name\": \"consequat\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "45fbd2af-9c2a-4bbc-9d07-cfe0d8f409ed",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse nostrud Excepteur\",\n            \"properties\": {\n                \"name\": \"sit ea ad consectetur Excepteur\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"type\": \"adipisicing\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"tempor est\",\n     \"crs\": {\n      \"type\": \"sed veniam\",\n      \"properties\": {\n       \"name\": \"magna non\"\n      }\n     }\n    },\n    \"type\": \"occaecat consec\",\n    \"id\": \"magna ut\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"aliqua\",\n     \"crs\": {\n      \"type\": \"non laborum in officia\",\n      \"properties\": {\n       \"name\": \"proident fugiat Excepteur eu\"\n      }\n     }\n    },\n    \"type\": \"incididunt\",\n    \"id\": \"ut\"\n   }\n  ],\n  \"properties\": \"dolor anim dolore voluptate\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c410d213-82fb-44d8-b470-4fab0cef1ef9",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse nostrud Excepteur\",\n            \"properties\": {\n                \"name\": \"sit ea ad consectetur Excepteur\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0e535884-a2e8-47d0-9024-b15aa57b32ae",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse nostrud Excepteur\",\n            \"properties\": {\n                \"name\": \"sit ea ad consectetur Excepteur\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ae5e157a-a36b-43b3-814f-4531f032b576",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse nostrud Excepteur\",\n            \"properties\": {\n                \"name\": \"sit ea ad consectetur Excepteur\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "958c1c9d-db2a-4227-b563-9127105ae89a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"esse nostrud Excepteur\",\n            \"properties\": {\n                \"name\": \"sit ea ad consectetur Excepteur\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "355fef56-e24f-458b-97bf-25db59788f65",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sint reprehenderit minim\",\n            \"properties\": {\n                \"name\": \"dolore eiusmod ut\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "cf70e3c6-d8fc-4cff-8618-d0f7209eb312",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut esse\",\n            \"properties\": {\n                \"name\": \"consectetur ad\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"nulla veniam sit ex proident\",\n    \"entityETag\": \"deserunt\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -2160655,\n      \"specialRestrictionTypeId\": -41840038,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"eu enim reprehenderit\",\n        \"endTime\": \"veniam quis\",\n        \"maxStay\": -24239383\n       },\n       {\n        \"startTime\": \"cillum id Ut\",\n        \"endTime\": \"dolor adipisicing eu\",\n        \"maxStay\": -1021043\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -59693246,\n      \"specialRestrictionTypeId\": -89511223,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"culpa do\",\n        \"endTime\": \"dolor\",\n        \"maxStay\": 25295734\n       },\n       {\n        \"startTime\": \"labo\",\n        \"endTime\": \"eu\",\n        \"maxStay\": -89318626\n       }\n      ]\n     }\n    ],\n    \"distance\": 22460426.839330778\n   },\n   {\n    \"entityId\": \"in nisi quis\",\n    \"entityETag\": \"nisi sed\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 69861866,\n      \"specialRestrictionTypeId\": -97075171,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolor ea\",\n        \"endTime\": \"dolor in sunt\",\n        \"maxStay\": 93593040\n       },\n       {\n        \"startTime\": \"culpa nostrud laboris\",\n        \"endTime\": \"dolor ea mollit tempor dolore\",\n        \"maxStay\": 52069934\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -69608499,\n      \"specialRestrictionTypeId\": 70146819,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"voluptate\",\n        \"endTime\": \"Duis qui Lorem in officia\",\n        \"maxStay\": -68502340\n       },\n       {\n        \"startTime\": \"fugiat ut ea ut\",\n        \"endTime\": \"sunt in aliquip proident ullamco\",\n        \"maxStay\": 2672054\n       }\n      ]\n     }\n    ],\n    \"distance\": -89277777.56565547\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"in aute proident laborum veniam\",\n   \"entityETag\": \"nulla velit \",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 76328779,\n     \"specialRestrictionTypeId\": -51095008,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ut\",\n       \"endTime\": \"cupidatat do adipisicing irure\",\n       \"maxStay\": 34774425\n      },\n      {\n       \"startTime\": \"e\",\n       \"endTime\": \"nulla sint\",\n       \"maxStay\": 59371664\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 91674581,\n     \"specialRestrictionTypeId\": -28432282,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"est\",\n       \"endTime\": \"sint est reprehenderit\",\n       \"maxStay\": -31945862\n      },\n      {\n       \"startTime\": \"dolore ut ad\",\n       \"endTime\": \"ex aliq\",\n       \"maxStay\": -30574339\n      }\n     ]\n    }\n   ],\n   \"distance\": -91094532.67443323\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c2fa0540-7800-4e20-8570-573f10d140b6",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut esse\",\n            \"properties\": {\n                \"name\": \"consectetur ad\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur ipsum ullamco\",\n \"errors\": [\n  {\n   \"property\": \"ut esse tempor\",\n   \"code\": \"proident anim ut pariatur ea\",\n   \"message\": \"Lorem ea officia mollit\"\n  },\n  {\n   \"property\": \"fugiat cillum sit\",\n   \"code\": \"nisi nulla\",\n   \"message\": \"dolor esse\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "07e5ff5b-9f88-4565-93a0-265fb7e60035",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut esse\",\n            \"properties\": {\n                \"name\": \"consectetur ad\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a1bfa0ff-8980-42f1-8019-bcda257ab921",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut esse\",\n            \"properties\": {\n                \"name\": \"consectetur ad\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5fc7acd6-4cc7-45ed-9200-0eed2403f06d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Ut esse\",\n            \"properties\": {\n                \"name\": \"consectetur ad\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0ee7e92b-1db6-406c-bc9f-64165692e26b",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "c99ee062-7f8d-4b2c-9ebf-70cb00693f3d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "da02abee-cd37-4cbc-9b79-7c08ae853297",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "17c2b517-f8fe-4d65-8db2-f3c09e308c6f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c2c100b7-a555-4a99-8fc1-1837eedead97",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "ac4ea3d8-7df9-448a-9e3e-e08774a383b9",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
