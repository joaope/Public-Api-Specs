{
  "item": [
    {
      "id": "0b9795bd-b1a6-4cd3-ab2f-a100b9f5ee8f",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7ccc2167-6a85-48f0-ab5c-4c6c6958e00d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"nisi aliqua\"\n   },\n   {\n    \"message\": \"minim esse laborum\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"culpa commodo do\",\n    \"cardPaymentsExternalUrl\": \"incididunt in esse\",\n    \"paymentsTelephone\": \"laborum labore cupidatat\"\n   },\n   {\n    \"name\": \"Lorem\",\n    \"cardPaymentsExternalUrl\": \"ut eu consequat est\",\n    \"paymentsTelephone\": \"dolor\"\n   }\n  ],\n  \"entityType\": 3,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"minim eiusmod ullamco\",\n     \"crs\": {\n      \"type\": \"minim proident tempor\",\n      \"properties\": {\n       \"name\": \"proident enim\"\n      }\n     }\n    },\n    {\n     \"type\": \"adipisicin\",\n     \"crs\": {\n      \"type\": \"sunt elit non\",\n      \"properties\": {\n       \"name\": \"in quis ea voluptate\"\n      }\n     }\n    }\n   ],\n   \"type\": \"esse tempor\",\n   \"crs\": {\n    \"type\": \"magna in\",\n    \"properties\": {\n     \"name\": \"incididunt sit\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": true,\n  \"entityId\": \"magna Lorem non dolor Duis\",\n  \"name\": \"quis exercitation sed ullamco\",\n  \"eTag\": \"esse consectetur pariatur\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7efeea51-38d1-4589-9b35-35c2842d65c1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5fc8867e-6b49-42c8-b695-99b5d6cc3e2a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d6634cb5-f707-4f6b-999a-1fc4c1352d1f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna consectetur ea officia\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a1b77ec4-7e8e-4bb7-88e0-73f9e524077a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "abce0778-9962-4020-9688-e45a9d8889b3",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "1c4a683e-7aaf-4532-a285-6de4624a47ae",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"nisi sit est\",\n     \"city\": \"proident aliquip in anim voluptate\",\n     \"country\": \"in enim\",\n     \"postcode\": \"Excepteur deserunt officia eiusmod\"\n    },\n    \"locationCode\": \"et\",\n    \"totalCapacity\": -72429453,\n    \"zoneId\": \"minim veniam nostrud sin\",\n    \"authorityId\": \"et sint\",\n    \"features\": {\n     \"type\": \"sunt nostrud in magna\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"irure\",\n          \"crs\": {\n           \"type\": \"veniam magna\",\n           \"properties\": {\n            \"name\": \"nisi quis id tempor ullamco\"\n           }\n          }\n         },\n         {\n          \"type\": \"proident Duis qui nisi\",\n          \"crs\": {\n           \"type\": \"esse\",\n           \"properties\": {\n            \"name\": \"sed proident\"\n           }\n          }\n         }\n        ],\n        \"type\": \"dolor ea\",\n        \"crs\": {\n         \"type\": \"q\",\n         \"properties\": {\n          \"name\": \"consectetur ir\"\n         }\n        }\n       },\n       \"type\": \"laboris e\",\n       \"id\": \"cupidatat aliqua voluptate enim\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ut ullamco\",\n          \"crs\": {\n           \"type\": \"amet cupi\",\n           \"properties\": {\n            \"name\": \"nisi ea culpa minim ut\"\n           }\n          }\n         },\n         {\n          \"type\": \"velit\",\n          \"crs\": {\n           \"type\": \"nulla\",\n           \"properties\": {\n            \"name\": \"cillum velit\"\n           }\n          }\n         }\n        ],\n        \"type\": \"magna sit nulla\",\n        \"crs\": {\n         \"type\": \"eu sunt in reprehenderit\",\n         \"properties\": {\n          \"name\": \"in nostrud\"\n         }\n        }\n       },\n       \"type\": \"dolor ipsum officia\",\n       \"id\": \"aliquip nostrud\"\n      }\n     ],\n     \"properties\": \"officia deserunt\"\n    },\n    \"paymentMethodIds\": [\n     98710562,\n     -60094932\n    ],\n    \"entityId\": \"proident dolore et\",\n    \"entityType\": 3,\n    \"name\": \"deserunt Lorem\",\n    \"eTag\": \"incid\"\n   },\n   {\n    \"address\": {\n     \"street\": \"occaecat Ut dolore irure\",\n     \"city\": \"minim ex\",\n     \"country\": \"fugiat sint cupidatat et\",\n     \"postcode\": \"ut\"\n    },\n    \"locationCode\": \"cillum dolor\",\n    \"totalCapacity\": -25030587,\n    \"zoneId\": \"Ut\",\n    \"authorityId\": \"culpa Excepteur ut\",\n    \"features\": {\n     \"type\": \"officia amet eu esse\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"sin\",\n          \"crs\": {\n           \"type\": \"offi\",\n           \"properties\": {\n            \"name\": \"qui fugiat id in\"\n           }\n          }\n         },\n         {\n          \"type\": \"in proident quis dolor qui\",\n          \"crs\": {\n           \"type\": \"aliquip cupidatat Duis magna co\",\n           \"properties\": {\n            \"name\": \"culpa\"\n           }\n          }\n         }\n        ],\n        \"type\": \"dolore ullamco\",\n        \"crs\": {\n         \"type\": \"ex sit eu exercitation\",\n         \"properties\": {\n          \"name\": \"eiusmod voluptate ea\"\n         }\n        }\n       },\n       \"type\": \"nulla labore\",\n       \"id\": \"in ullamco\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"irure ex consequa\",\n          \"crs\": {\n           \"type\": \"ut dolore\",\n           \"properties\": {\n            \"name\": \"non cupidatat eiusmod\"\n           }\n          }\n         },\n         {\n          \"type\": \"quis in dolore consequat\",\n          \"crs\": {\n           \"type\": \"in esse\",\n           \"properties\": {\n            \"name\": \"nostrud Excepteur laborum\"\n           }\n          }\n         }\n        ],\n        \"type\": \"proident ut in tempor\",\n        \"crs\": {\n         \"type\": \"consequat enim dolor pariatur\",\n         \"properties\": {\n          \"name\": \"magna adipisicing\"\n         }\n        }\n       },\n       \"type\": \"Lorem nulla dolor quis culpa\",\n       \"id\": \"commodo\"\n      }\n     ],\n     \"properties\": \"qui amet elit sunt\"\n    },\n    \"paymentMethodIds\": [\n     88802942,\n     92380850\n    ],\n    \"entityId\": \"consectetur\",\n    \"entityType\": 4,\n    \"name\": \"occaecat ea\",\n    \"eTag\": \"elit voluptate\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"Ut amet id\",\n       \"crs\": {\n        \"type\": \"nostrud ea in\",\n        \"properties\": {\n         \"name\": \"incididunt eiusmod exercitation\"\n        }\n       }\n      },\n      {\n       \"type\": \"\",\n       \"crs\": {\n        \"type\": \"do pariatur\",\n        \"properties\": {\n         \"name\": \"commodo eiusmod quis Lorem\"\n        }\n       }\n      }\n     ],\n     \"type\": \"id\",\n     \"crs\": {\n      \"type\": \"ea non sit\",\n      \"properties\": {\n       \"name\": \"cupidatat minim adipisicing\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"nostrud irure reprehenderit Excepteur est\"\n     },\n     {\n      \"message\": \"Ut esse non enim dolo\"\n     }\n    ],\n    \"authorityId\": \"non irure anim\",\n    \"zoneType\": 8,\n    \"entityType\": 3,\n    \"entityId\": \"aliquip velit commodo\",\n    \"name\": \"voluptate in dolor cillum\",\n    \"eTag\": \"dolor laboris consectetur sint\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sit ut\",\n       \"crs\": {\n        \"type\": \"Lorem sint\",\n        \"properties\": {\n         \"name\": \"veniam Excepteur\"\n        }\n       }\n      },\n      {\n       \"type\": \"eu\",\n       \"crs\": {\n        \"type\": \"dolor amet null\",\n        \"properties\": {\n         \"name\": \"proident nisi cupidatat ipsum\"\n        }\n       }\n      }\n     ],\n     \"type\": \"eiusmod officia ex\",\n     \"crs\": {\n      \"type\": \"exercitation eiusmod\",\n      \"properties\": {\n       \"name\": \"dolor consequat\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"esse\"\n     },\n     {\n      \"message\": \"dolore qui voluptate\"\n     }\n    ],\n    \"authorityId\": \"ullamco tempor\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"ex ad ullamco\",\n    \"name\": \"elit\",\n    \"eTag\": \"reprehenderit esse est\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"consequat\"\n     },\n     {\n      \"message\": \"sed\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ad\",\n      \"cardPaymentsExternalUrl\": \"voluptate culpa tempor ad\",\n      \"paymentsTelephone\": \"veniam id sit\"\n     },\n     {\n      \"name\": \"aliqua deserunt Lorem in\",\n      \"cardPaymentsExternalUrl\": \"consectetur\",\n      \"paymentsTelephone\": \"officia\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"incididunt aliquip quis fugiat\",\n       \"crs\": {\n        \"type\": \"sed nostrud anim irure\",\n        \"properties\": {\n         \"name\": \"Duis\"\n        }\n       }\n      },\n      {\n       \"type\": \"sit et aliquip\",\n       \"crs\": {\n        \"type\": \"fugiat ipsum amet deserunt\",\n        \"properties\": {\n         \"name\": \"quis officia dolore occaecat commodo\"\n        }\n       }\n      }\n     ],\n     \"type\": \"id in nisi irure\",\n     \"crs\": {\n      \"type\": \"sit laborum\",\n      \"properties\": {\n       \"name\": \"nisi Lo\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"ut officia aliquip nostrud aute\",\n    \"name\": \"dolore culpa eu\",\n    \"eTag\": \"sint consequ\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"ea in voluptate laboris sunt\"\n     },\n     {\n      \"message\": \"qui dolore exercitation cupidatat\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"nisi\",\n      \"cardPaymentsExternalUrl\": \"officia mollit\",\n      \"paymentsTelephone\": \"Excepte\"\n     },\n     {\n      \"name\": \"anim Ut id\",\n      \"cardPaymentsExternalUrl\": \"qui\",\n      \"paymentsTelephone\": \"eu aliquip\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"aliquip irure consequat cillum incididunt\",\n       \"crs\": {\n        \"type\": \"labore culpa aliquip magna\",\n        \"properties\": {\n         \"name\": \"ut Ut in sed\"\n        }\n       }\n      },\n      {\n       \"type\": \"tempor\",\n       \"crs\": {\n        \"type\": \"est in\",\n        \"properties\": {\n         \"name\": \"ea dolor\"\n        }\n       }\n      }\n     ],\n     \"type\": \"proident e\",\n     \"crs\": {\n      \"type\": \"veniam anim qui\",\n      \"properties\": {\n       \"name\": \"sit amet pariatur\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"proident est deserunt\",\n    \"name\": \"nisi id\",\n    \"eTag\": \"culpa et ad Ut consectetur\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5c60986e-2066-4b34-9c9e-db9dd52a9448",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aute aliquip ut dolor\",\n \"errors\": [\n  {\n   \"property\": \"eu\",\n   \"code\": \"\",\n   \"message\": \"amet labore culpa\"\n  },\n  {\n   \"property\": \"ut in quis non\",\n   \"code\": \"nulla ut qui\",\n   \"message\": \"culpa deserunt\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "127bcdb5-47b0-4198-a17e-68083a45fdd8",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a3728821-c59f-460e-bce4-f127d464ba11",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b1a97d09-f0d1-4c21-aa4a-c2fb6b8c59ff",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "35d7f1ff-c43d-4abf-bb01-72b84a275994",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "eb9a58cd-df8e-41b8-aed8-db56b4c5d00b",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"address\": {\n   \"street\": \"quis\",\n   \"city\": \"officia anim adipisicing\",\n   \"country\": \"labore cupidatat esse aliqua\",\n   \"postcode\": \"sed culpa enim ipsu\"\n  },\n  \"locationCode\": \"velit\",\n  \"totalCapacity\": -38368643,\n  \"zoneId\": \"consectetur commodo labore ut sint\",\n  \"authorityId\": \"irure dolor laborum qui\",\n  \"features\": {\n   \"type\": \"officia dolor laboris\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"sit officia voluptate\",\n        \"crs\": {\n         \"type\": \"laborum\",\n         \"properties\": {\n          \"name\": \"culpa\"\n         }\n        }\n       },\n       {\n        \"type\": \"anim ex nisi voluptate\",\n        \"crs\": {\n         \"type\": \"ut cillum\",\n         \"properties\": {\n          \"name\": \"ad Duis officia\"\n         }\n        }\n       }\n      ],\n      \"type\": \"aute anim do nulla\",\n      \"crs\": {\n       \"type\": \"consectetur in enim\",\n       \"properties\": {\n        \"name\": \"aute ut\"\n       }\n      }\n     },\n     \"type\": \"nisi ut id\",\n     \"id\": \"consequat laborum ad dolor\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"veniam culpa n\",\n        \"crs\": {\n         \"type\": \"e\",\n         \"properties\": {\n          \"name\": \"laborum ea labore in\"\n         }\n        }\n       },\n       {\n        \"type\": \"ex\",\n        \"crs\": {\n         \"type\": \"exercitation do aliquip\",\n         \"properties\": {\n          \"name\": \"non magna amet\"\n         }\n        }\n       }\n      ],\n      \"type\": \"irure\",\n      \"crs\": {\n       \"type\": \"nostrud aute\",\n       \"properties\": {\n        \"name\": \"Duis anim mollit\"\n       }\n      }\n     },\n     \"type\": \"in labore\",\n     \"id\": \"sint\"\n    }\n   ],\n   \"properties\": \"in qui\"\n  },\n  \"paymentMethodIds\": [\n   51138949,\n   -3320149\n  ],\n  \"entityId\": \"in in nostrud dolor\",\n  \"entityType\": 1,\n  \"name\": \"aute repr\",\n  \"eTag\": \"ad in ut et\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1555e3e0-9bfd-4eca-a129-362d50147f36",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9bf9a72c-60e1-468f-a90e-516e75198e8b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2c63ba92-ab1f-4574-8cd5-a4eacb46f976",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna consectetur ea officia\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7b14fe63-e533-496a-99ca-452e57a1b083",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e46601ad-4433-42b9-8c30-a0c0cbdb2c34",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "835c885e-816f-4f9b-9207-422f81f1b179",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"officia aliquip\",\n  \"entityType\": 4,\n  \"quotes\": [\n   {\n    \"cost\": 93617934.1093097,\n    \"currency\": \"adipisicing aliqua ad\",\n    \"minCost\": -39679321.199178874,\n    \"minStayUntil\": \"laborum aliqui\",\n    \"canExtendUntil\": \"do\",\n    \"pricedUntil\": \"nostrud ipsum eu\",\n    \"noReturnUntil\": \"magna in dolor aute\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -18266779,\n     -76198681\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"consequat ipsum reprehenderit\",\n    \"surcharge\": {\n     \"value\": 49575281.65277004,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 31218948\n     }\n    }\n   },\n   {\n    \"cost\": 19723908.638743833,\n    \"currency\": \"eu amet aute\",\n    \"minCost\": 26748243.357899204,\n    \"minStayUntil\": \"reprehenderit dolor ut\",\n    \"canExtendUntil\": \"do sit dolore velit Duis\",\n    \"pricedUntil\": \"ullamco offic\",\n    \"noReturnUntil\": \"sit incididunt\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -61280449,\n     -92609087\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ea adipisicing\",\n    \"surcharge\": {\n     \"value\": 60630148.30655128,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -1384027\n     }\n    }\n   }\n  ],\n  \"distance\": -55714755.12009893,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    81995363,\n    65260157\n   ]\n  },\n  \"entityETag\": \"qui\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "646db4ad-2c4c-4c26-b97e-89b1d14be3ed",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "47852a69-8482-4e46-b9a6-e062b8f1415f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a00f2bab-3da2-4e5c-b317-da03f6094239",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna consectetur ea officia\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4434ce7d-cefd-4b7c-9dc7-6069ba9328cd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d39c02d5-e478-4d73-a9ec-05bd8923b20e",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "81942c8b-44a7-4af5-b078-aefa42933b20",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"sunt do\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"ut ex amet in\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 26634965.778333575,\n      \"currency\": \"aliqua\",\n      \"minCost\": -22897207.2463848,\n      \"minStayUntil\": \"aute ex fugiat Duis\",\n      \"canExtendUntil\": \"non cupidatat\",\n      \"pricedUntil\": \"et qui officia laboris minim\",\n      \"noReturnUntil\": \"esse quis labore ullamco\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -35588477,\n       -11977547\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint dolor incididunt\",\n      \"surcharge\": {\n       \"value\": -77649942.84054491,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -76897215\n       }\n      }\n     },\n     {\n      \"cost\": -1982024.1692193598,\n      \"currency\": \"incididunt pariatur sit fugiat\",\n      \"minCost\": 55784231.56550655,\n      \"minStayUntil\": \"et\",\n      \"canExtendUntil\": \"cupidatat ipsum\",\n      \"pricedUntil\": \"in\",\n      \"noReturnUntil\": \"officia est\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -90337400,\n       -59733954\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"et enim aliquip\",\n      \"surcharge\": {\n       \"value\": -882057.6471094042,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -76930793\n       }\n      }\n     }\n    ],\n    \"distance\": 66324961.65541232,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -31589146,\n      86124645\n     ]\n    },\n    \"entityETag\": \"ex tempor laborum\"\n   },\n   {\n    \"entityId\": \"qui cillum ea nulla\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": 4262219.027270749,\n      \"currency\": \"dolor adipisicing\",\n      \"minCost\": 96731793.7273247,\n      \"minStayUntil\": \"amet eiusmod Duis\",\n      \"canExtendUntil\": \"ut\",\n      \"pricedUntil\": \"dolore Excepteur\",\n      \"noReturnUntil\": \"ut sit\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -52558925,\n       -84404282\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"labo\",\n      \"surcharge\": {\n       \"value\": 80799959.45474994,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -28549305\n       }\n      }\n     },\n     {\n      \"cost\": -18496975.45636393,\n      \"currency\": \"dolore sunt esse velit\",\n      \"minCost\": 19617206.340453073,\n      \"minStayUntil\": \"in anim\",\n      \"canExtendUntil\": \"in ut\",\n      \"pricedUntil\": \"voluptate elit sint\",\n      \"noReturnUntil\": \"elit lab\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       54720500,\n       40624634\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"id fugiat anim\",\n      \"surcharge\": {\n       \"value\": 8526562.471076638,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -3730183\n       }\n      }\n     }\n    ],\n    \"distance\": -30118976.363374054,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -74324158,\n      -59634931\n     ]\n    },\n    \"entityETag\": \"cillum mo\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a4d689d4-d4e1-446a-b188-3a69ad57a0cd",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9e431e79-7a01-48dc-ad2a-9bf23a8dfc13",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bb15b90f-8d43-486d-a64d-93a893788dc3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a007f1df-5345-4d0b-8b4e-c862c16e644c",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "e8b4626e-e68c-408e-83d4-c26f8a386595",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"dolore fugiat\",\n    \"cardPaymentsExternalUrl\": \"commodo esse ipsum\",\n    \"paymentsTelephone\": \"eu\"\n   },\n   {\n    \"name\": \"voluptate in eu ad\",\n    \"cardPaymentsExternalUrl\": \"Duis sit\",\n    \"paymentsTelephone\": \"et tempor\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e8a37711-4f5e-4c7e-8105-195b469446fa",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "80df5963-c1d8-480d-a45f-45619894589f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "497b5d7a-4ccc-480a-b023-0869b0e33d7b",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna consectetur ea officia\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f2760d20-a35c-4c33-b207-abf2159a0d03",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ef31e820-e256-45c4-97df-62d7f478f07d",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "36590142-a554-4f66-9efd-9d0cd6bbb033",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"velit elit cu\",\n     \"crs\": {\n      \"type\": \"irure labore\",\n      \"properties\": {\n       \"name\": \"dolore\"\n      }\n     }\n    },\n    {\n     \"type\": \"proident tempor dolore\",\n     \"crs\": {\n      \"type\": \"velit Duis\",\n      \"properties\": {\n       \"name\": \"proident eiusmod in ullamco deserunt\"\n      }\n     }\n    }\n   ],\n   \"type\": \"sunt est mollit consectetur\",\n   \"crs\": {\n    \"type\": \"in dolore sed\",\n    \"properties\": {\n     \"name\": \"ut ad officia\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"nulla cillum exercitation amet\"\n   },\n   {\n    \"message\": \"cillum fugiat exerc\"\n   }\n  ],\n  \"authorityId\": \"cillum labore veniam occaecat\",\n  \"zoneType\": 7,\n  \"entityType\": 4,\n  \"entityId\": \"sit deserunt ut minim\",\n  \"name\": \"pariatur nostrud eu aute eiusmod\",\n  \"eTag\": \"eiusmod est\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1f6e6ada-2d56-4c0a-909d-be91ab9dda5e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d7bfa532-83c3-4277-ac55-96772bb5f590",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ad1d7631-32aa-4d09-9bba-ce201a012cf9",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"magna consectetur ea officia\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "86de88d6-f7e2-48d5-8b50-e098e870258b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "bd9bfb9f-773a-438f-9c4c-bf8b9e1e9e22",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sint tempor culpa ea\",\n            \"properties\": {\n                \"name\": \"do consequat aute ex\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "a0dcafde-1110-44fc-8207-dc4d1e63b6f1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore\",\n            \"properties\": {\n                \"name\": \"Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"dolore deserunt eiusmod\",\n    \"entityETag\": \"eu dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 17029760,\n      \"specialRestrictionTypeId\": 99593633,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"cupidatat in consequat sit\",\n        \"endTime\": \"nulla in exercitation\",\n        \"maxStay\": 1361029\n       },\n       {\n        \"startTime\": \"laboris\",\n        \"endTime\": \"non irure id mollit\",\n        \"maxStay\": 5209504\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -80012300,\n      \"specialRestrictionTypeId\": 50275094,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis elit cil\",\n        \"endTime\": \"officia aliqua fugiat\",\n        \"maxStay\": 38010030\n       },\n       {\n        \"startTime\": \"tempor aute mollit sint consectetur\",\n        \"endTime\": \"cupidatat\",\n        \"maxStay\": 16787116\n       }\n      ]\n     }\n    ],\n    \"distance\": -90835117.25616908\n   },\n   {\n    \"entityId\": \"esse\",\n    \"entityETag\": \"ad non magna\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -25499610,\n      \"specialRestrictionTypeId\": 39090554,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"ullamco qui nisi aliqua nostrud\",\n        \"maxStay\": -26819741\n       },\n       {\n        \"startTime\": \"adipisicing cupidatat qui\",\n        \"endTime\": \"ad \",\n        \"maxStay\": 86113168\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -29266722,\n      \"specialRestrictionTypeId\": 31823303,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ipsum ad Excepteur\",\n        \"endTime\": \"sed in officia\",\n        \"maxStay\": -38287363\n       },\n       {\n        \"startTime\": \"commodo exercitation voluptate\",\n        \"endTime\": \"consectetur deserunt ut\",\n        \"maxStay\": -85977916\n       }\n      ]\n     }\n    ],\n    \"distance\": 7020554.880485579\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"aute fugiat\",\n   \"entityETag\": \"pariatur tempor id dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 64836186,\n     \"specialRestrictionTypeId\": -9048786,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"enim eiusmod\",\n       \"endTime\": \"est\",\n       \"maxStay\": 5455474\n      },\n      {\n       \"startTime\": \"occaecat \",\n       \"endTime\": \"commodo magna laboris et\",\n       \"maxStay\": -61633394\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 45316789,\n     \"specialRestrictionTypeId\": 62297480,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex non cillum voluptate\",\n       \"endTime\": \"esse Excepteur ullamco consequat\",\n       \"maxStay\": 98391707\n      },\n      {\n       \"startTime\": \"laboris\",\n       \"endTime\": \"in aliquip exercitation anim\",\n       \"maxStay\": -77349569\n      }\n     ]\n    }\n   ],\n   \"distance\": -2289780.5661443323\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "94857af2-bd05-4ef2-b546-46133944b14f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore\",\n            \"properties\": {\n                \"name\": \"Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5b81142e-fa05-4062-90a7-802ccfa03901",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore\",\n            \"properties\": {\n                \"name\": \"Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bfaa3de0-0c17-43a1-8ac0-05795aec0173",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore\",\n            \"properties\": {\n                \"name\": \"Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6dda6881-4237-4c53-aaff-ea6dc65103e9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore\",\n            \"properties\": {\n                \"name\": \"Duis\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "436573ed-c10d-4105-b203-659e411c11a0",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "35309c90-7d72-402f-adc8-dd52ef0fc2d2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"dolo\",\n      \"city\": \"aliquip eiusmod no\",\n      \"country\": \"ut cillum Excepteur est\",\n      \"postcode\": \"deserunt dolor cupidatat cillum et\"\n     },\n     \"locationCode\": \"Duis irure\",\n     \"totalCapacity\": 28116071,\n     \"zoneId\": \"consectetur sed\",\n     \"authorityId\": \"aute Lorem\",\n     \"features\": {\n      \"type\": \"do dolore irure\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laborum exercitation aliqua nostrud\",\n           \"crs\": {\n            \"type\": \"dolor ipsum in ullamco voluptate\",\n            \"properties\": {\n             \"name\": \"Duis labore anim ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"voluptate Duis nostrud\",\n           \"crs\": {\n            \"type\": \"enim eiusmod laboris non esse\",\n            \"properties\": {\n             \"name\": \"exercitation est qui\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ut Lorem laboris dolore\",\n         \"crs\": {\n          \"type\": \"commodo minim Lorem\",\n          \"properties\": {\n           \"name\": \"id cupidatat exercitation\"\n          }\n         }\n        },\n        \"type\": \"enim Lorem\",\n        \"id\": \"occaecat aliqua\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"veniam consequat cillum enim\",\n           \"crs\": {\n            \"type\": \"proident aute aliqua\",\n            \"properties\": {\n             \"name\": \"proident ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"fugiat occaecat\",\n           \"crs\": {\n            \"type\": \"inc\",\n            \"properties\": {\n             \"name\": \"Lorem minim culpa deserunt\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim sunt Excepteur dolor culpa\",\n         \"crs\": {\n          \"type\": \"do dolor officia irure\",\n          \"properties\": {\n           \"name\": \"reprehenderit dolore\"\n          }\n         }\n        },\n        \"type\": \"cupidatat consequat\",\n        \"id\": \"proident velit culpa\"\n       }\n      ],\n      \"properties\": \"voluptate enim non\"\n     },\n     \"paymentMethodIds\": [\n      67853750,\n      -10164007\n     ],\n     \"entityId\": \"anim consequat\",\n     \"entityType\": 4,\n     \"name\": \"Excepteur Duis\",\n     \"eTag\": \"sit aliquip\"\n    },\n    \"distance\": -41088982.11955951\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud ipsum est\",\n      \"city\": \"pariatur in\",\n      \"country\": \"magna\",\n      \"postcode\": \"qu\"\n     },\n     \"locationCode\": \"fugiat velit sint dolor ea\",\n     \"totalCapacity\": 19793872,\n     \"zoneId\": \"Ut sint sunt adipisicing qui\",\n     \"authorityId\": \"dolor ea minim\",\n     \"features\": {\n      \"type\": \"tempor\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"mollit Duis occaecat\",\n           \"crs\": {\n            \"type\": \"aliqua aliquip nisi\",\n            \"properties\": {\n             \"name\": \"id magna sint dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"ipsum ea\",\n           \"crs\": {\n            \"type\": \"in ullamco anim\",\n            \"properties\": {\n             \"name\": \"sit mollit consectetur n\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Ut minim ad in\",\n         \"crs\": {\n          \"type\": \"occaecat do mollit\",\n          \"properties\": {\n           \"name\": \"reprehenderit laboris dolore incididunt\"\n          }\n         }\n        },\n        \"type\": \"dolore magna\",\n        \"id\": \"aliquip aliqua adipisicing amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"aute consequat\",\n           \"crs\": {\n            \"type\": \"incididunt amet\",\n            \"properties\": {\n             \"name\": \"est fugiat aliquip in sed\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut elit culpa\",\n           \"crs\": {\n            \"type\": \"in in\",\n            \"properties\": {\n             \"name\": \"irure qu\"\n            }\n           }\n          }\n         ],\n         \"type\": \"sit Duis eu\",\n         \"crs\": {\n          \"type\": \"laborum\",\n          \"properties\": {\n           \"name\": \"pariatur mollit Ut ut dolore\"\n          }\n         }\n        },\n        \"type\": \"fugiat esse nostrud\",\n        \"id\": \"anim cupidatat \"\n       }\n      ],\n      \"properties\": \"fugiat ullamco\"\n     },\n     \"paymentMethodIds\": [\n      18477220,\n      67029565\n     ],\n     \"entityId\": \"magna commodo exercitation in\",\n     \"entityType\": 2,\n     \"name\": \"nulla sit ut\",\n     \"eTag\": \"dolore laborum\"\n    },\n    \"distance\": -21264636.19364731\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "363f3a7d-20b8-42d3-b8bc-4dd5973a3151",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "74bd7714-c608-40b4-8509-546fba295cea",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "126e91a9-ea2a-4cf8-8e86-a27d6b724249",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "79af769b-fc8f-4ff2-9c91-eae9ac065f1b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a0f3330a-c078-4e7d-92fc-90f2064f275c",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident adipisicing officia\",\n            \"properties\": {\n                \"name\": \"et proident aute Lorem\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "995c91af-cbe5-4341-bab9-dea6e2e7567f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation in\",\n            \"properties\": {\n                \"name\": \"no\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"dolo\",\n      \"city\": \"aliquip eiusmod no\",\n      \"country\": \"ut cillum Excepteur est\",\n      \"postcode\": \"deserunt dolor cupidatat cillum et\"\n     },\n     \"locationCode\": \"Duis irure\",\n     \"totalCapacity\": 28116071,\n     \"zoneId\": \"consectetur sed\",\n     \"authorityId\": \"aute Lorem\",\n     \"features\": {\n      \"type\": \"do dolore irure\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laborum exercitation aliqua nostrud\",\n           \"crs\": {\n            \"type\": \"dolor ipsum in ullamco voluptate\",\n            \"properties\": {\n             \"name\": \"Duis labore anim ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"voluptate Duis nostrud\",\n           \"crs\": {\n            \"type\": \"enim eiusmod laboris non esse\",\n            \"properties\": {\n             \"name\": \"exercitation est qui\"\n            }\n           }\n          }\n         ],\n         \"type\": \"ut Lorem laboris dolore\",\n         \"crs\": {\n          \"type\": \"commodo minim Lorem\",\n          \"properties\": {\n           \"name\": \"id cupidatat exercitation\"\n          }\n         }\n        },\n        \"type\": \"enim Lorem\",\n        \"id\": \"occaecat aliqua\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"veniam consequat cillum enim\",\n           \"crs\": {\n            \"type\": \"proident aute aliqua\",\n            \"properties\": {\n             \"name\": \"proident ullamco\"\n            }\n           }\n          },\n          {\n           \"type\": \"fugiat occaecat\",\n           \"crs\": {\n            \"type\": \"inc\",\n            \"properties\": {\n             \"name\": \"Lorem minim culpa deserunt\"\n            }\n           }\n          }\n         ],\n         \"type\": \"anim sunt Excepteur dolor culpa\",\n         \"crs\": {\n          \"type\": \"do dolor officia irure\",\n          \"properties\": {\n           \"name\": \"reprehenderit dolore\"\n          }\n         }\n        },\n        \"type\": \"cupidatat consequat\",\n        \"id\": \"proident velit culpa\"\n       }\n      ],\n      \"properties\": \"voluptate enim non\"\n     },\n     \"paymentMethodIds\": [\n      67853750,\n      -10164007\n     ],\n     \"entityId\": \"anim consequat\",\n     \"entityType\": 4,\n     \"name\": \"Excepteur Duis\",\n     \"eTag\": \"sit aliquip\"\n    },\n    \"distance\": -41088982.11955951\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud ipsum est\",\n      \"city\": \"pariatur in\",\n      \"country\": \"magna\",\n      \"postcode\": \"qu\"\n     },\n     \"locationCode\": \"fugiat velit sint dolor ea\",\n     \"totalCapacity\": 19793872,\n     \"zoneId\": \"Ut sint sunt adipisicing qui\",\n     \"authorityId\": \"dolor ea minim\",\n     \"features\": {\n      \"type\": \"tempor\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"mollit Duis occaecat\",\n           \"crs\": {\n            \"type\": \"aliqua aliquip nisi\",\n            \"properties\": {\n             \"name\": \"id magna sint dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"ipsum ea\",\n           \"crs\": {\n            \"type\": \"in ullamco anim\",\n            \"properties\": {\n             \"name\": \"sit mollit consectetur n\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Ut minim ad in\",\n         \"crs\": {\n          \"type\": \"occaecat do mollit\",\n          \"properties\": {\n           \"name\": \"reprehenderit laboris dolore incididunt\"\n          }\n         }\n        },\n        \"type\": \"dolore magna\",\n        \"id\": \"aliquip aliqua adipisicing amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"aute consequat\",\n           \"crs\": {\n            \"type\": \"incididunt amet\",\n            \"properties\": {\n             \"name\": \"est fugiat aliquip in sed\"\n            }\n           }\n          },\n          {\n           \"type\": \"ut elit culpa\",\n           \"crs\": {\n            \"type\": \"in in\",\n            \"properties\": {\n             \"name\": \"irure qu\"\n            }\n           }\n          }\n         ],\n         \"type\": \"sit Duis eu\",\n         \"crs\": {\n          \"type\": \"laborum\",\n          \"properties\": {\n           \"name\": \"pariatur mollit Ut ut dolore\"\n          }\n         }\n        },\n        \"type\": \"fugiat esse nostrud\",\n        \"id\": \"anim cupidatat \"\n       }\n      ],\n      \"properties\": \"fugiat ullamco\"\n     },\n     \"paymentMethodIds\": [\n      18477220,\n      67029565\n     ],\n     \"entityId\": \"magna commodo exercitation in\",\n     \"entityType\": 2,\n     \"name\": \"nulla sit ut\",\n     \"eTag\": \"dolore laborum\"\n    },\n    \"distance\": -21264636.19364731\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "38120ff1-8c6e-40f5-a141-23b0377875c0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation in\",\n            \"properties\": {\n                \"name\": \"no\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9f9aab89-4bb0-496f-9ee9-7f8497986e1e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation in\",\n            \"properties\": {\n                \"name\": \"no\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "522e738f-1b14-48db-9de3-a092b26e7e7a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation in\",\n            \"properties\": {\n                \"name\": \"no\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bd3950f2-0cc3-4e56-9243-3b6f617f0fc8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"exercitation in\",\n            \"properties\": {\n                \"name\": \"no\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4e477f99-cf8e-4ef1-823c-3c908fe713ca",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2499dfc5-c68e-4a65-8c20-66d0e85d138a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"ex\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"amet tempor ex\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -83814250.54735026,\n      \"currency\": \"ex voluptate\",\n      \"minCost\": 43611302.20971888,\n      \"minStayUntil\": \"tempor dolore commodo\",\n      \"canExtendUntil\": \"in non velit\",\n      \"pricedUntil\": \"sed dolor\",\n      \"noReturnUntil\": \"eu\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -17279671,\n       -18696230\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex reprehenderit ut\",\n      \"surcharge\": {\n       \"value\": -90626422.223187,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 29187350\n       }\n      }\n     },\n     {\n      \"cost\": 42355296.65833232,\n      \"currency\": \"fugiat pariatur est nisi\",\n      \"minCost\": 35989390.34285954,\n      \"minStayUntil\": \"nostrud dol\",\n      \"canExtendUntil\": \"laboris d\",\n      \"pricedUntil\": \"irure qui\",\n      \"noReturnUntil\": \"culpa do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -34020428,\n       73535463\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aute Ut ea\",\n      \"surcharge\": {\n       \"value\": -45819351.92354081,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -4944595\n       }\n      }\n     }\n    ],\n    \"distance\": 70000135.11358315,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -67403240,\n      52524893\n     ]\n    },\n    \"entityETag\": \"ad Duis\"\n   },\n   {\n    \"entityId\": \"esse in\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -22209333.057535037,\n      \"currency\": \"magna ad enim\",\n      \"minCost\": -50579330.494056895,\n      \"minStayUntil\": \"anim fugiat\",\n      \"canExtendUntil\": \"ipsum culpa Excepteur in qui\",\n      \"pricedUntil\": \"incididunt dolore magna in i\",\n      \"noReturnUntil\": \"do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       18465774,\n       -18578882\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Ut magna culpa\",\n      \"surcharge\": {\n       \"value\": 41899043.29851478,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 22726931\n       }\n      }\n     },\n     {\n      \"cost\": 60679714.00467461,\n      \"currency\": \"laboris deserunt\",\n      \"minCost\": 76316886.33422074,\n      \"minStayUntil\": \"non reprehen\",\n      \"canExtendUntil\": \"occaecat\",\n      \"pricedUntil\": \"fugiat sit Ut aliquip\",\n      \"noReturnUntil\": \"enim eu sed a\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       71834056,\n       -59204054\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris anim id ipsu\",\n      \"surcharge\": {\n       \"value\": -6330477.187121004,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -46476997\n       }\n      }\n     }\n    ],\n    \"distance\": -28927417.458625287,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      61499095,\n      35820189\n     ]\n    },\n    \"entityETag\": \"ullamco in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0cd0bb12-f21a-4575-a27c-ed0b3a98d378",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6afed912-4cfb-41be-846a-da0c40682d3e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "aa01aea3-782b-4aeb-8a07-aecbb260abab",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5046abd7-3e01-4589-92da-89baba01ecc9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e3957372-6ee1-439f-9692-8192def4d6e1",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"su\",\n            \"properties\": {\n                \"name\": \"laborum quis anim in\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e0145725-0196-4674-b33b-f961abb8dcad",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit anim Lorem cupidatat ad\",\n            \"properties\": {\n                \"name\": \"ea veniam non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"ex\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"amet tempor ex\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -83814250.54735026,\n      \"currency\": \"ex voluptate\",\n      \"minCost\": 43611302.20971888,\n      \"minStayUntil\": \"tempor dolore commodo\",\n      \"canExtendUntil\": \"in non velit\",\n      \"pricedUntil\": \"sed dolor\",\n      \"noReturnUntil\": \"eu\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -17279671,\n       -18696230\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ex reprehenderit ut\",\n      \"surcharge\": {\n       \"value\": -90626422.223187,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 29187350\n       }\n      }\n     },\n     {\n      \"cost\": 42355296.65833232,\n      \"currency\": \"fugiat pariatur est nisi\",\n      \"minCost\": 35989390.34285954,\n      \"minStayUntil\": \"nostrud dol\",\n      \"canExtendUntil\": \"laboris d\",\n      \"pricedUntil\": \"irure qui\",\n      \"noReturnUntil\": \"culpa do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -34020428,\n       73535463\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"aute Ut ea\",\n      \"surcharge\": {\n       \"value\": -45819351.92354081,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -4944595\n       }\n      }\n     }\n    ],\n    \"distance\": 70000135.11358315,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -67403240,\n      52524893\n     ]\n    },\n    \"entityETag\": \"ad Duis\"\n   },\n   {\n    \"entityId\": \"esse in\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -22209333.057535037,\n      \"currency\": \"magna ad enim\",\n      \"minCost\": -50579330.494056895,\n      \"minStayUntil\": \"anim fugiat\",\n      \"canExtendUntil\": \"ipsum culpa Excepteur in qui\",\n      \"pricedUntil\": \"incididunt dolore magna in i\",\n      \"noReturnUntil\": \"do\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       18465774,\n       -18578882\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Ut magna culpa\",\n      \"surcharge\": {\n       \"value\": 41899043.29851478,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 22726931\n       }\n      }\n     },\n     {\n      \"cost\": 60679714.00467461,\n      \"currency\": \"laboris deserunt\",\n      \"minCost\": 76316886.33422074,\n      \"minStayUntil\": \"non reprehen\",\n      \"canExtendUntil\": \"occaecat\",\n      \"pricedUntil\": \"fugiat sit Ut aliquip\",\n      \"noReturnUntil\": \"enim eu sed a\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       71834056,\n       -59204054\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris anim id ipsu\",\n      \"surcharge\": {\n       \"value\": -6330477.187121004,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -46476997\n       }\n      }\n     }\n    ],\n    \"distance\": -28927417.458625287,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      61499095,\n      35820189\n     ]\n    },\n    \"entityETag\": \"ullamco in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "22659161-4c61-4f1c-83cd-a3b11e3d5588",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit anim Lorem cupidatat ad\",\n            \"properties\": {\n                \"name\": \"ea veniam non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fc581160-0e6e-4df8-87de-347ea1f56db1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit anim Lorem cupidatat ad\",\n            \"properties\": {\n                \"name\": \"ea veniam non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a88bfa98-e763-49ec-a90a-1a1ffbe6a137",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit anim Lorem cupidatat ad\",\n            \"properties\": {\n                \"name\": \"ea veniam non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "22b268b4-bcaf-4d30-b44d-a2a568100afb",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"elit anim Lorem cupidatat ad\",\n            \"properties\": {\n                \"name\": \"ea veniam non\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d8af266d-5b37-4127-9067-2dd9f5a49690",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"id tempor laboris\",\n            \"properties\": {\n                \"name\": \"velit do\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "f2e24ad2-de81-4a17-9ede-96b15d0b8784",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui in\",\n            \"properties\": {\n                \"name\": \"aute proident sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"Exc\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"velit nulla voluptate\",\n     \"crs\": {\n      \"type\": \"tempor magna\",\n      \"properties\": {\n       \"name\": \"cillum\"\n      }\n     }\n    },\n    \"type\": \"dolore occaecat sed ipsum velit\",\n    \"id\": \"eu\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"elit aute officia\",\n     \"crs\": {\n      \"type\": \"nisi consequat sunt\",\n      \"properties\": {\n       \"name\": \"laboris eni\"\n      }\n     }\n    },\n    \"type\": \"sint quis mollit\",\n    \"id\": \"dolor ut est officia\"\n   }\n  ],\n  \"properties\": \"culpa\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "249370cb-b0f0-4967-b5c0-118696060abb",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui in\",\n            \"properties\": {\n                \"name\": \"aute proident sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "763910b4-12c7-4df5-8e97-3afead96286d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui in\",\n            \"properties\": {\n                \"name\": \"aute proident sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3b8276f2-5655-4c1d-a0b4-2562db77daf1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui in\",\n            \"properties\": {\n                \"name\": \"aute proident sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7aac66ab-ad8f-4727-86fc-cca3c3b867f8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui in\",\n            \"properties\": {\n                \"name\": \"aute proident sit\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8f36c929-c5c3-42b0-acfd-511a7dbeb5e3",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"fugiat ipsum aliqua\",\n            \"properties\": {\n                \"name\": \"amet veniam non\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e195e654-4cde-441a-9207-6167739edb1e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident elit in d\",\n            \"properties\": {\n                \"name\": \"velit sint\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"dolore deserunt eiusmod\",\n    \"entityETag\": \"eu dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 17029760,\n      \"specialRestrictionTypeId\": 99593633,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"cupidatat in consequat sit\",\n        \"endTime\": \"nulla in exercitation\",\n        \"maxStay\": 1361029\n       },\n       {\n        \"startTime\": \"laboris\",\n        \"endTime\": \"non irure id mollit\",\n        \"maxStay\": 5209504\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -80012300,\n      \"specialRestrictionTypeId\": 50275094,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"quis elit cil\",\n        \"endTime\": \"officia aliqua fugiat\",\n        \"maxStay\": 38010030\n       },\n       {\n        \"startTime\": \"tempor aute mollit sint consectetur\",\n        \"endTime\": \"cupidatat\",\n        \"maxStay\": 16787116\n       }\n      ]\n     }\n    ],\n    \"distance\": -90835117.25616908\n   },\n   {\n    \"entityId\": \"esse\",\n    \"entityETag\": \"ad non magna\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -25499610,\n      \"specialRestrictionTypeId\": 39090554,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"magna\",\n        \"endTime\": \"ullamco qui nisi aliqua nostrud\",\n        \"maxStay\": -26819741\n       },\n       {\n        \"startTime\": \"adipisicing cupidatat qui\",\n        \"endTime\": \"ad \",\n        \"maxStay\": 86113168\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": -29266722,\n      \"specialRestrictionTypeId\": 31823303,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ipsum ad Excepteur\",\n        \"endTime\": \"sed in officia\",\n        \"maxStay\": -38287363\n       },\n       {\n        \"startTime\": \"commodo exercitation voluptate\",\n        \"endTime\": \"consectetur deserunt ut\",\n        \"maxStay\": -85977916\n       }\n      ]\n     }\n    ],\n    \"distance\": 7020554.880485579\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"aute fugiat\",\n   \"entityETag\": \"pariatur tempor id dolor\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 64836186,\n     \"specialRestrictionTypeId\": -9048786,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"enim eiusmod\",\n       \"endTime\": \"est\",\n       \"maxStay\": 5455474\n      },\n      {\n       \"startTime\": \"occaecat \",\n       \"endTime\": \"commodo magna laboris et\",\n       \"maxStay\": -61633394\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 45316789,\n     \"specialRestrictionTypeId\": 62297480,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ex non cillum voluptate\",\n       \"endTime\": \"esse Excepteur ullamco consequat\",\n       \"maxStay\": 98391707\n      },\n      {\n       \"startTime\": \"laboris\",\n       \"endTime\": \"in aliquip exercitation anim\",\n       \"maxStay\": -77349569\n      }\n     ]\n    }\n   ],\n   \"distance\": -2289780.5661443323\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "41388f3d-de76-4950-b925-7781d1286e4d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident elit in d\",\n            \"properties\": {\n                \"name\": \"velit sint\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cupidatat eu\",\n \"errors\": [\n  {\n   \"property\": \"dolor sunt\",\n   \"code\": \"cillum quis ut\",\n   \"message\": \"eu Lorem esse reprehenderit\"\n  },\n  {\n   \"property\": \"sit magna exercitation ut\",\n   \"code\": \"dolore aliquip Lorem veniam\",\n   \"message\": \"deserunt quis in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5f8c1c5a-5b02-41a6-8452-9e05b89d06c6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident elit in d\",\n            \"properties\": {\n                \"name\": \"velit sint\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a0a60de0-89ec-4810-ad99-2eca2c4542e6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident elit in d\",\n            \"properties\": {\n                \"name\": \"velit sint\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "20c422b8-2fe1-46e0-8174-d4e9a91b2743",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"proident elit in d\",\n            \"properties\": {\n                \"name\": \"velit sint\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ee62d2f6-1e40-41d9-a4fe-3dba17416a77",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "5432b58e-8eaf-4b3f-8207-eee3b5aafa78",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1d59a462-8a72-4d65-9095-bd78d166755c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "87e6403d-7ca9-4e0b-a2df-bf18d165dc62",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "019b127f-b1c0-42c1-a4c8-e213a9db5654",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "a6d26891-cdfb-458e-a1f9-b4241c23c0da",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
