{
  "item": [
    {
      "id": "b5861ff7-6604-4758-b6b5-b8d5114ff568",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "43075c4a-3f6b-405d-8ffc-a4ebf181a418",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"ut est\"\n   },\n   {\n    \"message\": \"\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"do\",\n    \"cardPaymentsExternalUrl\": \"adipisicing sint\",\n    \"paymentsTelephone\": \"esse culpa commodo irure non\"\n   },\n   {\n    \"name\": \"eu consequat in ipsum ut\",\n    \"cardPaymentsExternalUrl\": \"i\",\n    \"paymentsTelephone\": \"do quis ipsum ullamco\"\n   }\n  ],\n  \"entityType\": 3,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"\",\n     \"crs\": {\n      \"type\": \"aliqua voluptate laboris\",\n      \"properties\": {\n       \"name\": \"irure enim in\"\n      }\n     }\n    },\n    {\n     \"type\": \"ut enim ad\",\n     \"crs\": {\n      \"type\": \"exercitation nostrud nisi\",\n      \"properties\": {\n       \"name\": \"nostrud enim sit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"fu\",\n   \"crs\": {\n    \"type\": \"ut eu commodo voluptate\",\n    \"properties\": {\n     \"name\": \"Excepteur eiusmod non sed\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"voluptat\",\n  \"name\": \"amet sint ad\",\n  \"eTag\": \"enim laborum sunt\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ec0385ee-7cf9-4f7d-aa0b-fa5f82284d49",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8ce7de38-8e94-4ecb-9707-2d5b17aa94c1",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1c363923-6f70-4f4f-a15e-f41ec6e86637",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0c3a3c30-d0b0-4ac9-8d7d-1ad77394ebd9",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f8c95533-7280-4a12-bde3-df8395fe57e9",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "ea7bc361-f9e4-4045-bf50-ea1aef78e3b5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"irure\",\n     \"city\": \"sunt es\",\n     \"country\": \"quis\",\n     \"postcode\": \"dolor qui elit\"\n    },\n    \"locationCode\": \"dolor adipisicing Ut officia laborum\",\n    \"totalCapacity\": 65047402,\n    \"zoneId\": \"id non\",\n    \"authorityId\": \"exercitation ut\",\n    \"features\": {\n     \"type\": \"ex mollit occaecat aliqua sit\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"minim in fugiat\",\n          \"crs\": {\n           \"type\": \"enim in\",\n           \"properties\": {\n            \"name\": \"qui deserunt Lorem nostrud\"\n           }\n          }\n         },\n         {\n          \"type\": \"laborum\",\n          \"crs\": {\n           \"type\": \"ea in eiusmod sed\",\n           \"properties\": {\n            \"name\": \"officia\"\n           }\n          }\n         }\n        ],\n        \"type\": \"est mollit id\",\n        \"crs\": {\n         \"type\": \"consequat sunt culpa\",\n         \"properties\": {\n          \"name\": \"anim Duis in deserunt dolore\"\n         }\n        }\n       },\n       \"type\": \"culpa\",\n       \"id\": \"sint minim commodo ut\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"qui\",\n          \"crs\": {\n           \"type\": \"elit dolor ipsum sed eu\",\n           \"properties\": {\n            \"name\": \"ad labore proident\"\n           }\n          }\n         },\n         {\n          \"type\": \"anim sunt ad\",\n          \"crs\": {\n           \"type\": \"consectetur\",\n           \"properties\": {\n            \"name\": \"velit aliqua qui ullamco\"\n           }\n          }\n         }\n        ],\n        \"type\": \"cupidatat amet occaecat Duis eiusmod\",\n        \"crs\": {\n         \"type\": \"eu ea\",\n         \"properties\": {\n          \"name\": \"officia\"\n         }\n        }\n       },\n       \"type\": \"incididunt e\",\n       \"id\": \"est non reprehenderit\"\n      }\n     ],\n     \"properties\": \"ea\"\n    },\n    \"paymentMethodIds\": [\n     56550220,\n     -42815583\n    ],\n    \"entityId\": \"ut eu reprehen\",\n    \"entityType\": 4,\n    \"name\": \"ad sit\",\n    \"eTag\": \"enim\",\n    \"operator\": {\n     \"telephone\": \"commodo enim\",\n     \"website\": \"dolor sit ut\",\n     \"name\": \"magna et cillum ipsum\",\n     \"cardPaymentsExternalUrl\": \"est ea sunt Lorem culpa\",\n     \"paymentsTelephone\": \"officia quis est aliquip\"\n    },\n    \"onStreetParkingTypeIds\": [\n     12,\n     4\n    ],\n    \"facilityTypeIds\": [\n     94168643,\n     -98092560\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"f\",\n     \"city\": \"Ut do in labore\",\n     \"country\": \"quis Duis\",\n     \"postcode\": \"ul\"\n    },\n    \"locationCode\": \"aute ad\",\n    \"totalCapacity\": 96475456,\n    \"zoneId\": \"et nulla\",\n    \"authorityId\": \"anim esse\",\n    \"features\": {\n     \"type\": \"minim non commodo velit\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"sint amet sed\",\n          \"crs\": {\n           \"type\": \"commodo\",\n           \"properties\": {\n            \"name\": \"qu\"\n           }\n          }\n         },\n         {\n          \"type\": \"et aliqua culpa\",\n          \"crs\": {\n           \"type\": \"anim mollit\",\n           \"properties\": {\n            \"name\": \"incididunt\"\n           }\n          }\n         }\n        ],\n        \"type\": \"d\",\n        \"crs\": {\n         \"type\": \"labore elit culpa nisi sed\",\n         \"properties\": {\n          \"name\": \"Ut dolore\"\n         }\n        }\n       },\n       \"type\": \"id\",\n       \"id\": \"id exercitation occaecat deserunt ad\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"in est dolore dolore\",\n          \"crs\": {\n           \"type\": \"pariatur amet\",\n           \"properties\": {\n            \"name\": \"p\"\n           }\n          }\n         },\n         {\n          \"type\": \"in reprehenderit sunt laboris eiusmod\",\n          \"crs\": {\n           \"type\": \"laborum\",\n           \"properties\": {\n            \"name\": \"eiusmod tempor\"\n           }\n          }\n         }\n        ],\n        \"type\": \"do esse\",\n        \"crs\": {\n         \"type\": \"aute esse ea aliquip\",\n         \"properties\": {\n          \"name\": \"labore dolore Ut\"\n         }\n        }\n       },\n       \"type\": \"officia irure molli\",\n       \"id\": \"Ut aute adipisicing\"\n      }\n     ],\n     \"properties\": \"voluptate\"\n    },\n    \"paymentMethodIds\": [\n     -3191000,\n     -25255107\n    ],\n    \"entityId\": \"nostrud consequat pariatur magna\",\n    \"entityType\": 2,\n    \"name\": \"Ut \",\n    \"eTag\": \"nostrud\",\n    \"operator\": {\n     \"telephone\": \"sed nostrud pariatur exercitation\",\n     \"website\": \"nostrud\",\n     \"name\": \"consectetur\",\n     \"cardPaymentsExternalUrl\": \"\",\n     \"paymentsTelephone\": \"amet in quis\"\n    },\n    \"onStreetParkingTypeIds\": [\n     8,\n     14\n    ],\n    \"facilityTypeIds\": [\n     71608471,\n     70155862\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"aliqua consequat amet incididunt\",\n       \"crs\": {\n        \"type\": \"enim quis\",\n        \"properties\": {\n         \"name\": \"deserunt aliqua eiusmod\"\n        }\n       }\n      },\n      {\n       \"type\": \"cupidatat Duis veniam qui\",\n       \"crs\": {\n        \"type\": \"ullamco exercitation\",\n        \"properties\": {\n         \"name\": \"ea quis\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ullamco adipisicing enim aute\",\n     \"crs\": {\n      \"type\": \"culpa\",\n      \"properties\": {\n       \"name\": \"cillum officia\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"anim do in\"\n     },\n     {\n      \"message\": \"nostrud Excepteur dol\"\n     }\n    ],\n    \"authorityId\": \"culpa voluptate\",\n    \"zoneType\": 9,\n    \"entityType\": 4,\n    \"entityId\": \"eiusmod\",\n    \"name\": \"Lorem dolor incididunt\",\n    \"eTag\": \"non eiusmod sit dolor laborum\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ex tempor\",\n       \"crs\": {\n        \"type\": \"labore Excepteur fugiat\",\n        \"properties\": {\n         \"name\": \"est aliquip\"\n        }\n       }\n      },\n      {\n       \"type\": \"culpa commodo amet\",\n       \"crs\": {\n        \"type\": \"nulla amet irure voluptate\",\n        \"properties\": {\n         \"name\": \"Lorem reprehe\"\n        }\n       }\n      }\n     ],\n     \"type\": \"consectetur Duis\",\n     \"crs\": {\n      \"type\": \"proident enim incididunt nisi\",\n      \"properties\": {\n       \"name\": \"aliquip occaecat eu quis\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"ea par\"\n     },\n     {\n      \"message\": \"in\"\n     }\n    ],\n    \"authorityId\": \"Excepteur incididunt dolore ex\",\n    \"zoneType\": 5,\n    \"entityType\": 2,\n    \"entityId\": \"cupidatat qui\",\n    \"name\": \"ullamco Lorem\",\n    \"eTag\": \"repre\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"fugiat mollit deserunt\"\n     },\n     {\n      \"message\": \"deserunt elit\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ea proident magna nisi laborum\",\n      \"cardPaymentsExternalUrl\": \"ad sit reprehenderit minim aliquip\",\n      \"paymentsTelephone\": \"labore nulla qui in\"\n     },\n     {\n      \"name\": \"non sint\",\n      \"cardPaymentsExternalUrl\": \"culpa magna incididunt mollit\",\n      \"paymentsTelephone\": \"ut\"\n     }\n    ],\n    \"entityType\": 2,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"mollit deserunt aute\",\n       \"crs\": {\n        \"type\": \"dolore in Ut\",\n        \"properties\": {\n         \"name\": \"aliquip labore culpa non\"\n        }\n       }\n      },\n      {\n       \"type\": \"laborum r\",\n       \"crs\": {\n        \"type\": \"sed nisi culpa\",\n        \"properties\": {\n         \"name\": \"est ipsum eu\"\n        }\n       }\n      }\n     ],\n     \"type\": \"a\",\n     \"crs\": {\n      \"type\": \"qui\",\n      \"properties\": {\n       \"name\": \"proident nulla aute\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"exercitation aute\",\n    \"name\": \"qui velit Lorem consequat\",\n    \"eTag\": \"commodo officia cupidatat laboris minim\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"tempor consectetur Duis et consequat\"\n     },\n     {\n      \"message\": \"exercitation in\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"culpa veniam ut\",\n      \"cardPaymentsExternalUrl\": \"in qui\",\n      \"paymentsTelephone\": \"consectetur dolore ullamco exercitation\"\n     },\n     {\n      \"name\": \"elit ut\",\n      \"cardPaymentsExternalUrl\": \"ex eu qui\",\n      \"paymentsTelephone\": \"quis ex\"\n     }\n    ],\n    \"entityType\": 1,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"aliquip sint labore\",\n       \"crs\": {\n        \"type\": \"dolore\",\n        \"properties\": {\n         \"name\": \"laboris U\"\n        }\n       }\n      },\n      {\n       \"type\": \"occaecat in consectetur enim\",\n       \"crs\": {\n        \"type\": \"irure\",\n        \"properties\": {\n         \"name\": \"deserunt Lorem\"\n        }\n       }\n      }\n     ],\n     \"type\": \"quis\",\n     \"crs\": {\n      \"type\": \"non reprehenderit\",\n      \"properties\": {\n       \"name\": \"officia Duis elit reprehenderit nulla\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"veniam ullamco voluptate ad\",\n    \"name\": \"aliqua Duis labore\",\n    \"eTag\": \"sunt velit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bb31d442-55dd-4d25-b517-817a93cedd37",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt esse voluptate nisi deserunt\",\n \"errors\": [\n  {\n   \"property\": \"minim proident non do tempor\",\n   \"code\": \"mollit id do\",\n   \"message\": \"proident exercitation aliquip am\"\n  },\n  {\n   \"property\": \"do aliquip amet\",\n   \"code\": \"e\",\n   \"message\": \"Excepteur\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "87b365bf-5613-46f6-8cd6-b84e31a0317f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a3139573-b986-44d6-bb0c-6f6ba1f15650",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "840ee15c-9665-46b8-9c8a-11c1d478e709",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "84c3dd55-787b-43bd-82dd-0ed07883b863",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "62b2bc43-1ef7-458b-ab0e-be8cca853ff7",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"esse Lorem voluptate pariatur\",\n  \"entityType\": 2,\n  \"entityETag\": \"mollit enim\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     -43091378,\n     -77282042\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     -3375904,\n     15121825\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e099418c-a06e-464f-8fba-3c466af1235a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "85675c64-3c7f-4e95-a044-7be00dc6ef7c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "dfd5ef36-6b2a-4636-8047-402e26b2aa8a",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7f5add09-a417-42f2-909c-048697956c67",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "73664319-287b-4f2a-9a4b-9ec25b8f0748",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "57d895ad-c88b-4d58-b0e7-efaeba1fcf87",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"exercitation elit cupidatat ea\",\n   \"city\": \"quis mollit dolor\",\n   \"country\": \"cillum laborum sed enim\",\n   \"postcode\": \"ipsum officia\"\n  },\n  \"locationCode\": \"consectetur adipisicing aliquip tempor dolor\",\n  \"totalCapacity\": -38023065,\n  \"zoneId\": \"consectetur proident\",\n  \"authorityId\": \"eu mollit ut proident\",\n  \"features\": {\n   \"type\": \"sed est ex deserunt\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"cillum adipisicing\",\n        \"crs\": {\n         \"type\": \"fugiat commodo\",\n         \"properties\": {\n          \"name\": \"dolore elit\"\n         }\n        }\n       },\n       {\n        \"type\": \"minim cillum consectetur consequat\",\n        \"crs\": {\n         \"type\": \"ut dolore irure velit\",\n         \"properties\": {\n          \"name\": \"nisi\"\n         }\n        }\n       }\n      ],\n      \"type\": \"eu eiusmod\",\n      \"crs\": {\n       \"type\": \"tempor sint\",\n       \"properties\": {\n        \"name\": \"qui\"\n       }\n      }\n     },\n     \"type\": \"non sunt pariatur in\",\n     \"id\": \"ad laborum mollit\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"ex consectetur \",\n        \"crs\": {\n         \"type\": \"ullamco ut voluptate\",\n         \"properties\": {\n          \"name\": \"exercitation ut adipisicing\"\n         }\n        }\n       },\n       {\n        \"type\": \"Duis aliquip\",\n        \"crs\": {\n         \"type\": \"amet\",\n         \"properties\": {\n          \"name\": \"nulla eu aliqua dolore laborum\"\n         }\n        }\n       }\n      ],\n      \"type\": \"est nulla\",\n      \"crs\": {\n       \"type\": \"in\",\n       \"properties\": {\n        \"name\": \"mollit se\"\n       }\n      }\n     },\n     \"type\": \"eiusmod consectetur vol\",\n     \"id\": \"reprehenderit ut consectetur\"\n    }\n   ],\n   \"properties\": \"et quis enim aliquip\"\n  },\n  \"paymentMethodIds\": [\n   -75701882,\n   50678452\n  ],\n  \"entityId\": \"minim elit eu veniam\",\n  \"entityType\": 3,\n  \"name\": \"ullamco nisi irure in\",\n  \"eTag\": \"aliqua\",\n  \"operator\": {\n   \"telephone\": \"sit mollit adipisicing\",\n   \"website\": \"quis ullamco\",\n   \"name\": \"deserunt qui\",\n   \"cardPaymentsExternalUrl\": \"voluptate in ut tempor elit\",\n   \"paymentsTelephone\": \"nu\"\n  },\n  \"onStreetParkingTypeIds\": [\n   13,\n   11\n  ],\n  \"facilityTypeIds\": [\n   99443948,\n   -60754749\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7b723768-e4c7-4fda-80f1-ba38dccc31c9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d8740079-97b3-4ebd-96e3-4094bc377c4e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "963a9c91-2151-4eb3-92c8-68f1e7daef97",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3a48c4ed-2758-4b4e-92ed-61b158ea84ec",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "98e84320-bac2-4dc4-90c9-1ad9cccb593b",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "4f19d922-23b7-43fd-879d-2c16b2b95a7f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"nulla quis labo\",\n  \"entityType\": 2,\n  \"quotes\": [\n   {\n    \"cost\": -55572081.702707574,\n    \"currency\": \"laboris in\",\n    \"minCost\": 8529872.53219366,\n    \"minStayUntil\": \"dolor sed quis consectetur\",\n    \"canExtendUntil\": \"sit et dolore fugiat\",\n    \"pricedUntil\": \"Excepteur laborum sed reprehenderit\",\n    \"noReturnUntil\": \"sint in dolore id\",\n    \"freeUntil\": \"ex nisi sed\",\n    \"becomesFreeAt\": \"Lorem officia enim\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     90834331,\n     -51406813\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"culpa laboris\",\n    \"surcharge\": {\n     \"value\": 46428913.90159288,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 97214750\n     }\n    }\n   },\n   {\n    \"cost\": -55403508.553403966,\n    \"currency\": \"pariatur dolore adipisicing ut\",\n    \"minCost\": 39258197.580637425,\n    \"minStayUntil\": \"est laboris\",\n    \"canExtendUntil\": \"volu\",\n    \"pricedUntil\": \"esse deserunt aliquip irure\",\n    \"noReturnUntil\": \"culpa dolor\",\n    \"freeUntil\": \"ut minim\",\n    \"becomesFreeAt\": \"exercitation Lorem\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     87961902,\n     -59854489\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"reprehenderit ea ut\",\n    \"surcharge\": {\n     \"value\": 88535836.77438682,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 37757672\n     }\n    }\n   }\n  ],\n  \"distance\": -83093412.96488926,\n  \"parkingAllowed\": 2,\n  \"noParkingReason\": {\n   \"reasonType\": 3,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    -75822055,\n    30268991\n   ]\n  },\n  \"entityETag\": \"et ad eiusmod\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "583b9fbb-05da-40ea-9d88-4ee2235b72aa",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6abf972f-fa5c-4764-96ed-4986983679f3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "45417b37-5bee-4d0b-bc72-d3040347d592",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "66bb3e1d-72a0-4e49-98dc-cdaf5797d96b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c7c90868-8cf3-4c2d-9fb3-dee7d6eecc0a",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "71646e33-af52-49cf-bc16-d195ec580d64",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"adipisicing mollit non aliquip\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"qui reprehenderit\",\n    \"entityType\": 3,\n    \"quotes\": [\n     {\n      \"cost\": -26309902.40573743,\n      \"currency\": \"est ex labore\",\n      \"minCost\": 96202286.87506348,\n      \"minStayUntil\": \"magna dolor ut et lab\",\n      \"canExtendUntil\": \"minim reprehenderit sint nulla\",\n      \"pricedUntil\": \"culpa Lorem es\",\n      \"noReturnUntil\": \"consequat irure temp\",\n      \"freeUntil\": \"tempor laborum minim\",\n      \"becomesFreeAt\": \"ipsum dolore nostrud qui veniam\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       5195590,\n       -37926825\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"culpa dolor\",\n      \"surcharge\": {\n       \"value\": 6729761.792122215,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -35404302\n       }\n      }\n     },\n     {\n      \"cost\": 22958262.043883562,\n      \"currency\": \"non nostrud magna voluptate\",\n      \"minCost\": 61335584.92571932,\n      \"minStayUntil\": \"cupidatat\",\n      \"canExtendUntil\": \"cillum ut velit nisi\",\n      \"pricedUntil\": \"qui est\",\n      \"noReturnUntil\": \"nulla enim amet\",\n      \"freeUntil\": \"pariatur dolor consequat ut\",\n      \"becomesFreeAt\": \"culpa irure ea\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -21071224,\n       -52576198\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"cupidatat dolor\",\n      \"surcharge\": {\n       \"value\": -95853228.16251676,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 71825441\n       }\n      }\n     }\n    ],\n    \"distance\": -40557373.215285294,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -90439733,\n      43954229\n     ]\n    },\n    \"entityETag\": \"fu\"\n   },\n   {\n    \"entityId\": \"culpa consequat qui in\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -92597338.92960721,\n      \"currency\": \"anim\",\n      \"minCost\": 17436469.734171167,\n      \"minStayUntil\": \"sit ut\",\n      \"canExtendUntil\": \"minim consequat sed voluptate\",\n      \"pricedUntil\": \"veniam pariatur ad\",\n      \"noReturnUntil\": \"Duis dolor officia Lorem\",\n      \"freeUntil\": \"est consectetur Duis\",\n      \"becomesFreeAt\": \"deserunt cillum\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       13210490,\n       -19616947\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"Excepteur proident\",\n      \"surcharge\": {\n       \"value\": -18344130.24679646,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 9267619\n       }\n      }\n     },\n     {\n      \"cost\": 84172907.04448387,\n      \"currency\": \"do sit pariatur laborum\",\n      \"minCost\": -2496936.7287481725,\n      \"minStayUntil\": \"aliqua cupidatat velit sit\",\n      \"canExtendUntil\": \"velit\",\n      \"pricedUntil\": \"pariatur adipisicing\",\n      \"noReturnUntil\": \"incididunt officia occaecat adipisicing\",\n      \"freeUntil\": \"sed elit dolore et\",\n      \"becomesFreeAt\": \"elit sit ut voluptate in\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -4310520,\n       47089760\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"in est nisi\",\n      \"surcharge\": {\n       \"value\": 48480738.45798263,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 94676442\n       }\n      }\n     }\n    ],\n    \"distance\": -39573575.33001162,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -85399344,\n      16501510\n     ]\n    },\n    \"entityETag\": \"voluptate labore Lorem ex\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "46c3b439-e3a7-4309-aea6-6d7c95fcd51e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "33eaa38e-d5b8-4389-800e-a16487a94da9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0b641699-4b78-49df-b88f-06fdd7e68e56",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4a127a1b-a518-4617-9005-3ba504100c32",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f26b76c2-4775-4605-8810-bc3e09b14173",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"cillum dolor\",\n    \"cardPaymentsExternalUrl\": \"sint veniam\",\n    \"paymentsTelephone\": \"voluptate cul\"\n   },\n   {\n    \"name\": \"cillum\",\n    \"cardPaymentsExternalUrl\": \"exercitation Duis mollit sed officia\",\n    \"paymentsTelephone\": \"irure in\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "39a876b1-d2b0-4cd0-ac35-854135ba784b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "914ebf50-f0cc-41b8-af69-053c908b3e48",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2db2a368-4b68-4576-aa0f-5a5b60b55dd2",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cfde9267-e08d-487c-99a7-9a5d788b0900",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9ae10073-91f0-444b-9a92-f0f1c22d9b8b",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3f4e8948-fdce-4a23-a57b-109b99a294ff",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"et Excepteur fugiat\",\n     \"crs\": {\n      \"type\": \"ad dolor irure ut\",\n      \"properties\": {\n       \"name\": \"occaecat commodo ullamco\"\n      }\n     }\n    },\n    {\n     \"type\": \"consectetur amet pariatur et\",\n     \"crs\": {\n      \"type\": \"do dolor ea\",\n      \"properties\": {\n       \"name\": \"magna dolore Lorem\"\n      }\n     }\n    }\n   ],\n   \"type\": \"in\",\n   \"crs\": {\n    \"type\": \"ipsum elit aliquip\",\n    \"properties\": {\n     \"name\": \"cupidatat adipisicing Lorem\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"sit Lorem ipsum ad\"\n   },\n   {\n    \"message\": \"in amet proident\"\n   }\n  ],\n  \"authorityId\": \"sit\",\n  \"zoneType\": 7,\n  \"entityType\": 4,\n  \"entityId\": \"cillum voluptate tempor\",\n  \"name\": \"nulla elit\",\n  \"eTag\": \"aliqua culpa\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7809c000-b669-46b7-8c27-4b8039dc1c74",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "eb9241a0-ed84-45da-ab9d-9e8425dfda31",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d12264d0-83af-4137-8bf8-8efb4d3072b8",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"aliqua ut dolore\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cafeaf10-0576-4887-ba50-f7963a491de5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "7703e3d5-5500-47d2-b7a8-d41acef83ebb",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolore \",\n            \"properties\": {\n                \"name\": \"minim et\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "90f1162a-a354-4e95-91c5-c1b323b5a683",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui\",\n            \"properties\": {\n                \"name\": \"quis sunt proident\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in\",\n    \"entityETag\": \"quis proident mollit consequat\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 13,\n      \"specialRestrictionTypeId\": -4571522,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"aute amet Lorem ut\",\n        \"endTime\": \"non ex\",\n        \"maxStay\": 42255728\n       },\n       {\n        \"startTime\": \"sunt esse\",\n        \"endTime\": \"cillum quis Duis\",\n        \"maxStay\": 23798250\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 8,\n      \"specialRestrictionTypeId\": 65406033,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"offici\",\n        \"endTime\": \"dolore pariatur consequat\",\n        \"maxStay\": 85518633\n       },\n       {\n        \"startTime\": \"cupidatat\",\n        \"endTime\": \"sunt non cupidatat\",\n        \"maxStay\": -40575271\n       }\n      ]\n     }\n    ],\n    \"distance\": -38265816.87110191\n   },\n   {\n    \"entityId\": \"do consequat adipisicing\",\n    \"entityETag\": \"mollit ipsum\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 2,\n      \"specialRestrictionTypeId\": 68880305,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ut consectetur\",\n        \"endTime\": \"aliquip minim velit esse\",\n        \"maxStay\": -70820562\n       },\n       {\n        \"startTime\": \"dolor veniam in\",\n        \"endTime\": \"Excepteur eu eiusmod dolor\",\n        \"maxStay\": 87309418\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 11,\n      \"specialRestrictionTypeId\": -94290425,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"labore dolore dolore dolor\",\n        \"endTime\": \"voluptate enim\",\n        \"maxStay\": -1257772\n       },\n       {\n        \"startTime\": \"mollit consectetur officia\",\n        \"endTime\": \"ad quis mollit pariatur\",\n        \"maxStay\": 58489785\n       }\n      ]\n     }\n    ],\n    \"distance\": 67331194.86337346\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"irure\",\n   \"entityETag\": \"nulla\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -65108422,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"pariatur ullamco mollit i\",\n       \"endTime\": \"voluptate\",\n       \"maxStay\": -18780345\n      },\n      {\n       \"startTime\": \"pariatur do dolor ea reprehenderit\",\n       \"endTime\": \"reprehenderit Duis\",\n       \"maxStay\": -76564729\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 1,\n     \"specialRestrictionTypeId\": -46400024,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"dolor deserunt dolore\",\n       \"endTime\": \"dolore fugiat nisi\",\n       \"maxStay\": 63419818\n      },\n      {\n       \"startTime\": \"anim dolore dolore\",\n       \"endTime\": \"labore cupidatat adipisicing amet\",\n       \"maxStay\": -48584274\n      }\n     ]\n    }\n   ],\n   \"distance\": -95701079.96823446\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "afc47d71-fcd3-4cdf-9d08-3c27929f5cf5",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui\",\n            \"properties\": {\n                \"name\": \"quis sunt proident\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c93c2318-c785-40da-a850-f4247ec2fe9d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui\",\n            \"properties\": {\n                \"name\": \"quis sunt proident\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6adaa017-d25b-4006-a8dd-7ad6761c3178",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui\",\n            \"properties\": {\n                \"name\": \"quis sunt proident\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "fc8d8c0d-d6da-4fbf-875e-dd54d1da980a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui\",\n            \"properties\": {\n                \"name\": \"quis sunt proident\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "08ce74c3-42d7-4537-bfa0-0ddf848e86a2",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        14,\n        3\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "ad9ca724-b27e-458f-8ec8-b9d474eccc42",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        5\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud adipisi\",\n      \"city\": \"id fugiat\",\n      \"country\": \"adipisicing sit dolore Duis amet\",\n      \"postcode\": \"esse Excepteur\"\n     },\n     \"locationCode\": \"eiusmod ipsum ad consectetur\",\n     \"totalCapacity\": 8165076,\n     \"zoneId\": \"enim\",\n     \"authorityId\": \"ad dolore Ut\",\n     \"features\": {\n      \"type\": \"dolor ipsum officia laboris id\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"qui cillum adipisicing laborum\",\n           \"crs\": {\n            \"type\": \"in\",\n            \"properties\": {\n             \"name\": \"et deserunt dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"ad Ut\",\n           \"crs\": {\n            \"type\": \"sit voluptat\",\n            \"properties\": {\n             \"name\": \"veniam cillum qui eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"esse labore Lorem\",\n         \"crs\": {\n          \"type\": \"irure\",\n          \"properties\": {\n           \"name\": \"qui qu\"\n          }\n         }\n        },\n        \"type\": \"labore sit eu\",\n        \"id\": \"laboris esse ullamco occaecat amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ipsum\",\n           \"crs\": {\n            \"type\": \"ut amet ullamco nulla\",\n            \"properties\": {\n             \"name\": \"exercitation in\"\n            }\n           }\n          },\n          {\n           \"type\": \"mollit in adipisicing\",\n           \"crs\": {\n            \"type\": \"consectetur ipsum laborum fugiat\",\n            \"properties\": {\n             \"name\": \"consectetur aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"officia pariatur\",\n         \"crs\": {\n          \"type\": \"dolor adipisicing exercitation\",\n          \"properties\": {\n           \"name\": \"culpa mollit in\"\n          }\n         }\n        },\n        \"type\": \"laboris in velit ad aute\",\n        \"id\": \"quis ad amet\"\n       }\n      ],\n      \"properties\": \"qui ut in minim\"\n     },\n     \"paymentMethodIds\": [\n      63743281,\n      -21184093\n     ],\n     \"entityId\": \"exercitation Lorem\",\n     \"entityType\": 2,\n     \"name\": \"et mollit nulla ex\",\n     \"eTag\": \"officia do sint laboris\",\n     \"operator\": {\n      \"telephone\": \"ad ipsum nostrud nulla ut\",\n      \"website\": \"labore velit cillum\",\n      \"name\": \"ea officia laborum\",\n      \"cardPaymentsExternalUrl\": \"ipsum esse non dolor\",\n      \"paymentsTelephone\": \"ullamco minim proident\"\n     },\n     \"onStreetParkingTypeIds\": [\n      18,\n      15\n     ],\n     \"facilityTypeIds\": [\n      39274876,\n      23317432\n     ]\n    },\n    \"distance\": -37073860.65527416\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"pariatu\",\n      \"city\": \"eiusmod magna\",\n      \"country\": \"aute qui\",\n      \"postcode\": \"ut consectetur\"\n     },\n     \"locationCode\": \"fugiat consectetur\",\n     \"totalCapacity\": -54705049,\n     \"zoneId\": \"laborum dolore\",\n     \"authorityId\": \"cupidatat ut sint Ut\",\n     \"features\": {\n      \"type\": \"amet esse aliqua\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt Ut id\",\n           \"crs\": {\n            \"type\": \"pariatur sint\",\n            \"properties\": {\n             \"name\": \"anim ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"ea laborum\",\n           \"crs\": {\n            \"type\": \"ex cillum do Duis\",\n            \"properties\": {\n             \"name\": \"aute proident\"\n            }\n           }\n          }\n         ],\n         \"type\": \"quis in\",\n         \"crs\": {\n          \"type\": \"veniam exercitation\",\n          \"properties\": {\n           \"name\": \"enim dolore\"\n          }\n         }\n        },\n        \"type\": \"velit anim consectetur\",\n        \"id\": \"officia\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"eu aliqua aliquip adipisicing\",\n           \"crs\": {\n            \"type\": \"eu nulla tempor amet non\",\n            \"properties\": {\n             \"name\": \"nisi Excepteur adipisicing\"\n            }\n           }\n          },\n          {\n           \"type\": \"nulla ipsum\",\n           \"crs\": {\n            \"type\": \"qui irure culpa enim\",\n            \"properties\": {\n             \"name\": \"et laborum officia minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Excepteur aliquip\",\n         \"crs\": {\n          \"type\": \"consectetur\",\n          \"properties\": {\n           \"name\": \"tempor occaecat ut\"\n          }\n         }\n        },\n        \"type\": \"ut in\",\n        \"id\": \"Lorem\"\n       }\n      ],\n      \"properties\": \"magna aliquip laboris\"\n     },\n     \"paymentMethodIds\": [\n      -36076391,\n      -76342079\n     ],\n     \"entityId\": \"enim dolor commodo\",\n     \"entityType\": 2,\n     \"name\": \"cupidatat aute\",\n     \"eTag\": \"veniam\",\n     \"operator\": {\n      \"telephone\": \"consequat dolor\",\n      \"website\": \"id\",\n      \"name\": \"nulla pariatur laboris\",\n      \"cardPaymentsExternalUrl\": \"proident exercitation culpa\",\n      \"paymentsTelephone\": \"velit eu esse\"\n     },\n     \"onStreetParkingTypeIds\": [\n      2,\n      17\n     ],\n     \"facilityTypeIds\": [\n      -90838593,\n      -90088800\n     ]\n    },\n    \"distance\": 71193306.65158045\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0fbfe633-45d9-4fe2-9265-ed13fed60957",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        5\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d842c353-4308-4b8d-915a-ec98c465c75b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        5\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bbb2216e-be9a-48f5-9936-7a84b36d8324",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        5\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f6416816-b66f-42d0-880d-af58f1a43aed",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        5\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e4d88552-bc25-43d8-a572-5c32d1d74346",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"sed exercitation\",\n            \"properties\": {\n                \"name\": \"eiusmod exercitation esse voluptate\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        8\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "c3d0137a-5a6c-4f00-a116-0dc40dac3e2c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non cupi\",\n            \"properties\": {\n                \"name\": \"sint ut Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        6\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"nostrud adipisi\",\n      \"city\": \"id fugiat\",\n      \"country\": \"adipisicing sit dolore Duis amet\",\n      \"postcode\": \"esse Excepteur\"\n     },\n     \"locationCode\": \"eiusmod ipsum ad consectetur\",\n     \"totalCapacity\": 8165076,\n     \"zoneId\": \"enim\",\n     \"authorityId\": \"ad dolore Ut\",\n     \"features\": {\n      \"type\": \"dolor ipsum officia laboris id\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"qui cillum adipisicing laborum\",\n           \"crs\": {\n            \"type\": \"in\",\n            \"properties\": {\n             \"name\": \"et deserunt dolor\"\n            }\n           }\n          },\n          {\n           \"type\": \"ad Ut\",\n           \"crs\": {\n            \"type\": \"sit voluptat\",\n            \"properties\": {\n             \"name\": \"veniam cillum qui eiusmod\"\n            }\n           }\n          }\n         ],\n         \"type\": \"esse labore Lorem\",\n         \"crs\": {\n          \"type\": \"irure\",\n          \"properties\": {\n           \"name\": \"qui qu\"\n          }\n         }\n        },\n        \"type\": \"labore sit eu\",\n        \"id\": \"laboris esse ullamco occaecat amet\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ipsum\",\n           \"crs\": {\n            \"type\": \"ut amet ullamco nulla\",\n            \"properties\": {\n             \"name\": \"exercitation in\"\n            }\n           }\n          },\n          {\n           \"type\": \"mollit in adipisicing\",\n           \"crs\": {\n            \"type\": \"consectetur ipsum laborum fugiat\",\n            \"properties\": {\n             \"name\": \"consectetur aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"officia pariatur\",\n         \"crs\": {\n          \"type\": \"dolor adipisicing exercitation\",\n          \"properties\": {\n           \"name\": \"culpa mollit in\"\n          }\n         }\n        },\n        \"type\": \"laboris in velit ad aute\",\n        \"id\": \"quis ad amet\"\n       }\n      ],\n      \"properties\": \"qui ut in minim\"\n     },\n     \"paymentMethodIds\": [\n      63743281,\n      -21184093\n     ],\n     \"entityId\": \"exercitation Lorem\",\n     \"entityType\": 2,\n     \"name\": \"et mollit nulla ex\",\n     \"eTag\": \"officia do sint laboris\",\n     \"operator\": {\n      \"telephone\": \"ad ipsum nostrud nulla ut\",\n      \"website\": \"labore velit cillum\",\n      \"name\": \"ea officia laborum\",\n      \"cardPaymentsExternalUrl\": \"ipsum esse non dolor\",\n      \"paymentsTelephone\": \"ullamco minim proident\"\n     },\n     \"onStreetParkingTypeIds\": [\n      18,\n      15\n     ],\n     \"facilityTypeIds\": [\n      39274876,\n      23317432\n     ]\n    },\n    \"distance\": -37073860.65527416\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"pariatu\",\n      \"city\": \"eiusmod magna\",\n      \"country\": \"aute qui\",\n      \"postcode\": \"ut consectetur\"\n     },\n     \"locationCode\": \"fugiat consectetur\",\n     \"totalCapacity\": -54705049,\n     \"zoneId\": \"laborum dolore\",\n     \"authorityId\": \"cupidatat ut sint Ut\",\n     \"features\": {\n      \"type\": \"amet esse aliqua\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"sunt Ut id\",\n           \"crs\": {\n            \"type\": \"pariatur sint\",\n            \"properties\": {\n             \"name\": \"anim ea\"\n            }\n           }\n          },\n          {\n           \"type\": \"ea laborum\",\n           \"crs\": {\n            \"type\": \"ex cillum do Duis\",\n            \"properties\": {\n             \"name\": \"aute proident\"\n            }\n           }\n          }\n         ],\n         \"type\": \"quis in\",\n         \"crs\": {\n          \"type\": \"veniam exercitation\",\n          \"properties\": {\n           \"name\": \"enim dolore\"\n          }\n         }\n        },\n        \"type\": \"velit anim consectetur\",\n        \"id\": \"officia\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"eu aliqua aliquip adipisicing\",\n           \"crs\": {\n            \"type\": \"eu nulla tempor amet non\",\n            \"properties\": {\n             \"name\": \"nisi Excepteur adipisicing\"\n            }\n           }\n          },\n          {\n           \"type\": \"nulla ipsum\",\n           \"crs\": {\n            \"type\": \"qui irure culpa enim\",\n            \"properties\": {\n             \"name\": \"et laborum officia minim\"\n            }\n           }\n          }\n         ],\n         \"type\": \"Excepteur aliquip\",\n         \"crs\": {\n          \"type\": \"consectetur\",\n          \"properties\": {\n           \"name\": \"tempor occaecat ut\"\n          }\n         }\n        },\n        \"type\": \"ut in\",\n        \"id\": \"Lorem\"\n       }\n      ],\n      \"properties\": \"magna aliquip laboris\"\n     },\n     \"paymentMethodIds\": [\n      -36076391,\n      -76342079\n     ],\n     \"entityId\": \"enim dolor commodo\",\n     \"entityType\": 2,\n     \"name\": \"cupidatat aute\",\n     \"eTag\": \"veniam\",\n     \"operator\": {\n      \"telephone\": \"consequat dolor\",\n      \"website\": \"id\",\n      \"name\": \"nulla pariatur laboris\",\n      \"cardPaymentsExternalUrl\": \"proident exercitation culpa\",\n      \"paymentsTelephone\": \"velit eu esse\"\n     },\n     \"onStreetParkingTypeIds\": [\n      2,\n      17\n     ],\n     \"facilityTypeIds\": [\n      -90838593,\n      -90088800\n     ]\n    },\n    \"distance\": 71193306.65158045\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8286befb-5070-4895-a576-44ba2ed8a5e2",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non cupi\",\n            \"properties\": {\n                \"name\": \"sint ut Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        6\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0a7af301-b971-4322-aa29-d57b097c40ca",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non cupi\",\n            \"properties\": {\n                \"name\": \"sint ut Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        6\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "219628fe-ca8a-4e18-8925-214347b524ad",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non cupi\",\n            \"properties\": {\n                \"name\": \"sint ut Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        6\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "065ea8fb-5b33-4264-acbb-84276b8c522b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"non cupi\",\n            \"properties\": {\n                \"name\": \"sint ut Duis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        6\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "eb4ed665-145a-4cb1-8c7f-9ea996f79eab",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "aa0547f6-7ce1-4f04-863b-d64cd4f84344",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"sed exercitation in\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"laboris ad\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -34041415.67111294,\n      \"currency\": \"aliquip\",\n      \"minCost\": 42456365.5303559,\n      \"minStayUntil\": \"consequat\",\n      \"canExtendUntil\": \"sed veniam pariatur\",\n      \"pricedUntil\": \"est exercitation\",\n      \"noReturnUntil\": \"labore dolor nisi\",\n      \"freeUntil\": \"reprehend\",\n      \"becomesFreeAt\": \"laboris ex aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -66699881,\n       86536880\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"non ex in sit ea\",\n      \"surcharge\": {\n       \"value\": -87973737.4415206,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -43690589\n       }\n      }\n     },\n     {\n      \"cost\": -63884479.226780266,\n      \"currency\": \"nulla sint sit\",\n      \"minCost\": -3899836.3862415105,\n      \"minStayUntil\": \"consequat fugiat laboris\",\n      \"canExtendUntil\": \"officia ut\",\n      \"pricedUntil\": \"in sit\",\n      \"noReturnUntil\": \"quis aliquip\",\n      \"freeUntil\": \"adipisicing consectetur\",\n      \"becomesFreeAt\": \"cillum\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       30233620,\n       57852108\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"enim veniam mollit\",\n      \"surcharge\": {\n       \"value\": -86404822.65435994,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -28484513\n       }\n      }\n     }\n    ],\n    \"distance\": 13910480.249544084,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -30990955,\n      -73039478\n     ]\n    },\n    \"entityETag\": \"Ut sit\"\n   },\n   {\n    \"entityId\": \"voluptate culpa\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -33696444.86209511,\n      \"currency\": \"in reprehenderit cillum ad commodo\",\n      \"minCost\": 9814558.979418963,\n      \"minStayUntil\": \"adipisicing veniam consectetur\",\n      \"canExtendUntil\": \"ex\",\n      \"pricedUntil\": \"labore sed\",\n      \"noReturnUntil\": \"labo\",\n      \"freeUntil\": \"non occaecat reprehenderit\",\n      \"becomesFreeAt\": \"nulla cillum fugiat\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       66288152,\n       -57902743\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris cillum sit Lorem reprehenderit\",\n      \"surcharge\": {\n       \"value\": -93671090.37641664,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 20661693\n       }\n      }\n     },\n     {\n      \"cost\": -89861935.2362772,\n      \"currency\": \"sunt amet Duis cillum dolore\",\n      \"minCost\": -12241827.558937058,\n      \"minStayUntil\": \"aliqua aliquip cillum\",\n      \"canExtendUntil\": \"amet\",\n      \"pricedUntil\": \"ea proident\",\n      \"noReturnUntil\": \"nostrud laboris Excepteur su\",\n      \"freeUntil\": \"deserunt sit esse Lorem elit\",\n      \"becomesFreeAt\": \"Excepteur\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -63248381,\n       16744043\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt quis qui sed\",\n      \"surcharge\": {\n       \"value\": 87178604.19775888,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 99507532\n       }\n      }\n     }\n    ],\n    \"distance\": -92040970.9099074,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      93524932,\n      89505149\n     ]\n    },\n    \"entityETag\": \"in ad adipisicing tempo\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "574f5917-fe96-4a0d-88c6-b4881fd54c9d",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "25bdbac7-0eab-43f9-a9db-2efb1bd21f2d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c191db43-0511-44d1-a5b3-281bedfce970",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b9303e72-8fd1-4d83-aee1-3384e86dedab",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f8dc8339-9c37-474f-88cd-2155e05af2ac",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing ea ad\",\n            \"properties\": {\n                \"name\": \"culpa proident enim minim\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "cfc78ed6-3e4b-411d-a799-0702ea700d11",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in incididunt tempor laboris\",\n            \"properties\": {\n                \"name\": \"aliqua id sed quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"sed exercitation in\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"laboris ad\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -34041415.67111294,\n      \"currency\": \"aliquip\",\n      \"minCost\": 42456365.5303559,\n      \"minStayUntil\": \"consequat\",\n      \"canExtendUntil\": \"sed veniam pariatur\",\n      \"pricedUntil\": \"est exercitation\",\n      \"noReturnUntil\": \"labore dolor nisi\",\n      \"freeUntil\": \"reprehend\",\n      \"becomesFreeAt\": \"laboris ex aliqua\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -66699881,\n       86536880\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"non ex in sit ea\",\n      \"surcharge\": {\n       \"value\": -87973737.4415206,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -43690589\n       }\n      }\n     },\n     {\n      \"cost\": -63884479.226780266,\n      \"currency\": \"nulla sint sit\",\n      \"minCost\": -3899836.3862415105,\n      \"minStayUntil\": \"consequat fugiat laboris\",\n      \"canExtendUntil\": \"officia ut\",\n      \"pricedUntil\": \"in sit\",\n      \"noReturnUntil\": \"quis aliquip\",\n      \"freeUntil\": \"adipisicing consectetur\",\n      \"becomesFreeAt\": \"cillum\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       30233620,\n       57852108\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"enim veniam mollit\",\n      \"surcharge\": {\n       \"value\": -86404822.65435994,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -28484513\n       }\n      }\n     }\n    ],\n    \"distance\": 13910480.249544084,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -30990955,\n      -73039478\n     ]\n    },\n    \"entityETag\": \"Ut sit\"\n   },\n   {\n    \"entityId\": \"voluptate culpa\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -33696444.86209511,\n      \"currency\": \"in reprehenderit cillum ad commodo\",\n      \"minCost\": 9814558.979418963,\n      \"minStayUntil\": \"adipisicing veniam consectetur\",\n      \"canExtendUntil\": \"ex\",\n      \"pricedUntil\": \"labore sed\",\n      \"noReturnUntil\": \"labo\",\n      \"freeUntil\": \"non occaecat reprehenderit\",\n      \"becomesFreeAt\": \"nulla cillum fugiat\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       66288152,\n       -57902743\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"laboris cillum sit Lorem reprehenderit\",\n      \"surcharge\": {\n       \"value\": -93671090.37641664,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 20661693\n       }\n      }\n     },\n     {\n      \"cost\": -89861935.2362772,\n      \"currency\": \"sunt amet Duis cillum dolore\",\n      \"minCost\": -12241827.558937058,\n      \"minStayUntil\": \"aliqua aliquip cillum\",\n      \"canExtendUntil\": \"amet\",\n      \"pricedUntil\": \"ea proident\",\n      \"noReturnUntil\": \"nostrud laboris Excepteur su\",\n      \"freeUntil\": \"deserunt sit esse Lorem elit\",\n      \"becomesFreeAt\": \"Excepteur\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -63248381,\n       16744043\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sunt quis qui sed\",\n      \"surcharge\": {\n       \"value\": 87178604.19775888,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 99507532\n       }\n      }\n     }\n    ],\n    \"distance\": -92040970.9099074,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      93524932,\n      89505149\n     ]\n    },\n    \"entityETag\": \"in ad adipisicing tempo\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e4415300-b881-4d7c-b7ca-296d71b04961",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in incididunt tempor laboris\",\n            \"properties\": {\n                \"name\": \"aliqua id sed quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4b111be2-8e80-4d83-86af-3bc06b596457",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in incididunt tempor laboris\",\n            \"properties\": {\n                \"name\": \"aliqua id sed quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9c318ed9-b125-44a6-a7e1-0788bfb79e1c",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in incididunt tempor laboris\",\n            \"properties\": {\n                \"name\": \"aliqua id sed quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "3a045950-c9f7-4dbe-be0f-7a183819b5b3",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in incididunt tempor laboris\",\n            \"properties\": {\n                \"name\": \"aliqua id sed quis\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1a65be73-98ad-44ff-b137-ed18552086f9",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"reprehenderit ut veniam ad qui\",\n            \"properties\": {\n                \"name\": \"adipisi\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "2487d5aa-d814-45c5-86d3-088609859501",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nisi irure ad\",\n            \"properties\": {\n                \"name\": \"ex consectetur aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"ex proident\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"adipisicing cupid\",\n     \"crs\": {\n      \"type\": \"elit dolor in\",\n      \"properties\": {\n       \"name\": \"velit elit nostrud ut\"\n      }\n     }\n    },\n    \"type\": \"eiusmod sint\",\n    \"id\": \"Ut nisi cillum labore eu\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"nulla dolore minim\",\n     \"crs\": {\n      \"type\": \"exercitation aliqua amet deserunt\",\n      \"properties\": {\n       \"name\": \"exercitation commodo aliquip eu\"\n      }\n     }\n    },\n    \"type\": \"ad nulla\",\n    \"id\": \"sit ad\"\n   }\n  ],\n  \"properties\": \"velit ad eu laborum\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d3dee77c-7446-413f-81b6-8ca39c6775c3",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nisi irure ad\",\n            \"properties\": {\n                \"name\": \"ex consectetur aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "46cfc283-a779-43f9-a7bb-87e262d9afe6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nisi irure ad\",\n            \"properties\": {\n                \"name\": \"ex consectetur aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "11bfa10e-89fd-4327-b94a-ecaa316de178",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nisi irure ad\",\n            \"properties\": {\n                \"name\": \"ex consectetur aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "218812a6-1159-496e-aaef-d26eba9a5da7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nisi irure ad\",\n            \"properties\": {\n                \"name\": \"ex consectetur aliqua\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "70e92285-dd44-4c0a-afd9-a327892f86d4",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"eiusmod ex ad incididunt Duis\",\n            \"properties\": {\n                \"name\": \"sit\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        5,\n        2\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2875d018-45aa-47e2-b4a2-ef4f711a6644",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem do consectetur\",\n            \"properties\": {\n                \"name\": \"in sint veniam labore\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        8,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"in\",\n    \"entityETag\": \"quis proident mollit consequat\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 13,\n      \"specialRestrictionTypeId\": -4571522,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"aute amet Lorem ut\",\n        \"endTime\": \"non ex\",\n        \"maxStay\": 42255728\n       },\n       {\n        \"startTime\": \"sunt esse\",\n        \"endTime\": \"cillum quis Duis\",\n        \"maxStay\": 23798250\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 8,\n      \"specialRestrictionTypeId\": 65406033,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"offici\",\n        \"endTime\": \"dolore pariatur consequat\",\n        \"maxStay\": 85518633\n       },\n       {\n        \"startTime\": \"cupidatat\",\n        \"endTime\": \"sunt non cupidatat\",\n        \"maxStay\": -40575271\n       }\n      ]\n     }\n    ],\n    \"distance\": -38265816.87110191\n   },\n   {\n    \"entityId\": \"do consequat adipisicing\",\n    \"entityETag\": \"mollit ipsum\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 2,\n      \"specialRestrictionTypeId\": 68880305,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ut consectetur\",\n        \"endTime\": \"aliquip minim velit esse\",\n        \"maxStay\": -70820562\n       },\n       {\n        \"startTime\": \"dolor veniam in\",\n        \"endTime\": \"Excepteur eu eiusmod dolor\",\n        \"maxStay\": 87309418\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 11,\n      \"specialRestrictionTypeId\": -94290425,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"labore dolore dolore dolor\",\n        \"endTime\": \"voluptate enim\",\n        \"maxStay\": -1257772\n       },\n       {\n        \"startTime\": \"mollit consectetur officia\",\n        \"endTime\": \"ad quis mollit pariatur\",\n        \"maxStay\": 58489785\n       }\n      ]\n     }\n    ],\n    \"distance\": 67331194.86337346\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"irure\",\n   \"entityETag\": \"nulla\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 17,\n     \"specialRestrictionTypeId\": -65108422,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"pariatur ullamco mollit i\",\n       \"endTime\": \"voluptate\",\n       \"maxStay\": -18780345\n      },\n      {\n       \"startTime\": \"pariatur do dolor ea reprehenderit\",\n       \"endTime\": \"reprehenderit Duis\",\n       \"maxStay\": -76564729\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 1,\n     \"specialRestrictionTypeId\": -46400024,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"dolor deserunt dolore\",\n       \"endTime\": \"dolore fugiat nisi\",\n       \"maxStay\": 63419818\n      },\n      {\n       \"startTime\": \"anim dolore dolore\",\n       \"endTime\": \"labore cupidatat adipisicing amet\",\n       \"maxStay\": -48584274\n      }\n     ]\n    }\n   ],\n   \"distance\": -95701079.96823446\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9a0bcc96-636f-4e38-96c3-caae633d2ac2",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem do consectetur\",\n            \"properties\": {\n                \"name\": \"in sint veniam labore\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        8,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"velit cupidatat\",\n \"errors\": [\n  {\n   \"property\": \"est Ut irure deserunt\",\n   \"code\": \"veniam quis Ut\",\n   \"message\": \"elit irure nisi\"\n  },\n  {\n   \"property\": \"mollit incididunt\",\n   \"code\": \"in veniam ali\",\n   \"message\": \"in commodo\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b78bee88-2e6c-432a-af22-60c0f8673b46",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem do consectetur\",\n            \"properties\": {\n                \"name\": \"in sint veniam labore\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        8,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8189d82d-8fa1-4296-aa38-dd7a3e962160",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem do consectetur\",\n            \"properties\": {\n                \"name\": \"in sint veniam labore\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        8,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "076e5775-1182-4b2d-a91e-a68676fb63d8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"Lorem do consectetur\",\n            \"properties\": {\n                \"name\": \"in sint veniam labore\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        8,\n        17\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c4fda917-1420-41e1-9546-7e8c59609aa9",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "d0ec149e-ce1f-4f39-bb55-99332f1e67a4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "807ef71f-ff9d-4b84-bb6f-42a99a4b2690",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1f4fe1c6-e359-4b27-a7d6-d815f5be94db",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9e94e361-7658-4bb4-86d2-88bcbf2fb23b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "23ffecd0-3640-471c-a98e-e3be1a8962ca",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
