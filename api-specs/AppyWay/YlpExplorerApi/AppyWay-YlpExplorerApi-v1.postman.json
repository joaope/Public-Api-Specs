{
  "item": [
    {
      "id": "559aa8d1-06c3-4938-b96b-fd3ea65e4352",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f4bbe76f-3289-424b-80f3-6472b8033769",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"amet ipsum\"\n   },\n   {\n    \"message\": \"nulla veniam Duis\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"ad\",\n    \"cardPaymentsExternalUrl\": \"Ut\",\n    \"paymentsTelephone\": \"culpa\"\n   },\n   {\n    \"name\": \"Lorem quis laborum voluptate occaecat\",\n    \"cardPaymentsExternalUrl\": \"occaecat proident elit\",\n    \"paymentsTelephone\": \"do commodo aliqua Lor\"\n   }\n  ],\n  \"entityType\": 1,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"qui occaecat\",\n     \"crs\": {\n      \"type\": \"exercitation et officia\",\n      \"properties\": {\n       \"name\": \"labore in\"\n      }\n     }\n    },\n    {\n     \"type\": \"commodo est nostrud sunt occaecat\",\n     \"crs\": {\n      \"type\": \"sed velit proident in\",\n      \"properties\": {\n       \"name\": \"aute ullamco\"\n      }\n     }\n    }\n   ],\n   \"type\": \"nostrud ea\",\n   \"crs\": {\n    \"type\": \"pariatur aute enim\",\n    \"properties\": {\n     \"name\": \"sit in\"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"exercitation minim qui laboris\",\n  \"name\": \"cupidatat aute mollit eiusmod Duis\",\n  \"eTag\": \"in\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "97c0fc65-69f5-4b22-99d2-449aa13fdad4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ac449963-42d6-4cf9-bdfd-12b13115ac77",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5f133b9a-3828-4f0e-8c2d-b52378723150",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "81b447ca-4509-4923-a81c-4fbb411b2414",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5c29ae0e-51bc-49fd-952f-3098da6af232",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "5f1871e2-5126-4115-987f-f007d10f23aa",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"ut id in in\",\n     \"city\": \"Du\",\n     \"country\": \"sint qui nulla\",\n     \"postcode\": \"amet sed sint\"\n    },\n    \"locationCode\": \"culpa\",\n    \"totalCapacity\": -87409393,\n    \"zoneId\": \"proident nisi anim\",\n    \"authorityId\": \"elit tempor ex incididunt\",\n    \"features\": {\n     \"type\": \"irure\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"voluptate id officia ut enim\",\n          \"crs\": {\n           \"type\": \"reprehenderit\",\n           \"properties\": {\n            \"name\": \"exercitation laboris amet ea\"\n           }\n          }\n         },\n         {\n          \"type\": \"id dolor do aliquip E\",\n          \"crs\": {\n           \"type\": \"fugiat ipsum Duis\",\n           \"properties\": {\n            \"name\": \"tempor sint\"\n           }\n          }\n         }\n        ],\n        \"type\": \"do\",\n        \"crs\": {\n         \"type\": \"tempor\",\n         \"properties\": {\n          \"name\": \"voluptate in magna\"\n         }\n        }\n       },\n       \"type\": \"do adipisicing\",\n       \"id\": \"qui ullamco reprehenderit Excepteur voluptate\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"\",\n          \"crs\": {\n           \"type\": \"dolor tempor culpa aliqua nostrud\",\n           \"properties\": {\n            \"name\": \"non reprehenderit Excepteur fugiat\"\n           }\n          }\n         },\n         {\n          \"type\": \"occaeca\",\n          \"crs\": {\n           \"type\": \"et Duis\",\n           \"properties\": {\n            \"name\": \"dolore cu\"\n           }\n          }\n         }\n        ],\n        \"type\": \"pariatur nisi dolore dolor\",\n        \"crs\": {\n         \"type\": \"ad pariatur Ut\",\n         \"properties\": {\n          \"name\": \"Lorem consequat incididunt aliqua\"\n         }\n        }\n       },\n       \"type\": \"veniam cillum labor\",\n       \"id\": \"deserunt ipsum commodo nulla\"\n      }\n     ],\n     \"properties\": \"aliqua dolor in\"\n    },\n    \"paymentMethodIds\": [\n     -23953229,\n     -98728414\n    ],\n    \"entityId\": \"Lorem Duis labore reprehenderit\",\n    \"entityType\": 2,\n    \"name\": \"dolore aute esse Duis\",\n    \"eTag\": \"minim reprehenderit eiusmod cupidatat aliqua\",\n    \"operator\": {\n     \"telephone\": \"in eu est adipisicing ut\",\n     \"website\": \"dolore mollit cupidatat cillum non\",\n     \"name\": \"ani\",\n     \"cardPaymentsExternalUrl\": \"ut aliquip ut\",\n     \"paymentsTelephone\": \"consectetur irure Lorem\"\n    },\n    \"onStreetParkingTypeIds\": [\n     1,\n     17\n    ],\n    \"facilityTypeIds\": [\n     10608563,\n     71546250\n    ]\n   },\n   {\n    \"address\": {\n     \"street\": \"tempor aliqua\",\n     \"city\": \"ex in cillum culpa\",\n     \"country\": \"dol\",\n     \"postcode\": \"laboris\"\n    },\n    \"locationCode\": \"laboris\",\n    \"totalCapacity\": -76541110,\n    \"zoneId\": \"aute officia magna laborum\",\n    \"authorityId\": \"incididunt Duis elit sed\",\n    \"features\": {\n     \"type\": \"qui do ea\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"labore ut\",\n          \"crs\": {\n           \"type\": \"consequat amet magna\",\n           \"properties\": {\n            \"name\": \"Lorem\"\n           }\n          }\n         },\n         {\n          \"type\": \"do amet nulla\",\n          \"crs\": {\n           \"type\": \"commodo irure amet eu\",\n           \"properties\": {\n            \"name\": \"amet eu in\"\n           }\n          }\n         }\n        ],\n        \"type\": \"ipsu\",\n        \"crs\": {\n         \"type\": \"eiusmod tempor in nostrud pariatur\",\n         \"properties\": {\n          \"name\": \"dolor in tempor\"\n         }\n        }\n       },\n       \"type\": \"proide\",\n       \"id\": \"culpa qui\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"Excepteur veniam ipsum\",\n          \"crs\": {\n           \"type\": \"ullamco consectetur voluptate dolor et\",\n           \"properties\": {\n            \"name\": \"ullamco ad reprehenderit Duis\"\n           }\n          }\n         },\n         {\n          \"type\": \"irure dolor ullamco magna\",\n          \"crs\": {\n           \"type\": \"laborum velit\",\n           \"properties\": {\n            \"name\": \"irure Ut mollit\"\n           }\n          }\n         }\n        ],\n        \"type\": \"\",\n        \"crs\": {\n         \"type\": \"Lorem culpa amet exercitation\",\n         \"properties\": {\n          \"name\": \"reprehenderit\"\n         }\n        }\n       },\n       \"type\": \"irure Duis\",\n       \"id\": \"ad consequat c\"\n      }\n     ],\n     \"properties\": \"commodo est adipisicing cupidatat\"\n    },\n    \"paymentMethodIds\": [\n     18165779,\n     -6687860\n    ],\n    \"entityId\": \"E\",\n    \"entityType\": 4,\n    \"name\": \"enim et Duis adipisicing\",\n    \"eTag\": \"sed Ut sint elit\",\n    \"operator\": {\n     \"telephone\": \"co\",\n     \"website\": \"nulla cupidatat dolore sint\",\n     \"name\": \"tempor ut\",\n     \"cardPaymentsExternalUrl\": \"deserunt velit officia ullamco ipsum\",\n     \"paymentsTelephone\": \"mollit laboris ut minim et\"\n    },\n    \"onStreetParkingTypeIds\": [\n     17,\n     4\n    ],\n    \"facilityTypeIds\": [\n     -25043174,\n     -86822700\n    ]\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"commodo\",\n       \"crs\": {\n        \"type\": \"par\",\n        \"properties\": {\n         \"name\": \"nostrud elit ea incididunt\"\n        }\n       }\n      },\n      {\n       \"type\": \"quis consectetur proident do\",\n       \"crs\": {\n        \"type\": \"nisi laboris\",\n        \"properties\": {\n         \"name\": \"cillum eiusmod\"\n        }\n       }\n      }\n     ],\n     \"type\": \"cupidatat culpa\",\n     \"crs\": {\n      \"type\": \"enim labore proident in\",\n      \"properties\": {\n       \"name\": \"Ut minim nostrud commodo\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"deserunt Ut\"\n     },\n     {\n      \"message\": \"aliquip\"\n     }\n    ],\n    \"authorityId\": \"labore irure pariatur aute quis\",\n    \"zoneType\": 7,\n    \"entityType\": 4,\n    \"entityId\": \"Duis\",\n    \"name\": \"fugiat veniam mollit eiusmod\",\n    \"eTag\": \"aliqua ullamco sint\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ex cupidatat\",\n       \"crs\": {\n        \"type\": \"id laboris enim sed\",\n        \"properties\": {\n         \"name\": \"consectetur laborum\"\n        }\n       }\n      },\n      {\n       \"type\": \"n\",\n       \"crs\": {\n        \"type\": \"officia in minim Excepteur\",\n        \"properties\": {\n         \"name\": \"proident deserunt amet Lorem\"\n        }\n       }\n      }\n     ],\n     \"type\": \"adipisicing magna ut do\",\n     \"crs\": {\n      \"type\": \"Ut minim\",\n      \"properties\": {\n       \"name\": \"ex cillum dolor in qui\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"Lorem non dolor in\"\n     },\n     {\n      \"message\": \"occaecat\"\n     }\n    ],\n    \"authorityId\": \"consectetur Ut dolore nostrud\",\n    \"zoneType\": 9,\n    \"entityType\": 3,\n    \"entityId\": \"dolore amet et laborum\",\n    \"name\": \"Lorem ad ea\",\n    \"eTag\": \"irure veniam culpa\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"aliquip nostrud\"\n     },\n     {\n      \"message\": \"velit cupidatat proident ut sint\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"dolor dolore Lorem non\",\n      \"cardPaymentsExternalUrl\": \"dolor pariatur\",\n      \"paymentsTelephone\": \"veniam in et\"\n     },\n     {\n      \"name\": \"Duis et\",\n      \"cardPaymentsExternalUrl\": \"in ea sit pariatur\",\n      \"paymentsTelephone\": \"magna ea ex mollit qui\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"sunt culpa in\",\n       \"crs\": {\n        \"type\": \"e\",\n        \"properties\": {\n         \"name\": \"dolor aliqua\"\n        }\n       }\n      },\n      {\n       \"type\": \"veniam officia\",\n       \"crs\": {\n        \"type\": \"aute e\",\n        \"properties\": {\n         \"name\": \"in\"\n        }\n       }\n      }\n     ],\n     \"type\": \"sint veniam qui esse\",\n     \"crs\": {\n      \"type\": \"ut\",\n      \"properties\": {\n       \"name\": \"elit commodo id\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"occaecat reprehenderit\",\n    \"name\": \"et \",\n    \"eTag\": \"in in officia Duis\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"exercitation qu\"\n     },\n     {\n      \"message\": \"amet laboris\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"reprehenderit Excepteur\",\n      \"cardPaymentsExternalUrl\": \"ea dolor et\",\n      \"paymentsTelephone\": \"culpa in\"\n     },\n     {\n      \"name\": \"consectetur anim ad sint\",\n      \"cardPaymentsExternalUrl\": \"laboris qui cillum\",\n      \"paymentsTelephone\": \"adipisicing consectetur cupidatat\"\n     }\n    ],\n    \"entityType\": 3,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"non exer\",\n       \"crs\": {\n        \"type\": \"minim\",\n        \"properties\": {\n         \"name\": \"nulla nisi occaecat elit nostrud\"\n        }\n       }\n      },\n      {\n       \"type\": \"Lorem proident in\",\n       \"crs\": {\n        \"type\": \"ea in ipsum quis\",\n        \"properties\": {\n         \"name\": \"ipsum magna ut dolore\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ut\",\n     \"crs\": {\n      \"type\": \"et enim dolore sint\",\n      \"properties\": {\n       \"name\": \"elit Lorem ut eu\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": false,\n    \"entityId\": \"cillum\",\n    \"name\": \"voluptate aute consequat\",\n    \"eTag\": \"a\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f63f6d5d-c5a2-4c23-b67b-a83368c429a0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"cillum\",\n \"errors\": [\n  {\n   \"property\": \"Duis do dolore Excepteur velit\",\n   \"code\": \"commodo culpa nulla\",\n   \"message\": \"dolor occaecat\"\n  },\n  {\n   \"property\": \"deserunt anim\",\n   \"code\": \"in irure dolor dolor\",\n   \"message\": \"labore culpa dolor eiusmod\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "49c47231-db54-4bea-864e-6ca55bfc02f3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "93edd151-2b7a-4efe-801f-adf6fda91919",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "170b0605-30d7-433e-bf2c-8a90f12f5038",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4010798e-d544-4895-a323-c2121facda62",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "cc756fa1-bbb6-43a2-b4ca-8dd8d3adafae",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"anim\",\n  \"entityType\": 1,\n  \"entityETag\": \"dolor voluptate elit\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     17225169,\n     24206854\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   },\n   {\n    \"paymentMethodIds\": [\n     -11389011,\n     33402910\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     },\n     {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:00:00\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fe62082a-be15-45d4-98e7-1c471697d373",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "5e0e5e51-f650-4e57-981d-aad059d973e5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "744e234e-1a6a-4344-8a0d-e4c67ce29ee3",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7ac4e865-02b4-4eb7-8c80-b08cfad96a98",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"2020-01-20T00:00:00\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "001c91f4-5875-45f1-bd4e-df1fab1f6456",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "6037b828-4b3c-430a-956d-dd1ace7e944e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"magna laboris\",\n   \"city\": \"laborum minim in\",\n   \"country\": \"velit enim\",\n   \"postcode\": \"tempor ut ad ullamco\"\n  },\n  \"locationCode\": \"ut ex in enim\",\n  \"totalCapacity\": 33184800,\n  \"zoneId\": \"velit ea sit Duis\",\n  \"authorityId\": \"aute ipsum magna id\",\n  \"features\": {\n   \"type\": \"in nisi veniam fugiat ex\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"es\",\n        \"crs\": {\n         \"type\": \"Excepteur aliquip magna laboris\",\n         \"properties\": {\n          \"name\": \"in ad reprehenderit\"\n         }\n        }\n       },\n       {\n        \"type\": \"reprehenderit dolor\",\n        \"crs\": {\n         \"type\": \"irure commodo dolore proident\",\n         \"properties\": {\n          \"name\": \"id nostr\"\n         }\n        }\n       }\n      ],\n      \"type\": \"in occaecat irure\",\n      \"crs\": {\n       \"type\": \"aute in ipsum id officia\",\n       \"properties\": {\n        \"name\": \"laboris ut proident\"\n       }\n      }\n     },\n     \"type\": \"quis aliquip do Ut\",\n     \"id\": \"pariatur consequat in voluptate\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"esse proident aliqua in ut\",\n        \"crs\": {\n         \"type\": \"Excepteur in anim nulla deserunt\",\n         \"properties\": {\n          \"name\": \"ullamco elit sint\"\n         }\n        }\n       },\n       {\n        \"type\": \"voluptate proident Duis ut\",\n        \"crs\": {\n         \"type\": \"reprehenderit\",\n         \"properties\": {\n          \"name\": \"mollit\"\n         }\n        }\n       }\n      ],\n      \"type\": \"ut laboris\",\n      \"crs\": {\n       \"type\": \"laboris\",\n       \"properties\": {\n        \"name\": \"Lorem non magna\"\n       }\n      }\n     },\n     \"type\": \"in occaecat commodo irure\",\n     \"id\": \"incididunt eiusmod ipsum veniam mollit\"\n    }\n   ],\n   \"properties\": \"aliquip ea fugiat mollit\"\n  },\n  \"paymentMethodIds\": [\n   26917456,\n   -35938704\n  ],\n  \"entityId\": \"dolo\",\n  \"entityType\": 4,\n  \"name\": \"sit mollit dolor commodo\",\n  \"eTag\": \"in ipsum Duis exerci\",\n  \"operator\": {\n   \"telephone\": \"reprehenderit cupidatat in\",\n   \"website\": \"labore\",\n   \"name\": \"proident ipsum a\",\n   \"cardPaymentsExternalUrl\": \"voluptate esse non\",\n   \"paymentsTelephone\": \"est et culpa dolor\"\n  },\n  \"onStreetParkingTypeIds\": [\n   1,\n   13\n  ],\n  \"facilityTypeIds\": [\n   -82594413,\n   52930694\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "131188fb-827c-4d3f-a59a-4b7dbba81c98",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "01f09c4a-9646-4b7b-b8f0-d57e3ce900c6",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "492b3508-a47f-4ac5-beeb-21a5df3e0112",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "20996151-fc0d-488c-a367-8a7a614dbb7b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a2c63971-4e7d-4d41-966f-a7241ea6ce13",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "11ebb50d-cd6f-4498-b855-46d12f97f3fe",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"anim exercitation\",\n  \"entityType\": 3,\n  \"quotes\": [\n   {\n    \"cost\": -15858671.929236531,\n    \"currency\": \"anim ut aliqua\",\n    \"minCost\": 60436594.28454688,\n    \"minStayUntil\": \"non eiusmod\",\n    \"canExtendUntil\": \"cupidatat\",\n    \"pricedUntil\": \"nulla aliqua\",\n    \"noReturnUntil\": \"enim aliquip in qui veniam\",\n    \"freeUntil\": \"id qui fugiat dolor Lorem\",\n    \"becomesFreeAt\": \"aute\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     10972633,\n     -32746966\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"non reprehenderit sunt eu\",\n    \"surcharge\": {\n     \"value\": -41747144.63609272,\n     \"valueType\": 2,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -12620451\n     }\n    }\n   },\n   {\n    \"cost\": -89181108.24040349,\n    \"currency\": \"deserunt in qui\",\n    \"minCost\": 60217516.972656906,\n    \"minStayUntil\": \"irure commodo consequat\",\n    \"canExtendUntil\": \"ut officia reprehenderit veniam sunt\",\n    \"pricedUntil\": \"amet in\",\n    \"noReturnUntil\": \"velit Excepteur do laboris\",\n    \"freeUntil\": \"ea exerc\",\n    \"becomesFreeAt\": \"ex\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     -47866866,\n     -17733194\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"id cupidatat laborum\",\n    \"surcharge\": {\n     \"value\": 37000262.94598824,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -32520607\n     }\n    }\n   }\n  ],\n  \"distance\": 42594623.3000395,\n  \"parkingAllowed\": 2,\n  \"noParkingReason\": {\n   \"reasonType\": 4,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    50337237,\n    -67482345\n   ]\n  },\n  \"entityETag\": \"proident\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "eee8aa8e-5a1d-48ee-8809-36b7486b405e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "de6ea449-48e5-4726-ac67-9f6ceecdd911",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "67862cc9-a721-4d63-af01-855ca6f8c7aa",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dcb97936-2a7d-4915-b562-4a81fbc858b5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "317d80e4-7dcc-4d30-bdac-2503b9dd7e1c",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "ed187f97-8fe6-431a-87bc-4a363a8f2eed",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"requestedStartTime\": \"Excepteur\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"irure laborum dolor\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 84930593.36354089,\n      \"currency\": \"aute occaecat esse laborum culpa\",\n      \"minCost\": 51748863.81389555,\n      \"minStayUntil\": \"ex\",\n      \"canExtendUntil\": \"laboris\",\n      \"pricedUntil\": \"irure tempor magna ipsum\",\n      \"noReturnUntil\": \"sunt reprehenderit nostrud\",\n      \"freeUntil\": \"incid\",\n      \"becomesFreeAt\": \"ullamco\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -4124638,\n       7832341\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"est officia id\",\n      \"surcharge\": {\n       \"value\": 36877490.26647356,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 97397235\n       }\n      }\n     },\n     {\n      \"cost\": 74023611.94025272,\n      \"currency\": \"pariatur \",\n      \"minCost\": -9099721.844391435,\n      \"minStayUntil\": \"nulla et\",\n      \"canExtendUntil\": \"irure occaecat\",\n      \"pricedUntil\": \"nostrud consequat qui\",\n      \"noReturnUntil\": \"ipsum velit ea\",\n      \"freeUntil\": \"nostrud Lorem ut cupidatat\",\n      \"becomesFreeAt\": \"sed Ut nostrud sunt\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       85188685,\n       96958217\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint \",\n      \"surcharge\": {\n       \"value\": -46404361.02844241,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -41129874\n       }\n      }\n     }\n    ],\n    \"distance\": 64422054.953855455,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      65861716,\n      -17238765\n     ]\n    },\n    \"entityETag\": \"irure officia cillum su\"\n   },\n   {\n    \"entityId\": \"eiusmod nisi Duis Ut\",\n    \"entityType\": 4,\n    \"quotes\": [\n     {\n      \"cost\": -91423762.72540691,\n      \"currency\": \"laboris in\",\n      \"minCost\": 13405716.974195942,\n      \"minStayUntil\": \"aute laboris culpa amet\",\n      \"canExtendUntil\": \"sit deserunt do incididunt\",\n      \"pricedUntil\": \"quis id cillum\",\n      \"noReturnUntil\": \"et\",\n      \"freeUntil\": \"culpa amet qui\",\n      \"becomesFreeAt\": \"laborum\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       43069429,\n       79753511\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"irure veniam consequat mollit enim\",\n      \"surcharge\": {\n       \"value\": 19567945.712784246,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 12104778\n       }\n      }\n     },\n     {\n      \"cost\": -20536329.478692487,\n      \"currency\": \"velit eiusmod voluptat\",\n      \"minCost\": 84141352.85870278,\n      \"minStayUntil\": \"au\",\n      \"canExtendUntil\": \"ad sint eiusmod voluptate\",\n      \"pricedUntil\": \"pariatur cillum do fugiat sunt\",\n      \"noReturnUntil\": \"est veniam\",\n      \"freeUntil\": \"officia dolore\",\n      \"becomesFreeAt\": \"consectetur laboris e\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       56924358,\n       -34007924\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"velit ipsum qui reprehenderit\",\n      \"surcharge\": {\n       \"value\": 14850334.384792238,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 88009139\n       }\n      }\n     }\n    ],\n    \"distance\": -75018711.72188199,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -940923,\n      -39054845\n     ]\n    },\n    \"entityETag\": \"culpa cupidatat\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a8693ce9-7a24-4498-874b-febb7abe5e3d",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "98450c6c-e16b-4619-8db7-733b1e52dd0b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0b1605b5-1cb1-4bcd-9517-862eb24bd5ee",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "150eaec6-910a-4d77-bf40-49298bfe9400",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "991e045c-58e2-40e3-9f1f-0f4555222c10",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"sit quis\",\n    \"cardPaymentsExternalUrl\": \"pariatur nulla culpa\",\n    \"paymentsTelephone\": \"quis pariatur Lorem amet culpa\"\n   },\n   {\n    \"name\": \"minim sit Duis dolore\",\n    \"cardPaymentsExternalUrl\": \"cupidatat aute dolor ut enim\",\n    \"paymentsTelephone\": \"mollit ut sed incididunt voluptate\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "bc1524f9-bda5-4eb7-af04-9fbacaaa6c02",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "625c4873-b7d2-4bac-a30c-0cf2a6ce0d4e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4bb9fa95-7f0c-4f3c-b6c6-0d20b766de82",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2b9d80c5-2a3a-429c-8400-fc86a966dec0",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "0440b897-bc91-4781-ae7c-c49d666a437e",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "75e2de65-9907-4b25-bb53-884155f99420",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"quis nostrud aute\",\n     \"crs\": {\n      \"type\": \"dolore ad nulla\",\n      \"properties\": {\n       \"name\": \"r\"\n      }\n     }\n    },\n    {\n     \"type\": \"est\",\n     \"crs\": {\n      \"type\": \"est sunt commodo\",\n      \"properties\": {\n       \"name\": \"sint sed amet nisi\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ma\",\n   \"crs\": {\n    \"type\": \"irure amet ipsum\",\n    \"properties\": {\n     \"name\": \"enim occaecat velit\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"in ut adipisicing\"\n   },\n   {\n    \"message\": \"dolor voluptate\"\n   }\n  ],\n  \"authorityId\": \"cupidatat\",\n  \"zoneType\": 7,\n  \"entityType\": 3,\n  \"entityId\": \"proident\",\n  \"name\": \"esse\",\n  \"eTag\": \"sint magna reprehenderit elit\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "11ae93d3-b206-40bd-89d3-3a9116c45364",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "77e19e1c-acbf-4558-b976-aed569ea421e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "343045de-e43e-477e-8178-54eed96f48ee",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"sunt laborum ullamco\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f9b55fc6-e644-4350-84a9-16748b05a6ea",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6cdc78d4-ccbe-4fda-87db-7a0c19005e4b",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ipsum do est Ut\",\n            \"properties\": {\n                \"name\": \"dolor\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "91535f34-9325-43dd-a038-9b794f3aae9c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in ipsum proident \",\n            \"properties\": {\n                \"name\": \"dolore ad dolore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"elit dolor\",\n    \"entityETag\": \"sed dolore nisi\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 9,\n      \"specialRestrictionTypeId\": -20290321,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi velit esse dolore\",\n        \"endTime\": \"minim consectetur\",\n        \"maxStay\": 9406883\n       },\n       {\n        \"startTime\": \"culpa Excep\",\n        \"endTime\": \"mo\",\n        \"maxStay\": 22044438\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 1,\n      \"specialRestrictionTypeId\": 9426352,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"laborum eiusmod proident\",\n        \"endTime\": \"nostrud adipisicing\",\n        \"maxStay\": -77521506\n       },\n       {\n        \"startTime\": \"incididunt nostrud culpa consectetur\",\n        \"endTime\": \"elit\",\n        \"maxStay\": -95313102\n       }\n      ]\n     }\n    ],\n    \"distance\": -87894026.26942447\n   },\n   {\n    \"entityId\": \"quis fugiat minim do\",\n    \"entityETag\": \"qui ullamco\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 14,\n      \"specialRestrictionTypeId\": -59895001,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud pariatur sunt\",\n        \"endTime\": \"mollit\",\n        \"maxStay\": 23278674\n       },\n       {\n        \"startTime\": \"sunt\",\n        \"endTime\": \"aliqua non ea laboris dolor\",\n        \"maxStay\": -46275183\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 15,\n      \"specialRestrictionTypeId\": 29975083,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex nisi anim\",\n        \"endTime\": \"cupidatat\",\n        \"maxStay\": 94457501\n       },\n       {\n        \"startTime\": \"amet ut\",\n        \"endTime\": \"anim sed\",\n        \"maxStay\": 56694417\n       }\n      ]\n     }\n    ],\n    \"distance\": -28627050.498708725\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"nulla dolor dolore\",\n   \"entityETag\": \"eu\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 2,\n     \"specialRestrictionTypeId\": -96919051,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"incididunt ad Ut\",\n       \"endTime\": \"Excepteur in mollit non\",\n       \"maxStay\": -28548322\n      },\n      {\n       \"startTime\": \"sed occaecat aute\",\n       \"endTime\": \"tempor cupidatat\",\n       \"maxStay\": 55591783\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 1,\n     \"specialRestrictionTypeId\": 20195919,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ea ullamco minim Excepteur\",\n       \"endTime\": \"sed adipisicing u\",\n       \"maxStay\": -49601791\n      },\n      {\n       \"startTime\": \"Excepteur nulla ad culpa\",\n       \"endTime\": \"velit\",\n       \"maxStay\": -61660383\n      }\n     ]\n    }\n   ],\n   \"distance\": 96810187.81363466\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1048deae-6572-4a18-9e6b-0a98f47b40c4",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in ipsum proident \",\n            \"properties\": {\n                \"name\": \"dolore ad dolore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b57c883d-8480-4463-bec2-9856ddc7bc27",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in ipsum proident \",\n            \"properties\": {\n                \"name\": \"dolore ad dolore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e82de726-27f6-4197-b474-436f28c5e19b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in ipsum proident \",\n            \"properties\": {\n                \"name\": \"dolore ad dolore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "95df9c7e-dce5-442d-b21b-e346698bd662",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"in ipsum proident \",\n            \"properties\": {\n                \"name\": \"dolore ad dolore\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e8dec96c-48e5-4312-a733-cb4859abea4f",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        2,\n        18\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "955e5119-f4c6-4d08-88a9-0669420d4c08",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        4\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"magna et ut\",\n      \"city\": \"\",\n      \"country\": \"i\",\n      \"postcode\": \"pro\"\n     },\n     \"locationCode\": \"eu\",\n     \"totalCapacity\": -22944575,\n     \"zoneId\": \"dolor ex culpa anim officia\",\n     \"authorityId\": \"in Lorem reprehenderit cillum\",\n     \"features\": {\n      \"type\": \"reprehen\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"quis labore ea commodo\",\n           \"crs\": {\n            \"type\": \"eu qui\",\n            \"properties\": {\n             \"name\": \"do\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor occaecat\",\n           \"crs\": {\n            \"type\": \"dolore Excepteur tempor\",\n            \"properties\": {\n             \"name\": \"magna aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"deserunt in Duis\",\n         \"crs\": {\n          \"type\": \"ut consequat in id aliquip\",\n          \"properties\": {\n           \"name\": \"esse aute\"\n          }\n         }\n        },\n        \"type\": \"nulla ut\",\n        \"id\": \"ea exercitation deserunt\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris nulla non dolore\",\n           \"crs\": {\n            \"type\": \"voluptate eu in laboris nulla\",\n            \"properties\": {\n             \"name\": \"esse \"\n            }\n           }\n          },\n          {\n           \"type\": \"officia elit proident\",\n           \"crs\": {\n            \"type\": \"incididunt ut\",\n            \"properties\": {\n             \"name\": \"reprehenderit Duis ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"mollit\",\n         \"crs\": {\n          \"type\": \"consequat incididunt \",\n          \"properties\": {\n           \"name\": \"ad est\"\n          }\n         }\n        },\n        \"type\": \"ad non qui dolor\",\n        \"id\": \"eiusmod exercitation Excepteur amet\"\n       }\n      ],\n      \"properties\": \"dolore dolor\"\n     },\n     \"paymentMethodIds\": [\n      -39849796,\n      53279215\n     ],\n     \"entityId\": \"consequat sit elit\",\n     \"entityType\": 4,\n     \"name\": \"exercitation et commodo nisi non\",\n     \"eTag\": \"Excepteur tempor\",\n     \"operator\": {\n      \"telephone\": \"est\",\n      \"website\": \"adipisici\",\n      \"name\": \"ut est eu conseq\",\n      \"cardPaymentsExternalUrl\": \"ullamco\",\n      \"paymentsTelephone\": \"ut laboris pariatur consectetur mollit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      12,\n      16\n     ],\n     \"facilityTypeIds\": [\n      31161032,\n      45109147\n     ]\n    },\n    \"distance\": -91172516.33272536\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"minim in pariatur enim\",\n      \"city\": \"aliquip aute consequat consectetur fugiat\",\n      \"country\": \"consequat adipisicing est tempor\",\n      \"postcode\": \"veniam in aliqua\"\n     },\n     \"locationCode\": \"aute mollit consequat ullamco occaecat\",\n     \"totalCapacity\": -99572201,\n     \"zoneId\": \"aliqua\",\n     \"authorityId\": \"officia\",\n     \"features\": {\n      \"type\": \"proident amet\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"velit\",\n           \"crs\": {\n            \"type\": \"ea nostrud fugiat aute\",\n            \"properties\": {\n             \"name\": \"ad sed ut non in\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor laborum eiusmod\",\n           \"crs\": {\n            \"type\": \"do id\",\n            \"properties\": {\n             \"name\": \"qui cupidatat labore ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"non enim dolore proident\",\n         \"crs\": {\n          \"type\": \"eu nulla ut velit culpa\",\n          \"properties\": {\n           \"name\": \"et nisi commodo exercitation sunt\"\n          }\n         }\n        },\n        \"type\": \"pariatur aute mollit\",\n        \"id\": \"id in Excepteur mollit\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex incididunt\",\n           \"crs\": {\n            \"type\": \"aute in\",\n            \"properties\": {\n             \"name\": \"esse sunt Excepteur dolore adipisicing\"\n            }\n           }\n          },\n          {\n           \"type\": \"eu enim nisi\",\n           \"crs\": {\n            \"type\": \"exercitation cupidatat anim Lorem\",\n            \"properties\": {\n             \"name\": \"ut magna proident aut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cupidatat ut lab\",\n         \"crs\": {\n          \"type\": \"in non eiusmod cillum\",\n          \"properties\": {\n           \"name\": \"dolore culpa ad aliqua\"\n          }\n         }\n        },\n        \"type\": \"aliqua sunt do\",\n        \"id\": \"voluptate cupidatat ipsum irure\"\n       }\n      ],\n      \"properties\": \"est pariatur elit Lorem\"\n     },\n     \"paymentMethodIds\": [\n      67132520,\n      -34633763\n     ],\n     \"entityId\": \"ut dolor commodo reprehenderit\",\n     \"entityType\": 2,\n     \"name\": \"tempor amet exercitation ad\",\n     \"eTag\": \"ut nostrud aliquip cupidatat\",\n     \"operator\": {\n      \"telephone\": \"voluptat\",\n      \"website\": \"do deserunt\",\n      \"name\": \"velit d\",\n      \"cardPaymentsExternalUrl\": \"cupidatat laborum consequat cillum\",\n      \"paymentsTelephone\": \"est non ea reprehenderit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      16,\n      6\n     ],\n     \"facilityTypeIds\": [\n      -45084436,\n      -1788200\n     ]\n    },\n    \"distance\": 23046871.793242738\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cfec15e5-0332-43ed-b399-7b47ce2c57b2",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        4\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "38f6b962-e9ff-47d6-8c0c-2d98cfa38199",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        4\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "81e814c1-1bba-4547-b891-c15e19abcc2b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        4\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "91efd1ed-14a8-411b-884c-eec5eb623d7f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        4\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "5e4dbfa5-52d2-4311-82d5-d632156b5667",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"cupidatat exercitation\",\n            \"properties\": {\n                \"name\": \"aliqua nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        6,\n        13\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "a0b267bb-92a1-4f30-9ca1-31d7072ae868",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut al\",\n            \"properties\": {\n                \"name\": \"Duis culpa et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        11\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"magna et ut\",\n      \"city\": \"\",\n      \"country\": \"i\",\n      \"postcode\": \"pro\"\n     },\n     \"locationCode\": \"eu\",\n     \"totalCapacity\": -22944575,\n     \"zoneId\": \"dolor ex culpa anim officia\",\n     \"authorityId\": \"in Lorem reprehenderit cillum\",\n     \"features\": {\n      \"type\": \"reprehen\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"quis labore ea commodo\",\n           \"crs\": {\n            \"type\": \"eu qui\",\n            \"properties\": {\n             \"name\": \"do\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor occaecat\",\n           \"crs\": {\n            \"type\": \"dolore Excepteur tempor\",\n            \"properties\": {\n             \"name\": \"magna aliqua\"\n            }\n           }\n          }\n         ],\n         \"type\": \"deserunt in Duis\",\n         \"crs\": {\n          \"type\": \"ut consequat in id aliquip\",\n          \"properties\": {\n           \"name\": \"esse aute\"\n          }\n         }\n        },\n        \"type\": \"nulla ut\",\n        \"id\": \"ea exercitation deserunt\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"laboris nulla non dolore\",\n           \"crs\": {\n            \"type\": \"voluptate eu in laboris nulla\",\n            \"properties\": {\n             \"name\": \"esse \"\n            }\n           }\n          },\n          {\n           \"type\": \"officia elit proident\",\n           \"crs\": {\n            \"type\": \"incididunt ut\",\n            \"properties\": {\n             \"name\": \"reprehenderit Duis ut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"mollit\",\n         \"crs\": {\n          \"type\": \"consequat incididunt \",\n          \"properties\": {\n           \"name\": \"ad est\"\n          }\n         }\n        },\n        \"type\": \"ad non qui dolor\",\n        \"id\": \"eiusmod exercitation Excepteur amet\"\n       }\n      ],\n      \"properties\": \"dolore dolor\"\n     },\n     \"paymentMethodIds\": [\n      -39849796,\n      53279215\n     ],\n     \"entityId\": \"consequat sit elit\",\n     \"entityType\": 4,\n     \"name\": \"exercitation et commodo nisi non\",\n     \"eTag\": \"Excepteur tempor\",\n     \"operator\": {\n      \"telephone\": \"est\",\n      \"website\": \"adipisici\",\n      \"name\": \"ut est eu conseq\",\n      \"cardPaymentsExternalUrl\": \"ullamco\",\n      \"paymentsTelephone\": \"ut laboris pariatur consectetur mollit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      12,\n      16\n     ],\n     \"facilityTypeIds\": [\n      31161032,\n      45109147\n     ]\n    },\n    \"distance\": -91172516.33272536\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"minim in pariatur enim\",\n      \"city\": \"aliquip aute consequat consectetur fugiat\",\n      \"country\": \"consequat adipisicing est tempor\",\n      \"postcode\": \"veniam in aliqua\"\n     },\n     \"locationCode\": \"aute mollit consequat ullamco occaecat\",\n     \"totalCapacity\": -99572201,\n     \"zoneId\": \"aliqua\",\n     \"authorityId\": \"officia\",\n     \"features\": {\n      \"type\": \"proident amet\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"velit\",\n           \"crs\": {\n            \"type\": \"ea nostrud fugiat aute\",\n            \"properties\": {\n             \"name\": \"ad sed ut non in\"\n            }\n           }\n          },\n          {\n           \"type\": \"dolor laborum eiusmod\",\n           \"crs\": {\n            \"type\": \"do id\",\n            \"properties\": {\n             \"name\": \"qui cupidatat labore ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"non enim dolore proident\",\n         \"crs\": {\n          \"type\": \"eu nulla ut velit culpa\",\n          \"properties\": {\n           \"name\": \"et nisi commodo exercitation sunt\"\n          }\n         }\n        },\n        \"type\": \"pariatur aute mollit\",\n        \"id\": \"id in Excepteur mollit\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"ex incididunt\",\n           \"crs\": {\n            \"type\": \"aute in\",\n            \"properties\": {\n             \"name\": \"esse sunt Excepteur dolore adipisicing\"\n            }\n           }\n          },\n          {\n           \"type\": \"eu enim nisi\",\n           \"crs\": {\n            \"type\": \"exercitation cupidatat anim Lorem\",\n            \"properties\": {\n             \"name\": \"ut magna proident aut\"\n            }\n           }\n          }\n         ],\n         \"type\": \"cupidatat ut lab\",\n         \"crs\": {\n          \"type\": \"in non eiusmod cillum\",\n          \"properties\": {\n           \"name\": \"dolore culpa ad aliqua\"\n          }\n         }\n        },\n        \"type\": \"aliqua sunt do\",\n        \"id\": \"voluptate cupidatat ipsum irure\"\n       }\n      ],\n      \"properties\": \"est pariatur elit Lorem\"\n     },\n     \"paymentMethodIds\": [\n      67132520,\n      -34633763\n     ],\n     \"entityId\": \"ut dolor commodo reprehenderit\",\n     \"entityType\": 2,\n     \"name\": \"tempor amet exercitation ad\",\n     \"eTag\": \"ut nostrud aliquip cupidatat\",\n     \"operator\": {\n      \"telephone\": \"voluptat\",\n      \"website\": \"do deserunt\",\n      \"name\": \"velit d\",\n      \"cardPaymentsExternalUrl\": \"cupidatat laborum consequat cillum\",\n      \"paymentsTelephone\": \"est non ea reprehenderit\"\n     },\n     \"onStreetParkingTypeIds\": [\n      16,\n      6\n     ],\n     \"facilityTypeIds\": [\n      -45084436,\n      -1788200\n     ]\n    },\n    \"distance\": 23046871.793242738\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8583b9a4-bf1c-49cc-89a6-4933ffd0cdb7",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut al\",\n            \"properties\": {\n                \"name\": \"Duis culpa et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        11\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9568534e-15f6-4495-bdb9-027b6252e9c5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut al\",\n            \"properties\": {\n                \"name\": \"Duis culpa et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        11\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "a8f19a6c-5f2a-4c0f-973e-a6b8060442c7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut al\",\n            \"properties\": {\n                \"name\": \"Duis culpa et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        11\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "da3b577b-9190-4246-93cc-e4a2753bb064",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"ut al\",\n            \"properties\": {\n                \"name\": \"Duis culpa et\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        11,\n        11\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c6c8bc68-1365-42b0-ad2c-af6d42a5b2f0",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "7bc73a0c-0a2c-4f53-aae4-2530f63bf2f0",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"nisi\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"non in velit est\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -80613782.80462232,\n      \"currency\": \"ullamco enim ipsum id\",\n      \"minCost\": -7016997.241717875,\n      \"minStayUntil\": \"non enim\",\n      \"canExtendUntil\": \"minim elit irure\",\n      \"pricedUntil\": \"pariatur Ut moll\",\n      \"noReturnUntil\": \"nulla laboris\",\n      \"freeUntil\": \"sed\",\n      \"becomesFreeAt\": \"m\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       39466967,\n       -96221567\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint adipisicing quis veniam\",\n      \"surcharge\": {\n       \"value\": -5369921.487800688,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -71373096\n       }\n      }\n     },\n     {\n      \"cost\": -6783660.343773246,\n      \"currency\": \"veniam do magna aliquip\",\n      \"minCost\": 37014965.05809674,\n      \"minStayUntil\": \"voluptate dolore\",\n      \"canExtendUntil\": \"laboris ipsum deserunt consectetur\",\n      \"pricedUntil\": \"nostrud non\",\n      \"noReturnUntil\": \"consectetur\",\n      \"freeUntil\": \"vel\",\n      \"becomesFreeAt\": \"sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -76470003,\n       -48070839\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"veniam irure proident\",\n      \"surcharge\": {\n       \"value\": 19959573.333203197,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -29433844\n       }\n      }\n     }\n    ],\n    \"distance\": -41970977.912115216,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -5293780,\n      -70289455\n     ]\n    },\n    \"entityETag\": \"non et Lorem\"\n   },\n   {\n    \"entityId\": \"in amet nulla deserunt\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 45343364.92395088,\n      \"currency\": \"minim sed cupidatat qui magna\",\n      \"minCost\": -59923850.066996254,\n      \"minStayUntil\": \"nulla labore amet\",\n      \"canExtendUntil\": \"enim exercitation velit\",\n      \"pricedUntil\": \"id\",\n      \"noReturnUntil\": \"Duis\",\n      \"freeUntil\": \"cupidatat dolore\",\n      \"becomesFreeAt\": \"cillum deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -14451442,\n       41139755\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore qui\",\n      \"surcharge\": {\n       \"value\": 35578714.13725144,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -42162919\n       }\n      }\n     },\n     {\n      \"cost\": -37383418.7535584,\n      \"currency\": \"ea magna\",\n      \"minCost\": -87531895.2667261,\n      \"minStayUntil\": \"ut aliqua sunt ipsum\",\n      \"canExtendUntil\": \"dolor adipisicing\",\n      \"pricedUntil\": \"Lorem sed in\",\n      \"noReturnUntil\": \"minim\",\n      \"freeUntil\": \"ad commodo\",\n      \"becomesFreeAt\": \"occaecat qui\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -23733710,\n       74569380\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"qui occaecat\",\n      \"surcharge\": {\n       \"value\": -61260841.52213282,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 66097921\n       }\n      }\n     }\n    ],\n    \"distance\": 37526101.06463304,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -21563060,\n      69799013\n     ]\n    },\n    \"entityETag\": \"minim eu nostrud\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "03d63242-858e-41f5-bb81-5a0b6678901b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "199047ab-49d5-4bab-9bf2-e91a2c0fc36c",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "71f3e36a-2ed1-464c-abb7-82d080db0226",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0bc029a8-7277-40bf-ad50-f65010b2239f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            3\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "95a73c92-c430-446c-85bb-5f2fd46b5fe4",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor deserunt in\",\n            \"properties\": {\n                \"name\": \"ullamco irure do aliquip nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "e2088840-ac44-4328-8d63-d47c28bab8ab",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute adipisicing sint voluptate\",\n            \"properties\": {\n                \"name\": \"nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"nisi\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"non in velit est\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -80613782.80462232,\n      \"currency\": \"ullamco enim ipsum id\",\n      \"minCost\": -7016997.241717875,\n      \"minStayUntil\": \"non enim\",\n      \"canExtendUntil\": \"minim elit irure\",\n      \"pricedUntil\": \"pariatur Ut moll\",\n      \"noReturnUntil\": \"nulla laboris\",\n      \"freeUntil\": \"sed\",\n      \"becomesFreeAt\": \"m\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       39466967,\n       -96221567\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"sint adipisicing quis veniam\",\n      \"surcharge\": {\n       \"value\": -5369921.487800688,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -71373096\n       }\n      }\n     },\n     {\n      \"cost\": -6783660.343773246,\n      \"currency\": \"veniam do magna aliquip\",\n      \"minCost\": 37014965.05809674,\n      \"minStayUntil\": \"voluptate dolore\",\n      \"canExtendUntil\": \"laboris ipsum deserunt consectetur\",\n      \"pricedUntil\": \"nostrud non\",\n      \"noReturnUntil\": \"consectetur\",\n      \"freeUntil\": \"vel\",\n      \"becomesFreeAt\": \"sint\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -76470003,\n       -48070839\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"veniam irure proident\",\n      \"surcharge\": {\n       \"value\": 19959573.333203197,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -29433844\n       }\n      }\n     }\n    ],\n    \"distance\": -41970977.912115216,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 3,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -5293780,\n      -70289455\n     ]\n    },\n    \"entityETag\": \"non et Lorem\"\n   },\n   {\n    \"entityId\": \"in amet nulla deserunt\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 45343364.92395088,\n      \"currency\": \"minim sed cupidatat qui magna\",\n      \"minCost\": -59923850.066996254,\n      \"minStayUntil\": \"nulla labore amet\",\n      \"canExtendUntil\": \"enim exercitation velit\",\n      \"pricedUntil\": \"id\",\n      \"noReturnUntil\": \"Duis\",\n      \"freeUntil\": \"cupidatat dolore\",\n      \"becomesFreeAt\": \"cillum deserunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -14451442,\n       41139755\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"dolore qui\",\n      \"surcharge\": {\n       \"value\": 35578714.13725144,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -42162919\n       }\n      }\n     },\n     {\n      \"cost\": -37383418.7535584,\n      \"currency\": \"ea magna\",\n      \"minCost\": -87531895.2667261,\n      \"minStayUntil\": \"ut aliqua sunt ipsum\",\n      \"canExtendUntil\": \"dolor adipisicing\",\n      \"pricedUntil\": \"Lorem sed in\",\n      \"noReturnUntil\": \"minim\",\n      \"freeUntil\": \"ad commodo\",\n      \"becomesFreeAt\": \"occaecat qui\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -23733710,\n       74569380\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"qui occaecat\",\n      \"surcharge\": {\n       \"value\": -61260841.52213282,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 66097921\n       }\n      }\n     }\n    ],\n    \"distance\": 37526101.06463304,\n    \"parkingAllowed\": 2,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -21563060,\n      69799013\n     ]\n    },\n    \"entityETag\": \"minim eu nostrud\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4ec49772-7168-4130-9b03-260df6c5941f",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute adipisicing sint voluptate\",\n            \"properties\": {\n                \"name\": \"nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "76a3d720-fa5b-4b64-b87d-e8203e1819a9",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute adipisicing sint voluptate\",\n            \"properties\": {\n                \"name\": \"nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d11f73a4-1e8b-4f72-81c1-c45abd17069d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute adipisicing sint voluptate\",\n            \"properties\": {\n                \"name\": \"nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "42d09090-bb47-40fc-9528-10c889780fb5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute adipisicing sint voluptate\",\n            \"properties\": {\n                \"name\": \"nostrud\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "71b7705e-fa49-4950-87df-97de6f9bd23e",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"enim tempor irure ex velit\",\n            \"properties\": {\n                \"name\": \"enim ea cillum minim\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "7e49ad71-0d4f-453e-8acc-131c9001ed1c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet cillum cupidatat velit\",\n            \"properties\": {\n                \"name\": \"ullamco amet\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"aute ullamco\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 1,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"et\",\n     \"crs\": {\n      \"type\": \"cupi\",\n      \"properties\": {\n       \"name\": \"consequat dolor\"\n      }\n     }\n    },\n    \"type\": \"nostrud commodo occaecat\",\n    \"id\": \"Excepteur reprehenderit deserunt\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"sint et velit\",\n     \"crs\": {\n      \"type\": \"adipisicing non occaeca\",\n      \"properties\": {\n       \"name\": \"in consequat\"\n      }\n     }\n    },\n    \"type\": \"laboris elit\",\n    \"id\": \"ad magna nisi reprehenderit dolor\"\n   }\n  ],\n  \"properties\": \"laborum do\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7806070b-2fa3-4cb8-8aaa-dd54910d665e",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet cillum cupidatat velit\",\n            \"properties\": {\n                \"name\": \"ullamco amet\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6e6d09ea-6b8e-4632-9da4-51d8e6e62285",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet cillum cupidatat velit\",\n            \"properties\": {\n                \"name\": \"ullamco amet\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "550d75d5-9438-4430-b15e-235d832915dd",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet cillum cupidatat velit\",\n            \"properties\": {\n                \"name\": \"ullamco amet\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9bcb2aba-8233-4a29-b86d-797c410c5f8f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet cillum cupidatat velit\",\n            \"properties\": {\n                \"name\": \"ullamco amet\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "4ab4b22f-b4e1-4695-8362-df55b924b984",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"adipisicing ipsum laboris\",\n            \"properties\": {\n                \"name\": \"dolore anim incididunt amet\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        17,\n        5\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "913591e7-89bd-45a1-aa91-67fc4502b9e1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui aliquip ullamco consectetur laboris\",\n            \"properties\": {\n                \"name\": \"labore sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"elit dolor\",\n    \"entityETag\": \"sed dolore nisi\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 9,\n      \"specialRestrictionTypeId\": -20290321,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi velit esse dolore\",\n        \"endTime\": \"minim consectetur\",\n        \"maxStay\": 9406883\n       },\n       {\n        \"startTime\": \"culpa Excep\",\n        \"endTime\": \"mo\",\n        \"maxStay\": 22044438\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 1,\n      \"specialRestrictionTypeId\": 9426352,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"laborum eiusmod proident\",\n        \"endTime\": \"nostrud adipisicing\",\n        \"maxStay\": -77521506\n       },\n       {\n        \"startTime\": \"incididunt nostrud culpa consectetur\",\n        \"endTime\": \"elit\",\n        \"maxStay\": -95313102\n       }\n      ]\n     }\n    ],\n    \"distance\": -87894026.26942447\n   },\n   {\n    \"entityId\": \"quis fugiat minim do\",\n    \"entityETag\": \"qui ullamco\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 14,\n      \"specialRestrictionTypeId\": -59895001,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nostrud pariatur sunt\",\n        \"endTime\": \"mollit\",\n        \"maxStay\": 23278674\n       },\n       {\n        \"startTime\": \"sunt\",\n        \"endTime\": \"aliqua non ea laboris dolor\",\n        \"maxStay\": -46275183\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 15,\n      \"specialRestrictionTypeId\": 29975083,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"ex nisi anim\",\n        \"endTime\": \"cupidatat\",\n        \"maxStay\": 94457501\n       },\n       {\n        \"startTime\": \"amet ut\",\n        \"endTime\": \"anim sed\",\n        \"maxStay\": 56694417\n       }\n      ]\n     }\n    ],\n    \"distance\": -28627050.498708725\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"nulla dolor dolore\",\n   \"entityETag\": \"eu\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 2,\n     \"specialRestrictionTypeId\": -96919051,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"incididunt ad Ut\",\n       \"endTime\": \"Excepteur in mollit non\",\n       \"maxStay\": -28548322\n      },\n      {\n       \"startTime\": \"sed occaecat aute\",\n       \"endTime\": \"tempor cupidatat\",\n       \"maxStay\": 55591783\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 1,\n     \"specialRestrictionTypeId\": 20195919,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"ea ullamco minim Excepteur\",\n       \"endTime\": \"sed adipisicing u\",\n       \"maxStay\": -49601791\n      },\n      {\n       \"startTime\": \"Excepteur nulla ad culpa\",\n       \"endTime\": \"velit\",\n       \"maxStay\": -61660383\n      }\n     ]\n    }\n   ],\n   \"distance\": 96810187.81363466\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "cfa3eb3c-6907-42cb-8fbd-8d648157831b",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui aliquip ullamco consectetur laboris\",\n            \"properties\": {\n                \"name\": \"labore sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in aliqua Ut\",\n \"errors\": [\n  {\n   \"property\": \"adipisicing qui dolore\",\n   \"code\": \"Excepteur\",\n   \"message\": \"velit do laboris nostrud\"\n  },\n  {\n   \"property\": \"eu ut veniam\",\n   \"code\": \"ut reprehenderit voluptate labore\",\n   \"message\": \"cillum sint\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0ad5b6d2-16a5-4165-96db-757b2d0443ed",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui aliquip ullamco consectetur laboris\",\n            \"properties\": {\n                \"name\": \"labore sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6492cee5-36ce-45b2-b2be-37ec43db3aac",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui aliquip ullamco consectetur laboris\",\n            \"properties\": {\n                \"name\": \"labore sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0bad6136-cb66-487f-8973-e69478e79e77",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"qui aliquip ullamco consectetur laboris\",\n            \"properties\": {\n                \"name\": \"labore sed\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        1,\n        6\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "42813b86-70d7-4357-9377-bb18f558c458",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "27069ce3-b031-4264-9d29-b7090012f8a4",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2b48eff0-78f2-42ef-8ada-da1c0dab32e5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ce23b268-fcf5-48b9-b173-ea8504572b31",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f0f417f7-0ea5-4cc7-9959-e87cff6699a4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "c70aca26-52d0-4746-8c62-89256eb412fc",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
