{
  "item": [
    {
      "id": "a6a154ef-5aa8-4ce5-9e22-41bfb58fc6c8",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "e2a92390-82d6-437a-9c81-e7630b0af7a1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"notes\": [\n   {\n    \"message\": \"cillum in\"\n   },\n   {\n    \"message\": \"quis Lorem laboris\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"name\": \"reprehenderit esse adipisicing ipsum do\",\n    \"cardPaymentsExternalUrl\": \"eiusmod Ut\",\n    \"paymentsTelephone\": \"sit deserunt et veniam\"\n   },\n   {\n    \"name\": \"ea quis proident\",\n    \"cardPaymentsExternalUrl\": \"sunt\",\n    \"paymentsTelephone\": \"aliquip dolore\"\n   }\n  ],\n  \"entityType\": 2,\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"dolore ut ipsum\",\n     \"crs\": {\n      \"type\": \"labore do\",\n      \"properties\": {\n       \"name\": \"ad Lorem in cupidatat\"\n      }\n     }\n    },\n    {\n     \"type\": \"do et irure laboris dolor\",\n     \"crs\": {\n      \"type\": \"magna dolor Ut proident minim\",\n      \"properties\": {\n       \"name\": \"proident quis non elit\"\n      }\n     }\n    }\n   ],\n   \"type\": \"ullamco reprehenderit ex eu\",\n   \"crs\": {\n    \"type\": \"adipisicing dolore volu\",\n    \"properties\": {\n     \"name\": \"nostrud \"\n    }\n   }\n  },\n  \"hasFreeParkingOutsideZone\": false,\n  \"entityId\": \"Duis sit adipisicing officia ex\",\n  \"name\": \"ipsum consequat\",\n  \"eTag\": \"culpa ut\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "68933c4b-3185-42a8-a29b-1f2baae26970",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1f361c54-7ba7-4f2b-a5e3-48e7ee0f031f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "31f10114-080b-4fb0-aaa0-8ea3b34d944e",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur deserunt id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "d822ec12-d6cc-4114-94fb-a05293459d4c",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "743dcb23-1fa6-452c-9bd0-4142af1d72ad",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "a53fb91c-4a72-4701-b59a-50cbacd95bb8",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"address\": {\n     \"street\": \"ad nostrud dolor\",\n     \"city\": \"Duis \",\n     \"country\": \"anim\",\n     \"postcode\": \"culpa id\"\n    },\n    \"locationCode\": \"cillum Ut in nulla\",\n    \"totalCapacity\": -98253841,\n    \"zoneId\": \"proident sit ea volupta\",\n    \"authorityId\": \"Excepteur ipsum eiusmod anim culpa\",\n    \"features\": {\n     \"type\": \"ut dolore veniam culpa\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"commodo qui\",\n          \"crs\": {\n           \"type\": \"aute dolore pariatur\",\n           \"properties\": {\n            \"name\": \"irure incididunt dolor\"\n           }\n          }\n         },\n         {\n          \"type\": \"incididunt et dolore id tempor\",\n          \"crs\": {\n           \"type\": \"sunt proident\",\n           \"properties\": {\n            \"name\": \"sint nulla aute\"\n           }\n          }\n         }\n        ],\n        \"type\": \"veniam commodo Dui\",\n        \"crs\": {\n         \"type\": \"amet dolor dolore consequat in\",\n         \"properties\": {\n          \"name\": \"officia cillum incididunt\"\n         }\n        }\n       },\n       \"type\": \"nostrud ut aliquip\",\n       \"id\": \"labore irure\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"quis sit\",\n          \"crs\": {\n           \"type\": \"eiusmod consectetur laboris\",\n           \"properties\": {\n            \"name\": \"voluptate sit\"\n           }\n          }\n         },\n         {\n          \"type\": \"minim aliqua ipsum\",\n          \"crs\": {\n           \"type\": \"voluptate ut aute\",\n           \"properties\": {\n            \"name\": \"occaecat et\"\n           }\n          }\n         }\n        ],\n        \"type\": \"velit anim\",\n        \"crs\": {\n         \"type\": \"dolore occaecat\",\n         \"properties\": {\n          \"name\": \"culpa velit laborum\"\n         }\n        }\n       },\n       \"type\": \"nostrud\",\n       \"id\": \"consequat in\"\n      }\n     ],\n     \"properties\": \"aliquip sit\"\n    },\n    \"paymentMethodIds\": [\n     2558949,\n     -51173074\n    ],\n    \"entityId\": \"velit mollit tempor id consectetur\",\n    \"entityType\": 4,\n    \"name\": \"ipsum eiusmod\",\n    \"eTag\": \"esse eu\"\n   },\n   {\n    \"address\": {\n     \"street\": \"cupidatat magna\",\n     \"city\": \"ea quis\",\n     \"country\": \"quis qui\",\n     \"postcode\": \"eiusmod veniam\"\n    },\n    \"locationCode\": \"ut dolore ea\",\n    \"totalCapacity\": -59660873,\n    \"zoneId\": \"ullamco dolore\",\n    \"authorityId\": \"tempor veniam\",\n    \"features\": {\n     \"type\": \"culpa nisi\",\n     \"features\": [\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"ut fugiat aliquip\",\n          \"crs\": {\n           \"type\": \"ullamco do consequat quis\",\n           \"properties\": {\n            \"name\": \"tempor amet\"\n           }\n          }\n         },\n         {\n          \"type\": \"mollit laborum ex\",\n          \"crs\": {\n           \"type\": \"dolor occaecat reprehenderit\",\n           \"properties\": {\n            \"name\": \"adipisicing esse ullamco\"\n           }\n          }\n         }\n        ],\n        \"type\": \"consectetur ea\",\n        \"crs\": {\n         \"type\": \"anim reprehenderit dolor Duis\",\n         \"properties\": {\n          \"name\": \"culpa laboris dolor aliquip\"\n         }\n        }\n       },\n       \"type\": \"amet Ut\",\n       \"id\": \"sit voluptate\"\n      },\n      {\n       \"properties\": {\n        \"basemap\": \"<integer>\"\n       },\n       \"geometry\": {\n        \"geometries\": [\n         {\n          \"type\": \"qui dolor\",\n          \"crs\": {\n           \"type\": \"pariatur qui nostrud\",\n           \"properties\": {\n            \"name\": \"dolore\"\n           }\n          }\n         },\n         {\n          \"type\": \"est ea veniam\",\n          \"crs\": {\n           \"type\": \"officia cillum\",\n           \"properties\": {\n            \"name\": \"laborum ea enim et\"\n           }\n          }\n         }\n        ],\n        \"type\": \"exercitation\",\n        \"crs\": {\n         \"type\": \"est in enim\",\n         \"properties\": {\n          \"name\": \"et dolore culpa\"\n         }\n        }\n       },\n       \"type\": \"anim sit Duis\",\n       \"id\": \"deserunt occaecat ut ad\"\n      }\n     ],\n     \"properties\": \"sunt ex\"\n    },\n    \"paymentMethodIds\": [\n     -4089240,\n     -73232194\n    ],\n    \"entityId\": \"ex non sed enim qui\",\n    \"entityType\": 1,\n    \"name\": \"mag\",\n    \"eTag\": \"proident velit Ut minim reprehenderi\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"nisi el\",\n       \"crs\": {\n        \"type\": \"reprehenderit in ut magna sint\",\n        \"properties\": {\n         \"name\": \"dolor velit aut\"\n        }\n       }\n      },\n      {\n       \"type\": \"ea eu\",\n       \"crs\": {\n        \"type\": \"dolore ea laboris aliquip\",\n        \"properties\": {\n         \"name\": \"minim pariatur qui\"\n        }\n       }\n      }\n     ],\n     \"type\": \"sit cillum consectetur\",\n     \"crs\": {\n      \"type\": \"aliqua dolor\",\n      \"properties\": {\n       \"name\": \"non magna nulla\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"dolore veniam\"\n     },\n     {\n      \"message\": \"culpa minim\"\n     }\n    ],\n    \"authorityId\": \"ipsum consectetur\",\n    \"zoneType\": 1,\n    \"entityType\": 2,\n    \"entityId\": \"nisi\",\n    \"name\": \"deserunt adi\",\n    \"eTag\": \"in\"\n   },\n   {\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"commodo aliqua\",\n       \"crs\": {\n        \"type\": \"in amet sed\",\n        \"properties\": {\n         \"name\": \"proident\"\n        }\n       }\n      },\n      {\n       \"type\": \"Ut officia\",\n       \"crs\": {\n        \"type\": \"irure ad ut\",\n        \"properties\": {\n         \"name\": \"deserunt incididunt\"\n        }\n       }\n      }\n     ],\n     \"type\": \"commodo\",\n     \"crs\": {\n      \"type\": \"sunt Duis ea deserunt\",\n      \"properties\": {\n       \"name\": \"eiusmod\"\n      }\n     }\n    },\n    \"notes\": [\n     {\n      \"message\": \"commodo dolore dolore do\"\n     },\n     {\n      \"message\": \"pariatur officia anim\"\n     }\n    ],\n    \"authorityId\": \"cupidatat id aliqua do\",\n    \"zoneType\": 3,\n    \"entityType\": 3,\n    \"entityId\": \"consectetur\",\n    \"name\": \"quis est pariatur enim\",\n    \"eTag\": \"nostrud incididunt\"\n   }\n  ],\n  \"authorities\": [\n   {\n    \"notes\": [\n     {\n      \"message\": \"Lorem sunt deserunt pariatur reprehenderit\"\n     },\n     {\n      \"message\": \"consequat in\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"ut incididunt\",\n      \"cardPaymentsExternalUrl\": \"Duis sed exercitation aliqua\",\n      \"paymentsTelephone\": \"elit aliquip Excepteur\"\n     },\n     {\n      \"name\": \"ullamco in reprehenderit magna\",\n      \"cardPaymentsExternalUrl\": \"velit qui ipsum est\",\n      \"paymentsTelephone\": \"aliqua mollit non\"\n     }\n    ],\n    \"entityType\": 3,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"ad tempor\",\n       \"crs\": {\n        \"type\": \"nisi\",\n        \"properties\": {\n         \"name\": \"ea consequat in anim voluptate\"\n        }\n       }\n      },\n      {\n       \"type\": \"ut nulla cillum aliqua\",\n       \"crs\": {\n        \"type\": \"veni\",\n        \"properties\": {\n         \"name\": \"aliqua es\"\n        }\n       }\n      }\n     ],\n     \"type\": \"cillum amet ullamco\",\n     \"crs\": {\n      \"type\": \"Excepteur ex\",\n      \"properties\": {\n       \"name\": \"velit enim aliquip\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"nisi mollit ex sint aliqua\",\n    \"name\": \"ex Ut\",\n    \"eTag\": \"nisi esse ex\"\n   },\n   {\n    \"notes\": [\n     {\n      \"message\": \"ad in\"\n     },\n     {\n      \"message\": \"in Ut labore fugiat\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"name\": \"esse sint commodo nisi\",\n      \"cardPaymentsExternalUrl\": \"qui magna esse\",\n      \"paymentsTelephone\": \"Duis adipisicing proident aliqua\"\n     },\n     {\n      \"name\": \"minim ex laborum\",\n      \"cardPaymentsExternalUrl\": \"mollit \",\n      \"paymentsTelephone\": \"veniam\"\n     }\n    ],\n    \"entityType\": 4,\n    \"geometry\": {\n     \"geometries\": [\n      {\n       \"type\": \"in magna ad aute\",\n       \"crs\": {\n        \"type\": \"non voluptate\",\n        \"properties\": {\n         \"name\": \"quis cillum nostrud incididunt\"\n        }\n       }\n      },\n      {\n       \"type\": \"voluptate deserunt pa\",\n       \"crs\": {\n        \"type\": \"aliqua ei\",\n        \"properties\": {\n         \"name\": \"non\"\n        }\n       }\n      }\n     ],\n     \"type\": \"ea velit\",\n     \"crs\": {\n      \"type\": \"in sint velit cupidatat nostrud\",\n      \"properties\": {\n       \"name\": \"minim ex eu Duis\"\n      }\n     }\n    },\n    \"hasFreeParkingOutsideZone\": true,\n    \"entityId\": \"nisi amet et\",\n    \"name\": \"velit quis voluptate\",\n    \"eTag\": \"minim quis sunt non\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "95cb14a0-8c7c-4230-876b-87673fdda289",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"in non deserunt\",\n \"errors\": [\n  {\n   \"property\": \"sunt\",\n   \"code\": \"ut \",\n   \"message\": \"aute in dolore est\"\n  },\n  {\n   \"property\": \"ut et dolore eiusmod\",\n   \"code\": \"fugiat\",\n   \"message\": \"non pariatur ea\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9354fd69-f3ae-4bfb-b29c-c784f254449f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d1043ad4-79b1-452c-8230-20fc993f1b26",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "4b5f67de-a39b-453d-af4f-39a30b9ad691",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "ed3bd156-72ed-48c6-957c-3a5110939e62",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "f5bbbe01-4e17-4145-9a43-8860920cfce5",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"address\": {\n   \"street\": \"laborum ad aliquip deserunt\",\n   \"city\": \"ut laborum\",\n   \"country\": \"ad Ut quis\",\n   \"postcode\": \"nulla ut sint dolore\"\n  },\n  \"locationCode\": \"dolore in consequat\",\n  \"totalCapacity\": -88708361,\n  \"zoneId\": \"eiusmod dolore\",\n  \"authorityId\": \"tempor fugiat est\",\n  \"features\": {\n   \"type\": \"proident Lorem in\",\n   \"features\": [\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"Lorem velit\",\n        \"crs\": {\n         \"type\": \"adipisicing deserunt Lorem qui\",\n         \"properties\": {\n          \"name\": \"sunt ut mollit\"\n         }\n        }\n       },\n       {\n        \"type\": \"quis ex\",\n        \"crs\": {\n         \"type\": \"sed exercitation\",\n         \"properties\": {\n          \"name\": \"minim in\"\n         }\n        }\n       }\n      ],\n      \"type\": \"dolor adipisicing nostrud laboris\",\n      \"crs\": {\n       \"type\": \"proident ad magna aute\",\n       \"properties\": {\n        \"name\": \"dolor mollit sint irure\"\n       }\n      }\n     },\n     \"type\": \"dolore officia\",\n     \"id\": \"ipsum mollit exercitation dolore enim\"\n    },\n    {\n     \"properties\": {\n      \"basemap\": \"<integer>\"\n     },\n     \"geometry\": {\n      \"geometries\": [\n       {\n        \"type\": \"non nulla\",\n        \"crs\": {\n         \"type\": \"amet sed\",\n         \"properties\": {\n          \"name\": \"id commodo\"\n         }\n        }\n       },\n       {\n        \"type\": \"velit exercitation nisi\",\n        \"crs\": {\n         \"type\": \"dolor cillum\",\n         \"properties\": {\n          \"name\": \"Duis do\"\n         }\n        }\n       }\n      ],\n      \"type\": \"sit veniam fugiat irur\",\n      \"crs\": {\n       \"type\": \"id\",\n       \"properties\": {\n        \"name\": \"laboris mollit pariatur Ut\"\n       }\n      }\n     },\n     \"type\": \"dolor laborum ullamco ut\",\n     \"id\": \"ex est consequ\"\n    }\n   ],\n   \"properties\": \"do a\"\n  },\n  \"paymentMethodIds\": [\n   72728064,\n   -99750328\n  ],\n  \"entityId\": \"ea dolore ipsum aute ali\",\n  \"entityType\": 2,\n  \"name\": \"commodo in\",\n  \"eTag\": \"consectetur minim repreh\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "85c7ed8a-9ee6-4acf-93bb-6a661e12a69f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0a006e69-c0f9-43e3-b9ab-633c81d9f14e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "152526b8-af0c-4710-856f-bbc85e03e710",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur deserunt id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "28624e99-7249-4610-8914-2c8960cb4d71",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6c7cc1af-3c6a-4ee7-8f36-abf8d8abef2c",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "bd11d37b-ecad-46df-97e7-9f09c8f60491",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entityId\": \"voluptate\",\n  \"entityType\": 1,\n  \"quotes\": [\n   {\n    \"cost\": -60815845.47816328,\n    \"currency\": \"occaecat irure sunt\",\n    \"minCost\": 49629621.912085176,\n    \"minStayUntil\": \"dolor consectetur officia mollit eiusmod\",\n    \"canExtendUntil\": \"eu ut irure es\",\n    \"pricedUntil\": \"deser\",\n    \"noReturnUntil\": \"proident dolor enim aliquip est\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     47654632,\n     -99863685\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"ipsum culpa\",\n    \"surcharge\": {\n     \"value\": 75524999.79586002,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": -62783787\n     }\n    }\n   },\n   {\n    \"cost\": 76078485.58191672,\n    \"currency\": \"sunt culpa elit sit\",\n    \"minCost\": 78120957.4477854,\n    \"minStayUntil\": \"in cupidatat\",\n    \"canExtendUntil\": \"esse qui amet consectetur dolor\",\n    \"pricedUntil\": \"sint elit eu\",\n    \"noReturnUntil\": \"irur\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     84454394,\n     25325548\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"commodo ex aute\",\n    \"surcharge\": {\n     \"value\": 32403396.271229073,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 51098944\n     }\n    }\n   }\n  ],\n  \"distance\": -3120896.4231757075,\n  \"parkingAllowed\": 1,\n  \"noParkingReason\": {\n   \"reasonType\": 2,\n   \"requiredContexts\": [\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    },\n    {\n     \"vehicleTypeId\": \"<integer>\",\n     \"activityTypeId\": \"<integer>\",\n     \"fuelTypeId\": \"<integer>\",\n     \"permits\": [\n      {\n       \"permitTypeId\": \"<integer>\"\n      },\n      {\n       \"permitTypeId\": \"<integer>\"\n      }\n     ]\n    }\n   ],\n   \"specialRestrictions\": [\n    44240855,\n    -11784655\n   ]\n  },\n  \"entityETag\": \"reprehenderit aliqua consectetur dolor eiusmod\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "00c2da75-da21-4160-a565-620bfcaaf447",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f48dc8ed-8be5-464e-bfad-c6bf6ea7daa9",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f331f809-d6c9-445b-8988-2dd0cb4c9f03",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur deserunt id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1a8bb3f8-9480-4e5a-99e5-500ca1ae93bd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "436b1722-b4a7-4c55-83e4-2e3548c21bbf",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\r\nIf parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "3791122e-33b6-4016-8e2e-15aef351f4d2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"Duis anim\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"dolore occaecat cillum\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": -16866719.507174328,\n      \"currency\": \"rep\",\n      \"minCost\": -26312506.722155288,\n      \"minStayUntil\": \"do Ut\",\n      \"canExtendUntil\": \"consequat\",\n      \"pricedUntil\": \"nisi in enim\",\n      \"noReturnUntil\": \"nostrud laboris ex dolore\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       83275489,\n       11171951\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"voluptate anim\",\n      \"surcharge\": {\n       \"value\": 45526294.066512644,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 17289003\n       }\n      }\n     },\n     {\n      \"cost\": -98429147.44091167,\n      \"currency\": \"aliqua consectetur in\",\n      \"minCost\": 44045295.83665237,\n      \"minStayUntil\": \"nisi voluptate cupidatat\",\n      \"canExtendUntil\": \"ullamco proident enim velit\",\n      \"pricedUntil\": \"nisi ut non\",\n      \"noReturnUntil\": \"sed in occaecat moll\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       57020889,\n       73080992\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ullamco aute nisi laborum\",\n      \"surcharge\": {\n       \"value\": 60730986.85159102,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 85648857\n       }\n      }\n     }\n    ],\n    \"distance\": -38874386.32575089,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 4,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      66097180,\n      -5784887\n     ]\n    },\n    \"entityETag\": \"id enim ullamco amet\"\n   },\n   {\n    \"entityId\": \"elit tempor ea\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 46016573.354914576,\n      \"currency\": \"dolor proident qui ipsum\",\n      \"minCost\": -50730771.5477157,\n      \"minStayUntil\": \"sint tempor magna ullamco est\",\n      \"canExtendUntil\": \"officia commodo\",\n      \"pricedUntil\": \"sit Duis cillum\",\n      \"noReturnUntil\": \"Excepteur aliqua ad incididunt\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       86677394,\n       -18640420\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"eiusmod aliquip nostrud elit sint\",\n      \"surcharge\": {\n       \"value\": -46534121.84956074,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 74677647\n       }\n      }\n     },\n     {\n      \"cost\": -7322338.955866054,\n      \"currency\": \"e\",\n      \"minCost\": -78927985.98306534,\n      \"minStayUntil\": \"officia Excepteur in qui ut\",\n      \"canExtendUntil\": \"cillum dolor\",\n      \"pricedUntil\": \"aliqua adipisicing dolore enim\",\n      \"noReturnUntil\": \"Excepteur in ut cupidatat ut\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       25545814,\n       47687532\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"consectetur nostrud dolore est\",\n      \"surcharge\": {\n       \"value\": 62476048.63322106,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -17434460\n       }\n      }\n     }\n    ],\n    \"distance\": -25469980.492821693,\n    \"parkingAllowed\": 3,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -52343219,\n      95246490\n     ]\n    },\n    \"entityETag\": \"proident sit\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ca4d3051-4ab8-49c4-bd12-675a0e68a711",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "533201af-ddb1-4cb4-a859-336fda4b7c98",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "85a7c120-5bdc-47f3-a135-a81312fb5465",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"startTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8d7e2f8c-c1b7-477f-aba0-078637ba46ad",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "7ef714ef-9b0d-4586-ae3b-76f0c02e3006",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"name\": \"labore ut\",\n    \"cardPaymentsExternalUrl\": \"est\",\n    \"paymentsTelephone\": \"occaecat nostrud sed magna id\"\n   },\n   {\n    \"name\": \"qui incididunt eiusmod sit\",\n    \"cardPaymentsExternalUrl\": \"ut est nisi velit in\",\n    \"paymentsTelephone\": \"dolor in aute\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "14a0a3b2-61bc-4884-9989-a1678d1223e6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9db614ec-1b22-42a1-8e88-ff7fe5532c5e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ecbb0b2a-9668-4bed-a498-bb660d63afdf",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur deserunt id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "30f43fee-0974-4d1b-8d30-f6f5fd1376ae",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "e0c6a92d-f80c-409d-8d04-bb8a7deb78a3",
      "name": "Fetch a zone By ID",
      "request": {
        "name": "Fetch a zone By ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3d449e94-53db-43d7-b0f7-789d79e1cb1d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"geometry\": {\n   \"geometries\": [\n    {\n     \"type\": \"in ipsum\",\n     \"crs\": {\n      \"type\": \"sit\",\n      \"properties\": {\n       \"name\": \"ea dolor\"\n      }\n     }\n    },\n    {\n     \"type\": \"dolor dolore\",\n     \"crs\": {\n      \"type\": \"reprehenderit deserunt\",\n      \"properties\": {\n       \"name\": \"Lorem ad enim\"\n      }\n     }\n    }\n   ],\n   \"type\": \"nulla nisi officia minim\",\n   \"crs\": {\n    \"type\": \"do ullamco culpa\",\n    \"properties\": {\n     \"name\": \"eu culpa\"\n    }\n   }\n  },\n  \"notes\": [\n   {\n    \"message\": \"proident amet\"\n   },\n   {\n    \"message\": \"quis ut in\"\n   }\n  ],\n  \"authorityId\": \"sit\",\n  \"zoneType\": 5,\n  \"entityType\": 4,\n  \"entityId\": \"amet ad eu\",\n  \"name\": \"dolor \",\n  \"eTag\": \"dolore ea\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "73277bd8-9805-4bf7-8faf-b91983fa39d0",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "455c8eeb-91cc-4912-865b-c2434989771f",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6b2741fb-8ca9-40b4-92b1-5c3321038c44",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"pariatur deserunt id\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "660bddf7-3db9-40c5-ae03-e41c12c63d45",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<string>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d9878de0-d472-4df1-8e82-36cebd81f59a",
      "name": "Find Authority Ids by viewport",
      "request": {
        "name": "Find Authority Ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor tempor\",\n            \"properties\": {\n                \"name\": \"veniam elit\"\n            }\n        }\n    }\n}"
        }
      },
      "response": [
        {
          "id": "17ffd593-8c1d-43f4-a2ec-b244a8109686",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor pariatur aute\",\n            \"properties\": {\n                \"name\": \"anim dolor ea enim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"elit reprehenderit consectetur\",\n    \"entityETag\": \"sunt labore laboris cupidatat\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -31697186,\n      \"specialRestrictionTypeId\": -64547432,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"officia enim aliqua ullamco\",\n        \"endTime\": \"dolor proident aliqua\",\n        \"maxStay\": 27667678\n       },\n       {\n        \"startTime\": \"quis\",\n        \"endTime\": \"officia fugiat\",\n        \"maxStay\": -91541206\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 9511524,\n      \"specialRestrictionTypeId\": 71793611,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"minim non in id\",\n        \"endTime\": \"incididunt magna deserunt\",\n        \"maxStay\": 64779587\n       },\n       {\n        \"startTime\": \"\",\n        \"endTime\": \"id eiusmod ad qui\",\n        \"maxStay\": 45063874\n       }\n      ]\n     }\n    ],\n    \"distance\": 28353060.206822976\n   },\n   {\n    \"entityId\": \"cupida\",\n    \"entityETag\": \"esse eu dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 73696295,\n      \"specialRestrictionTypeId\": -32809010,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolore culpa non Duis cillum\",\n        \"endTime\": \"n\",\n        \"maxStay\": -53435533\n       },\n       {\n        \"startTime\": \"sint\",\n        \"endTime\": \"culpa\",\n        \"maxStay\": 70702368\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 77648971,\n      \"specialRestrictionTypeId\": -43731082,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi ea\",\n        \"endTime\": \"do ut\",\n        \"maxStay\": -73238316\n       },\n       {\n        \"startTime\": \"commodo ut\",\n        \"endTime\": \"aliquip ullamco\",\n        \"maxStay\": 78427452\n       }\n      ]\n     }\n    ],\n    \"distance\": 97894203.98892173\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"reprehenderit mollit\",\n   \"entityETag\": \"culpa\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 56771383,\n     \"specialRestrictionTypeId\": -32670098,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"velit D\",\n       \"endTime\": \"cupidatat ipsum\",\n       \"maxStay\": 92742739\n      },\n      {\n       \"startTime\": \"est aliquip\",\n       \"endTime\": \"ullamco nisi proident laborum labore\",\n       \"maxStay\": -92477357\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 93565277,\n     \"specialRestrictionTypeId\": -99685687,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nulla dolor\",\n       \"endTime\": \"laborum quis\",\n       \"maxStay\": 96875129\n      },\n      {\n       \"startTime\": \"esse sed exercitation id\",\n       \"endTime\": \"magna Lorem cillum voluptate velit\",\n       \"maxStay\": -93614944\n      }\n     ]\n    }\n   ],\n   \"distance\": 88672819.47088176\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e32438f3-5312-4dc5-8ad4-a00a06d8a3ca",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor pariatur aute\",\n            \"properties\": {\n                \"name\": \"anim dolor ea enim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a8d5b490-5c53-4cec-a825-7d5afda79fe6",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor pariatur aute\",\n            \"properties\": {\n                \"name\": \"anim dolor ea enim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "eeefbbef-d4b2-4b86-90f3-8e46163f9ba5",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor pariatur aute\",\n            \"properties\": {\n                \"name\": \"anim dolor ea enim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f3e77eee-cbf0-4bd8-bb0b-18ab8d3d0ab8",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"dolor pariatur aute\",\n            \"properties\": {\n                \"name\": \"anim dolor ea enim\"\n            }\n        }\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "864c37b6-6b74-48e3-9927-736b05068245",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1,\n            3\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "34f50a40-4cdc-4844-8ff0-675283a48ba2",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ipsum fugiat laboris\",\n      \"city\": \"irure labore\",\n      \"country\": \"irure ea\",\n      \"postcode\": \"id occaecat esse\"\n     },\n     \"locationCode\": \"id amet\",\n     \"totalCapacity\": 91740230,\n     \"zoneId\": \"esse dolor aliqua\",\n     \"authorityId\": \"in nostrud reprehenderit aliquip\",\n     \"features\": {\n      \"type\": \"amet elit adipisicing deserunt\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"Excepteur dolor\",\n           \"crs\": {\n            \"type\": \"fugiat labore do enim\",\n            \"properties\": {\n             \"name\": \"laborum labore\"\n            }\n           }\n          },\n          {\n           \"type\": \"cillum nulla\",\n           \"crs\": {\n            \"type\": \"ea\",\n            \"properties\": {\n             \"name\": \"culpa laborum proident qui ea\"\n            }\n           }\n          }\n         ],\n         \"type\": \"laborum culpa qu\",\n         \"crs\": {\n          \"type\": \"labore exercitation\",\n          \"properties\": {\n           \"name\": \"laboris dolor\"\n          }\n         }\n        },\n        \"type\": \"minim aute laboris quis\",\n        \"id\": \"nostrud labore veniam\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"est esse nostrud incididunt\",\n           \"crs\": {\n            \"type\": \"mollit magna quis\",\n            \"properties\": {\n             \"name\": \"laboris consequat\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris nostrud pariatur\",\n           \"crs\": {\n            \"type\": \"ad elit tempor\",\n            \"properties\": {\n             \"name\": \"dolore sit anim ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"quis velit mollit\",\n         \"crs\": {\n          \"type\": \"ad cillum officia sint\",\n          \"properties\": {\n           \"name\": \"Duis non\"\n          }\n         }\n        },\n        \"type\": \"non nisi\",\n        \"id\": \"consectetur\"\n       }\n      ],\n      \"properties\": \"fugiat est\"\n     },\n     \"paymentMethodIds\": [\n      -10916181,\n      -27042876\n     ],\n     \"entityId\": \"enim dolore tempor amet voluptate\",\n     \"entityType\": 4,\n     \"name\": \"laboris Duis sed\",\n     \"eTag\": \"dolor nisi enim reprehenderit velit\"\n    },\n    \"distance\": -53135546.6689643\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"veniam ad\",\n      \"city\": \"fugiat commodo cupidatat\",\n      \"country\": \"ea velit nisi\",\n      \"postcode\": \"incididunt deserunt amet\"\n     },\n     \"locationCode\": \"eiusmod ullamco et reprehenderit est\",\n     \"totalCapacity\": -69480975,\n     \"zoneId\": \"eu laboris tempor ut\",\n     \"authorityId\": \"magna\",\n     \"features\": {\n      \"type\": \"cillum Duis pariatur irure ex\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt tempor mollit e\",\n           \"crs\": {\n            \"type\": \"do cill\",\n            \"properties\": {\n             \"name\": \"pariatur cup\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur quis consectetur\",\n           \"crs\": {\n            \"type\": \"in irure sunt veniam reprehenderit\",\n            \"properties\": {\n             \"name\": \"ullamco labore pariatur proident nisi\"\n            }\n           }\n          }\n         ],\n         \"type\": \"incididunt reprehenderit\",\n         \"crs\": {\n          \"type\": \"id cillum voluptate\",\n          \"properties\": {\n           \"name\": \"in eu non\"\n          }\n         }\n        },\n        \"type\": \"id Excepteur adipisicing in\",\n        \"id\": \"ad lab\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore\",\n           \"crs\": {\n            \"type\": \"commo\",\n            \"properties\": {\n             \"name\": \"aliquip nulla qui consectetur\"\n            }\n           }\n          },\n          {\n           \"type\": \"tempor aute deserunt in\",\n           \"crs\": {\n            \"type\": \"est aliquip amet\",\n            \"properties\": {\n             \"name\": \"est non esse in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur consectetur elit laborum\",\n         \"crs\": {\n          \"type\": \"et reprehenderit nostrud\",\n          \"properties\": {\n           \"name\": \"non amet nostrud\"\n          }\n         }\n        },\n        \"type\": \"aliqua\",\n        \"id\": \"Ut in sunt\"\n       }\n      ],\n      \"properties\": \"ullamco\"\n     },\n     \"paymentMethodIds\": [\n      -75128776,\n      43126308\n     ],\n     \"entityId\": \"in\",\n     \"entityType\": 3,\n     \"name\": \"sed eiusmod Excepteur aliquip\",\n     \"eTag\": \"consequat Lorem\"\n    },\n    \"distance\": -40248726.616254605\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "386cf6fc-36fa-4924-85da-d0a003097d00",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "6e5974ce-ed50-4a9b-8ace-eb4803448f86",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e7ee9402-b3a0-4be9-bb50-f21a2332375a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6f9c622a-6312-4919-bfec-ff2d0b68e69f",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "b58b018d-b30e-4ff4-bdfc-87b2f7210a59",
      "name": "Find Parking entities by viewport",
      "request": {
        "name": "Find Parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\r\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip co\",\n            \"properties\": {\n                \"name\": \"eiusmod incididunt\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "9addd0ee-a603-4c71-8548-bb8d560a8670",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna exercitation\",\n            \"properties\": {\n                \"name\": \"elit consectetur Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"ipsum fugiat laboris\",\n      \"city\": \"irure labore\",\n      \"country\": \"irure ea\",\n      \"postcode\": \"id occaecat esse\"\n     },\n     \"locationCode\": \"id amet\",\n     \"totalCapacity\": 91740230,\n     \"zoneId\": \"esse dolor aliqua\",\n     \"authorityId\": \"in nostrud reprehenderit aliquip\",\n     \"features\": {\n      \"type\": \"amet elit adipisicing deserunt\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"Excepteur dolor\",\n           \"crs\": {\n            \"type\": \"fugiat labore do enim\",\n            \"properties\": {\n             \"name\": \"laborum labore\"\n            }\n           }\n          },\n          {\n           \"type\": \"cillum nulla\",\n           \"crs\": {\n            \"type\": \"ea\",\n            \"properties\": {\n             \"name\": \"culpa laborum proident qui ea\"\n            }\n           }\n          }\n         ],\n         \"type\": \"laborum culpa qu\",\n         \"crs\": {\n          \"type\": \"labore exercitation\",\n          \"properties\": {\n           \"name\": \"laboris dolor\"\n          }\n         }\n        },\n        \"type\": \"minim aute laboris quis\",\n        \"id\": \"nostrud labore veniam\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"est esse nostrud incididunt\",\n           \"crs\": {\n            \"type\": \"mollit magna quis\",\n            \"properties\": {\n             \"name\": \"laboris consequat\"\n            }\n           }\n          },\n          {\n           \"type\": \"laboris nostrud pariatur\",\n           \"crs\": {\n            \"type\": \"ad elit tempor\",\n            \"properties\": {\n             \"name\": \"dolore sit anim ipsum\"\n            }\n           }\n          }\n         ],\n         \"type\": \"quis velit mollit\",\n         \"crs\": {\n          \"type\": \"ad cillum officia sint\",\n          \"properties\": {\n           \"name\": \"Duis non\"\n          }\n         }\n        },\n        \"type\": \"non nisi\",\n        \"id\": \"consectetur\"\n       }\n      ],\n      \"properties\": \"fugiat est\"\n     },\n     \"paymentMethodIds\": [\n      -10916181,\n      -27042876\n     ],\n     \"entityId\": \"enim dolore tempor amet voluptate\",\n     \"entityType\": 4,\n     \"name\": \"laboris Duis sed\",\n     \"eTag\": \"dolor nisi enim reprehenderit velit\"\n    },\n    \"distance\": -53135546.6689643\n   },\n   {\n    \"entity\": {\n     \"address\": {\n      \"street\": \"veniam ad\",\n      \"city\": \"fugiat commodo cupidatat\",\n      \"country\": \"ea velit nisi\",\n      \"postcode\": \"incididunt deserunt amet\"\n     },\n     \"locationCode\": \"eiusmod ullamco et reprehenderit est\",\n     \"totalCapacity\": -69480975,\n     \"zoneId\": \"eu laboris tempor ut\",\n     \"authorityId\": \"magna\",\n     \"features\": {\n      \"type\": \"cillum Duis pariatur irure ex\",\n      \"features\": [\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"incididunt tempor mollit e\",\n           \"crs\": {\n            \"type\": \"do cill\",\n            \"properties\": {\n             \"name\": \"pariatur cup\"\n            }\n           }\n          },\n          {\n           \"type\": \"Excepteur quis consectetur\",\n           \"crs\": {\n            \"type\": \"in irure sunt veniam reprehenderit\",\n            \"properties\": {\n             \"name\": \"ullamco labore pariatur proident nisi\"\n            }\n           }\n          }\n         ],\n         \"type\": \"incididunt reprehenderit\",\n         \"crs\": {\n          \"type\": \"id cillum voluptate\",\n          \"properties\": {\n           \"name\": \"in eu non\"\n          }\n         }\n        },\n        \"type\": \"id Excepteur adipisicing in\",\n        \"id\": \"ad lab\"\n       },\n       {\n        \"properties\": {\n         \"basemap\": \"<integer>\"\n        },\n        \"geometry\": {\n         \"geometries\": [\n          {\n           \"type\": \"dolore\",\n           \"crs\": {\n            \"type\": \"commo\",\n            \"properties\": {\n             \"name\": \"aliquip nulla qui consectetur\"\n            }\n           }\n          },\n          {\n           \"type\": \"tempor aute deserunt in\",\n           \"crs\": {\n            \"type\": \"est aliquip amet\",\n            \"properties\": {\n             \"name\": \"est non esse in\"\n            }\n           }\n          }\n         ],\n         \"type\": \"pariatur consectetur elit laborum\",\n         \"crs\": {\n          \"type\": \"et reprehenderit nostrud\",\n          \"properties\": {\n           \"name\": \"non amet nostrud\"\n          }\n         }\n        },\n        \"type\": \"aliqua\",\n        \"id\": \"Ut in sunt\"\n       }\n      ],\n      \"properties\": \"ullamco\"\n     },\n     \"paymentMethodIds\": [\n      -75128776,\n      43126308\n     ],\n     \"entityId\": \"in\",\n     \"entityType\": 3,\n     \"name\": \"sed eiusmod Excepteur aliquip\",\n     \"eTag\": \"consequat Lorem\"\n    },\n    \"distance\": -40248726.616254605\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a90086d4-54fc-4fa1-b492-7720bc1509dc",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna exercitation\",\n            \"properties\": {\n                \"name\": \"elit consectetur Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7ceea803-5e15-4926-9a02-225008872146",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna exercitation\",\n            \"properties\": {\n                \"name\": \"elit consectetur Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c6f2fa04-0ab3-4b0b-b2ac-75d89f40b88b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna exercitation\",\n            \"properties\": {\n                \"name\": \"elit consectetur Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e25e1b8d-cf58-43b6-a210-48b6a8f827f6",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"magna exercitation\",\n            \"properties\": {\n                \"name\": \"elit consectetur Ut\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            4\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "89e1da6f-6258-49e8-9df8-4d45ac1038eb",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "6f6531a0-b152-4405-85b4-e9675bafd7ce",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"reprehenderit sunt\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"enim\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -18144714.084178522,\n      \"currency\": \"ut exercitation magna adipisicing\",\n      \"minCost\": -70179336.0752717,\n      \"minStayUntil\": \"consequat officia nostrud culpa\",\n      \"canExtendUntil\": \"ea ut in nostrud\",\n      \"pricedUntil\": \"officia cul\",\n      \"noReturnUntil\": \"nisi labore do\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -26137824,\n       -71119254\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"esse do\",\n      \"surcharge\": {\n       \"value\": 72989528.25477386,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -15613742\n       }\n      }\n     },\n     {\n      \"cost\": 12809024.866695613,\n      \"currency\": \"irure ut\",\n      \"minCost\": -77402503.89129111,\n      \"minStayUntil\": \"ea Duis nisi\",\n      \"canExtendUntil\": \"sit cillum\",\n      \"pricedUntil\": \"non sint Duis\",\n      \"noReturnUntil\": \"aute voluptate\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       77445954,\n       92104594\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nostrud Duis\",\n      \"surcharge\": {\n       \"value\": -24000517.34731634,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 10127833\n       }\n      }\n     }\n    ],\n    \"distance\": 80737107.83466104,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -91436334,\n      -46377239\n     ]\n    },\n    \"entityETag\": \"cupidatat fugiat sed dolor officia\"\n   },\n   {\n    \"entityId\": \"proiden\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -32614955.460557267,\n      \"currency\": \"dolor\",\n      \"minCost\": 90497403.70183602,\n      \"minStayUntil\": \"esse dolor in aute\",\n      \"canExtendUntil\": \"elit et in ut fugiat\",\n      \"pricedUntil\": \"consequat tempor magna deserunt in\",\n      \"noReturnUntil\": \"minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       52204182,\n       -45970323\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"voluptate si\",\n      \"surcharge\": {\n       \"value\": -39080830.3675533,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -579981\n       }\n      }\n     },\n     {\n      \"cost\": 12100915.656193092,\n      \"currency\": \"esse\",\n      \"minCost\": -55917407.449609466,\n      \"minStayUntil\": \"minim\",\n      \"canExtendUntil\": \"irure voluptate laborum pariatur\",\n      \"pricedUntil\": \"enim\",\n      \"noReturnUntil\": \"aliqua ea incididunt labore\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -60877395,\n       62459707\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ipsum voluptate Lorem eiusmod culpa\",\n      \"surcharge\": {\n       \"value\": -55790211.07032172,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -23222637\n       }\n      }\n     }\n    ],\n    \"distance\": -56075518.405820146,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -46073033,\n      87722042\n     ]\n    },\n    \"entityETag\": \"reprehenderit adipisicing aute\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0a81d734-39ec-4e53-ab5d-5123e15c58f1",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b6016038-2781-4573-a5f2-feade7a95e9a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "803ae78d-af9d-4dad-9bcf-1f132dfd27d7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "509eef88-931d-4dbe-9586-acf2137a884d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            2,\n            2\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "80dc53fb-1bdf-48f4-8bdd-6c3f4549bde9",
      "name": "Find Parking quotes by viewport",
      "request": {
        "name": "Find Parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window, \r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"amet\",\n            \"properties\": {\n                \"name\": \"sunt dolore mollit\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            3,\n            4\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "2beb0769-e4bd-4fa5-9299-61c0d6f9f965",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute officia anim\",\n            \"properties\": {\n                \"name\": \"aute labore sed ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"generalOnstreetPolicy\": 1,\n  \"requestedStartTime\": \"reprehenderit sunt\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"enim\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -18144714.084178522,\n      \"currency\": \"ut exercitation magna adipisicing\",\n      \"minCost\": -70179336.0752717,\n      \"minStayUntil\": \"consequat officia nostrud culpa\",\n      \"canExtendUntil\": \"ea ut in nostrud\",\n      \"pricedUntil\": \"officia cul\",\n      \"noReturnUntil\": \"nisi labore do\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       -26137824,\n       -71119254\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"esse do\",\n      \"surcharge\": {\n       \"value\": 72989528.25477386,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -15613742\n       }\n      }\n     },\n     {\n      \"cost\": 12809024.866695613,\n      \"currency\": \"irure ut\",\n      \"minCost\": -77402503.89129111,\n      \"minStayUntil\": \"ea Duis nisi\",\n      \"canExtendUntil\": \"sit cillum\",\n      \"pricedUntil\": \"non sint Duis\",\n      \"noReturnUntil\": \"aute voluptate\",\n      \"isFreeParking\": false,\n      \"paymentMethodIds\": [\n       77445954,\n       92104594\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"nostrud Duis\",\n      \"surcharge\": {\n       \"value\": -24000517.34731634,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 10127833\n       }\n      }\n     }\n    ],\n    \"distance\": 80737107.83466104,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 2,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -91436334,\n      -46377239\n     ]\n    },\n    \"entityETag\": \"cupidatat fugiat sed dolor officia\"\n   },\n   {\n    \"entityId\": \"proiden\",\n    \"entityType\": 2,\n    \"quotes\": [\n     {\n      \"cost\": -32614955.460557267,\n      \"currency\": \"dolor\",\n      \"minCost\": 90497403.70183602,\n      \"minStayUntil\": \"esse dolor in aute\",\n      \"canExtendUntil\": \"elit et in ut fugiat\",\n      \"pricedUntil\": \"consequat tempor magna deserunt in\",\n      \"noReturnUntil\": \"minim\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       52204182,\n       -45970323\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"voluptate si\",\n      \"surcharge\": {\n       \"value\": -39080830.3675533,\n       \"valueType\": 2,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -579981\n       }\n      }\n     },\n     {\n      \"cost\": 12100915.656193092,\n      \"currency\": \"esse\",\n      \"minCost\": -55917407.449609466,\n      \"minStayUntil\": \"minim\",\n      \"canExtendUntil\": \"irure voluptate laborum pariatur\",\n      \"pricedUntil\": \"enim\",\n      \"noReturnUntil\": \"aliqua ea incididunt labore\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       -60877395,\n       62459707\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"ipsum voluptate Lorem eiusmod culpa\",\n      \"surcharge\": {\n       \"value\": -55790211.07032172,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": \"<integer>\",\n         \"activityTypeId\": \"<integer>\",\n         \"fuelTypeId\": \"<integer>\",\n         \"permits\": [\n          {\n           \"permitTypeId\": \"<integer>\"\n          },\n          {\n           \"permitTypeId\": \"<integer>\"\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": -23222637\n       }\n      }\n     }\n    ],\n    \"distance\": -56075518.405820146,\n    \"parkingAllowed\": 1,\n    \"noParkingReason\": {\n     \"reasonType\": 1,\n     \"requiredContexts\": [\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      },\n      {\n       \"vehicleTypeId\": \"<integer>\",\n       \"activityTypeId\": \"<integer>\",\n       \"fuelTypeId\": \"<integer>\",\n       \"permits\": [\n        {\n         \"permitTypeId\": \"<integer>\"\n        },\n        {\n         \"permitTypeId\": \"<integer>\"\n        }\n       ]\n      }\n     ],\n     \"specialRestrictions\": [\n      -46073033,\n      87722042\n     ]\n    },\n    \"entityETag\": \"reprehenderit adipisicing aute\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1a7d2ff7-fc03-495f-bb70-39871cb54769",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute officia anim\",\n            \"properties\": {\n                \"name\": \"aute labore sed ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "47bb2776-7863-4210-8f3f-6a1413e57106",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute officia anim\",\n            \"properties\": {\n                \"name\": \"aute labore sed ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9b1249b1-78e2-4db0-a702-d714abb6e171",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute officia anim\",\n            \"properties\": {\n                \"name\": \"aute labore sed ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d3a8d3df-9a2d-416f-b990-42e86f353cb5",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute officia anim\",\n            \"properties\": {\n                \"name\": \"aute labore sed ex\"\n            }\n        }\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            4,\n            1\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "6823a09a-d742-45d8-859c-2214dc3f5e55",
      "name": "Find suggestions by Viewport",
      "request": {
        "name": "Find suggestions by Viewport",
        "description": {
          "content": "Returns information about areas not covered by parking entities. The results are indicative of the probability whether you can or cannot park in that area.\r\nAttention must be paid to the on street signage",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findSuggestionsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aute sed\",\n            \"properties\": {\n                \"name\": \"quis ipsum Lorem\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
        }
      },
      "response": [
        {
          "id": "0c381f31-d6d6-4587-bba2-5bfa3dd0578a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit aute\",\n            \"properties\": {\n                \"name\": \"reprehenderit cillum pariatur ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"type\": \"consequat\",\n  \"features\": [\n   {\n    \"properties\": {\n     \"suggestionType\": 2,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"tempor non\",\n     \"crs\": {\n      \"type\": \"ipsum tempor\",\n      \"properties\": {\n       \"name\": \"occaecat proident ut minim\"\n      }\n     }\n    },\n    \"type\": \"in esse\",\n    \"id\": \"deserunt\"\n   },\n   {\n    \"properties\": {\n     \"suggestionType\": 4,\n     \"baseMapTranslation\": \"<integer>\"\n    },\n    \"geometry\": {\n     \"type\": \"nulla culpa\",\n     \"crs\": {\n      \"type\": \"nisi officia\",\n      \"properties\": {\n       \"name\": \"Ut voluptate\"\n      }\n     }\n    },\n    \"type\": \"dolore reprehenderit in non pariatu\",\n    \"id\": \"dolor veniam adipisicing\"\n   }\n  ],\n  \"properties\": \"aliquip ut dolore elit amet\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9cf361e6-97fb-4682-be8a-1e4be54ca2f0",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit aute\",\n            \"properties\": {\n                \"name\": \"reprehenderit cillum pariatur ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7529fae6-dad0-4359-92c5-8e490ad5c38b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit aute\",\n            \"properties\": {\n                \"name\": \"reprehenderit cillum pariatur ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e0a51872-dd17-4805-8acf-4aad32a6f270",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit aute\",\n            \"properties\": {\n                \"name\": \"reprehenderit cillum pariatur ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ee333601-c793-4d28-bf01-2093b08cd01b",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findSuggestionsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"nulla mollit aute\",\n            \"properties\": {\n                \"name\": \"reprehenderit cillum pariatur ad\"\n            }\n        }\n    },\n    \"basemap\": \"<integer>\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "64d41016-a80f-422f-bfaf-6c018ddfc97f",
      "name": "Find Zone Default Rules by Viewport",
      "request": {
        "name": "Find Zone Default Rules by Viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"mollit dolor\",\n            \"properties\": {\n                \"name\": \"deserunt\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "05c019d7-a682-4435-9d8a-c75100f5c517",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip sit culpa aliqua nulla\",\n            \"properties\": {\n                \"name\": \"tempor quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"elit reprehenderit consectetur\",\n    \"entityETag\": \"sunt labore laboris cupidatat\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": -31697186,\n      \"specialRestrictionTypeId\": -64547432,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"officia enim aliqua ullamco\",\n        \"endTime\": \"dolor proident aliqua\",\n        \"maxStay\": 27667678\n       },\n       {\n        \"startTime\": \"quis\",\n        \"endTime\": \"officia fugiat\",\n        \"maxStay\": -91541206\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 9511524,\n      \"specialRestrictionTypeId\": 71793611,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"minim non in id\",\n        \"endTime\": \"incididunt magna deserunt\",\n        \"maxStay\": 64779587\n       },\n       {\n        \"startTime\": \"\",\n        \"endTime\": \"id eiusmod ad qui\",\n        \"maxStay\": 45063874\n       }\n      ]\n     }\n    ],\n    \"distance\": 28353060.206822976\n   },\n   {\n    \"entityId\": \"cupida\",\n    \"entityETag\": \"esse eu dolor\",\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 73696295,\n      \"specialRestrictionTypeId\": -32809010,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"dolore culpa non Duis cillum\",\n        \"endTime\": \"n\",\n        \"maxStay\": -53435533\n       },\n       {\n        \"startTime\": \"sint\",\n        \"endTime\": \"culpa\",\n        \"maxStay\": 70702368\n       }\n      ]\n     },\n     {\n      \"onStreetParkingTypeId\": 77648971,\n      \"specialRestrictionTypeId\": -43731082,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"nisi ea\",\n        \"endTime\": \"do ut\",\n        \"maxStay\": -73238316\n       },\n       {\n        \"startTime\": \"commodo ut\",\n        \"endTime\": \"aliquip ullamco\",\n        \"maxStay\": 78427452\n       }\n      ]\n     }\n    ],\n    \"distance\": 97894203.98892173\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"reprehenderit mollit\",\n   \"entityETag\": \"culpa\",\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 56771383,\n     \"specialRestrictionTypeId\": -32670098,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"velit D\",\n       \"endTime\": \"cupidatat ipsum\",\n       \"maxStay\": 92742739\n      },\n      {\n       \"startTime\": \"est aliquip\",\n       \"endTime\": \"ullamco nisi proident laborum labore\",\n       \"maxStay\": -92477357\n      }\n     ]\n    },\n    {\n     \"onStreetParkingTypeId\": 93565277,\n     \"specialRestrictionTypeId\": -99685687,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"nulla dolor\",\n       \"endTime\": \"laborum quis\",\n       \"maxStay\": 96875129\n      },\n      {\n       \"startTime\": \"esse sed exercitation id\",\n       \"endTime\": \"magna Lorem cillum voluptate velit\",\n       \"maxStay\": -93614944\n      }\n     ]\n    }\n   ],\n   \"distance\": 88672819.47088176\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "313b2869-4488-4f39-a588-423f37d068d8",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip sit culpa aliqua nulla\",\n            \"properties\": {\n                \"name\": \"tempor quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": false,\n \"message\": \"esse laborum in nulla\",\n \"errors\": [\n  {\n   \"property\": \"dolor cupidatat\",\n   \"code\": \"ea in\",\n   \"message\": \"dolore non\"\n  },\n  {\n   \"property\": \"enim commodo voluptate \",\n   \"code\": \"\",\n   \"message\": \"in\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "17ac2895-a01d-4d82-bd32-ad7bad100b6f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip sit culpa aliqua nulla\",\n            \"properties\": {\n                \"name\": \"tempor quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "668cc41e-be27-42d7-913a-3153a0d5a45d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip sit culpa aliqua nulla\",\n            \"properties\": {\n                \"name\": \"tempor quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c828e729-41f4-4375-84d0-2f036ec24108",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ],\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"aliquip sit culpa aliqua nulla\",\n            \"properties\": {\n                \"name\": \"tempor quis\"\n            }\n        }\n    },\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "f214a0aa-f3c4-4fb2-a42a-e6fef716903d",
      "name": "Monitor",
      "request": {
        "name": "Monitor",
        "description": {
          "content": "Returns information on the health of the Explorer API service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "monitor"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "63eb7219-05aa-433e-988f-d893a2b9dd21",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f8499014-4fbe-42ed-b5ab-b77ca3c65190",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "1b66248a-d79c-4312-9841-00e7e3bf5420",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6bc49f39-a39e-4e15-8a30-312a1c1ea055",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "monitor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "85a7f4ce-1748-4323-886f-3ad7ecce0e2f",
    "name": "Explorer API (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
