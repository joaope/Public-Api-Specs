openapi: 3.0.1
info:
  title: Security
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/security
paths:
  /addGroupsToUser:
    post:
      tags:
      - User
      summary: Add groups to user Id
      description: Add groups to user Id
      operationId: post-addgroupstouser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupsToUserCommand'
            example:
              groupIds:
              - string
              userId: string
          text/json:
            schema:
              $ref: '#/components/schemas/AddGroupsToUserCommand'
            example:
              groupIds:
              - string
              userId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddGroupsToUserCommand'
            example:
              groupIds:
              - string
              userId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /blockApiKey:
    post:
      tags:
      - ApiKey
      summary: Block API Key by cache Id
      description: Block API Key by cache Id
      operationId: post-blockapikey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApiKeyCommand'
            example:
              cacheId: string
          text/json:
            schema:
              $ref: '#/components/schemas/BlockApiKeyCommand'
            example:
              cacheId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BlockApiKeyCommand'
            example:
              cacheId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /bulkCreateUser:
    post:
      tags:
      - User
      summary: Creates new users in bulk
      description: Creates new users in bulk
      operationId: post-bulkcreateuser
      requestBody:
        description: The information of the users to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkNewUserCommand'
            example:
              redirect: string
              organisation: string
              csvData: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          text/json:
            schema:
              $ref: '#/components/schemas/BulkNewUserCommand'
            example:
              redirect: string
              organisation: string
              csvData: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BulkNewUserCommand'
            example:
              redirect: string
              organisation: string
              csvData: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkNewUserResultOkResponse'
              example:
                success: true
                result:
                  unsuccessfulInvitations:
                  - email: string
                    firstName: string
                    lastName: string
                    error: string
                  successfulInvitationsAsCsvData: string
                  hasErrors: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /changeUserEmail:
    post:
      tags:
      - User
      summary: Change user email
      description: Change user email
      operationId: post-changeuseremail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserEmailCommand'
            example:
              email: string
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeUserEmailCommand'
            example:
              email: string
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeUserEmailCommand'
            example:
              email: string
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createApiKey:
    post:
      tags:
      - ApiKey
      summary: Create API Key
      description: Create API Key
      operationId: post-createapikey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyCommand'
            example:
              organisation: string
              name: string
              groups:
              - string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyCommand'
            example:
              organisation: string
              name: string
              groups:
              - string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyCommand'
            example:
              organisation: string
              name: string
              groups:
              - string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedApiKeyOkResponse'
              example:
                success: true
                result:
                  apiKey:
                    id: string
                    organisation: string
                    blocked: true
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                    groups:
                    - string
                    managedGroups:
                    - string
                    lastLogin: string
                    cacheId: string
                    name: string
                    createdOn: string
                    email: string
                  key: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createApplication:
    post:
      tags:
      - Applications
      summary: Create application
      description: Create application
      operationId: post-createapplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationCommand'
            example:
              name: string
              description: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationCommand'
            example:
              name: string
              description: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationCommand'
            example:
              name: string
              description: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOkResponse'
              example:
                success: true
                result:
                  id: string
                  name: string
                  description: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createGroup:
    post:
      tags:
      - Groups
      summary: Create group
      description: Create group
      operationId: post-creategroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupCommand'
            example:
              name: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              organisationId: string
              id: string
              description: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGroupCommand'
            example:
              name: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              organisationId: string
              id: string
              description: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGroupCommand'
            example:
              name: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              organisationId: string
              id: string
              description: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOkResponse'
              example:
                success: true
                result:
                  id: string
                  name: string
                  description: string
                  organisationId: string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
                  groups:
                  - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createOrganisation:
    post:
      tags:
      - Organisation
      summary: Creates an organisation
      description: Creates an organisation
      operationId: post-createorganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationOkResponse'
              example:
                success: true
                result:
                  id: string
                  code: string
                  name: string
                  description: string
                  internalNotes: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createPermission:
    post:
      tags:
      - Permissions
      summary: Create permission
      description: Create permission
      operationId: post-createpermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionCommand'
            example:
              description: string
              name: string
              applicationId: string
              resourceTypeId: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionCommand'
            example:
              description: string
              name: string
              applicationId: string
              resourceTypeId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePermissionCommand'
            example:
              description: string
              name: string
              applicationId: string
              resourceTypeId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionOkResponse'
              example:
                success: true
                result:
                  id: string
                  name: string
                  description: string
                  resourceTypeId: string
                  applicationId: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createResourceType:
    post:
      tags:
      - ResourceType
      summary: Create resource type
      description: Create resource type
      operationId: post-createresourcetype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceTypeCommand'
            example:
              name: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateResourceTypeCommand'
            example:
              name: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateResourceTypeCommand'
            example:
              name: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeOkResponse'
              example:
                success: true
                result:
                  id: string
                  name: string
                  resources:
                  - id: string
                    name: string
                    value: string
                    resourceTypeId: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createRole:
    post:
      tags:
      - Role
      summary: Create role
      description: Create role
      operationId: post-createrole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleCommand'
            example:
              name: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRoleCommand'
            example:
              name: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRoleCommand'
            example:
              name: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOkResponse'
              example:
                success: true
                result:
                  id: string
                  name: string
                  description: string
                  isBuiltIn: true
                  permissions:
                  - string
                  applicationId: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /createUser:
    post:
      tags:
      - User
      summary: Create new user
      description: Create new user
      operationId: post-createuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
            example:
              redirect: string
              user:
                lastName: string
                organisation: string
                email: string
                firstName: string
                groups:
                - string
                roles:
                - roleId: string
                  resourceAssignments:
                  - resourceTypeId: string
                    resourceIds:
                    - string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
            example:
              redirect: string
              user:
                lastName: string
                organisation: string
                email: string
                firstName: string
                groups:
                - string
                roles:
                - roleId: string
                  resourceAssignments:
                  - resourceTypeId: string
                    resourceIds:
                    - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
            example:
              redirect: string
              user:
                lastName: string
                organisation: string
                email: string
                firstName: string
                groups:
                - string
                roles:
                - roleId: string
                  resourceAssignments:
                  - resourceTypeId: string
                    resourceIds:
                    - string
      responses:
        "200":
          description: Returns the user and the password reset link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUserOkResponse'
              example:
                success: true
                result:
                  user:
                    id: string
                    organisation: string
                    blocked: true
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                    groups:
                    - string
                    managedGroups:
                    - string
                    lastLogin: string
                    appyUserId: string
                    email: string
                    emailVerified: true
                    firstName: string
                    lastName: string
                    picture: string
                    isTestUser: true
                    isLegacyUser: true
                    isAuth0User: true
                    createdOn: string
                    loginType: string
                  passwordResetLink: string
        "400":
          description: If the request has any errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteApiKey:
    post:
      tags:
      - ApiKey
      summary: Delete API Key by cache Id
      description: Delete API Key by cache Id
      operationId: post-deleteapikey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyByCommand'
            example:
              cacheId: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyByCommand'
            example:
              cacheId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyByCommand'
            example:
              cacheId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteApplication:
    post:
      tags:
      - Applications
      summary: Delete application
      description: Delete application
      operationId: post-deleteapplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApplicationCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteApplicationCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteApplicationCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteGroup:
    post:
      tags:
      - Groups
      summary: Delete group
      description: Delete group
      operationId: post-deletegroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteGroupCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteOrganisation:
    post:
      tags:
      - Organisation
      summary: Deletes an organisation
      description: Deletes an organisation
      operationId: post-deleteorganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deletePermission:
    post:
      tags:
      - Permissions
      summary: Delete permission
      description: Delete permission
      operationId: post-deletepermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeletePermissionCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteResourceType:
    post:
      tags:
      - ResourceType
      summary: Delete resource type
      description: Delete resource type
      operationId: post-deleteresourcetype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceTypeCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceTypeCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteResourceTypeCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteRole:
    post:
      tags:
      - Role
      summary: Delete role
      description: Delete role
      operationId: post-deleterole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRoleCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRoleCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRoleCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /deleteUser:
    post:
      tags:
      - User
      summary: Delete a user
      description: Delete a user
      operationId: post-deleteuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteUserCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteUserCommand'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /exportApiKeys:
    get:
      tags:
      - ApiKey
      summary: /exportApiKeys - GET
      operationId: get-exportapikeys
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
              example: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /exportUsers:
    get:
      tags:
      - User
      summary: /exportUsers - GET
      operationId: get-exportusers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
              example: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllApiKeys:
    post:
      tags:
      - ApiKey
      summary: Fetch all API Keys
      description: Fetch all API Keys
      operationId: post-fetchallapikeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllApiKeysQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllApiKeysQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllApiKeysQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  organisation: string
                  blocked: true
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
                  groups:
                  - string
                  managedGroups:
                  - string
                  lastLogin: string
                  cacheId: string
                  name: string
                  createdOn: string
                  email: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllApplications:
    post:
      tags:
      - Applications
      summary: Fetch all applications
      description: Fetch all applications
      operationId: post-fetchallapplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
                  description: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllGroups:
    post:
      tags:
      - Groups
      summary: Fetch all groups
      description: Fetch all groups
      operationId: post-fetchallgroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllGroupsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllGroupsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllGroupsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
                  description: string
                  organisationId: string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
                  groups:
                  - string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllOrganisations:
    post:
      tags:
      - Organisation
      summary: Fetch all organisations
      description: Fetch all organisations
      operationId: post-fetchallorganisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllOrganisationsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllOrganisationsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllOrganisationsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  code: string
                  name: string
                  description: string
                  internalNotes: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllPermissions:
    post:
      tags:
      - Permissions
      summary: Fetch all permissions
      description: Fetch all permissions
      operationId: post-fetchallpermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllApplicationsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
                  description: string
                  resourceTypeId: string
                  applicationId: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllResourceTypes:
    post:
      tags:
      - ResourceType
      summary: Fetch all resource types
      description: Fetch all resource types
      operationId: post-fetchallresourcetypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllResourceTypesQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllResourceTypesQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllResourceTypesQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
                  resources:
                  - id: string
                    name: string
                    value: string
                    resourceTypeId: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllRoles:
    post:
      tags:
      - Role
      summary: Fetch all roles
      description: Fetch all roles
      operationId: post-fetchallroles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllRolesQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllRolesQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllRolesQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
                  description: string
                  isBuiltIn: true
                  permissions:
                  - string
                  applicationId: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchAllUsers:
    post:
      tags:
      - User
      summary: Fetch all users
      description: Fetch all users
      operationId: post-fetchallusers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAllUsersQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAllUsersQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAllUsersQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  organisation: string
                  blocked: true
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
                  groups:
                  - string
                  managedGroups:
                  - string
                  lastLogin: string
                  appyUserId: string
                  email: string
                  emailVerified: true
                  firstName: string
                  lastName: string
                  picture: string
                  isTestUser: true
                  isLegacyUser: true
                  isAuth0User: true
                  createdOn: string
                  loginType: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchApiKeysByIds:
    post:
      tags:
      - ApiKey
      summary: Fetch API Keys by ids
      description: Fetch API Keys by ids
      operationId: post-fetchapikeysbyids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchApiKeysByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
          text/json:
            schema:
              $ref: '#/components/schemas/FetchApiKeysByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchApiKeysByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResultIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  cacheId: string
                  email: string
                  name: string
                  organisation: string
                  createdOn: string
                  lastLogin: string
                  blocked: true
                  managedGroups:
                  - string
                  groups:
                  - string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchUserByEmail:
    post:
      tags:
      - User
      summary: Fetch user by email
      description: Fetch user by email
      operationId: post-fetchuserbyemail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUserByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
          text/json:
            schema:
              $ref: '#/components/schemas/FetchUserByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchUserByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultOkResponse'
              example:
                success: true
                result:
                  id: string
                  appyUserId: string
                  email: string
                  emailVerified: true
                  firstName: string
                  lastName: string
                  organisation: string
                  picture: string
                  createdOn: string
                  lastLogin: string
                  blocked: true
                  isTestUser: true
                  isLegacyUser: true
                  loginType: string
                  managedGroups:
                  - string
                  groups:
                  - string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchUsersByAppyUserIds:
    post:
      tags:
      - User
      summary: Fetch users by appy user ids
      description: Fetch users by appy user ids
      operationId: post-fetchusersbyappyuserids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByAppyUserIdsQuery'
            example:
              appyUserIds:
              - string
              includeRoles: true
              includeGroups: true
          text/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByAppyUserIdsQuery'
            example:
              appyUserIds:
              - string
              includeRoles: true
              includeGroups: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchUsersByAppyUserIdsQuery'
            example:
              appyUserIds:
              - string
              includeRoles: true
              includeGroups: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  appyUserId: string
                  email: string
                  emailVerified: true
                  firstName: string
                  lastName: string
                  organisation: string
                  picture: string
                  createdOn: string
                  lastLogin: string
                  blocked: true
                  isTestUser: true
                  isLegacyUser: true
                  loginType: string
                  managedGroups:
                  - string
                  groups:
                  - string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchUsersByEmail:
    post:
      tags:
      - User
      summary: Fetch users by email
      description: Fetch users by email
      operationId: post-fetchusersbyemail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
          text/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchUsersByEmailQuery'
            example:
              email: string
              includeRoles: true
              includeGroups: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultOkResponse'
              example:
                success: true
                result:
                  id: string
                  appyUserId: string
                  email: string
                  emailVerified: true
                  firstName: string
                  lastName: string
                  organisation: string
                  picture: string
                  createdOn: string
                  lastLogin: string
                  blocked: true
                  isTestUser: true
                  isLegacyUser: true
                  loginType: string
                  managedGroups:
                  - string
                  groups:
                  - string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /fetchUsersByIds:
    post:
      tags:
      - User
      summary: Fetch users by user ids
      description: Fetch users by user ids
      operationId: post-fetchusersbyids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
          text/json:
            schema:
              $ref: '#/components/schemas/FetchUsersByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchUsersByIdsQuery'
            example:
              ids:
              - string
              includeRoles: true
              includeGroups: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  appyUserId: string
                  email: string
                  emailVerified: true
                  firstName: string
                  lastName: string
                  organisation: string
                  picture: string
                  createdOn: string
                  lastLogin: string
                  blocked: true
                  isTestUser: true
                  isLegacyUser: true
                  loginType: string
                  managedGroups:
                  - string
                  groups:
                  - string
                  roles:
                  - roleId: string
                    resourceAssignments:
                    - resourceTypeId: string
                      resourceIds:
                      - string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /findApiKeysByNameStartingWith:
    post:
      tags:
      - ApiKey
      summary: Find API Keys by name starting with
      description: Find API Keys by name starting with
      operationId: post-findapikeysbynamestartingwith
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          text/json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResultPagedResultOkResponse'
              example:
                success: true
                result:
                  pageResult:
                  - id: string
                    cacheId: string
                    email: string
                    name: string
                    organisation: string
                    createdOn: string
                    lastLogin: string
                    blocked: true
                    managedGroups:
                    - string
                    groups:
                    - string
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                  pagingInfo:
                    requestedPage: 0
                    totalCount: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /findApiKeysByPrefixStartingWith:
    post:
      tags:
      - ApiKey
      summary: Find API Keys by prefix starting with
      description: Find API Keys by prefix starting with
      operationId: post-findapikeysbyprefixstartingwith
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByPrefixStartingWithQuery'
            example:
              prefix: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          text/json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByPrefixStartingWithQuery'
            example:
              prefix: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindApiKeysByPrefixStartingWithQuery'
            example:
              prefix: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResultPagedResultOkResponse'
              example:
                success: true
                result:
                  pageResult:
                  - id: string
                    cacheId: string
                    email: string
                    name: string
                    organisation: string
                    createdOn: string
                    lastLogin: string
                    blocked: true
                    managedGroups:
                    - string
                    groups:
                    - string
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                  pagingInfo:
                    requestedPage: 0
                    totalCount: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /findUsersByEmailStartingWith:
    post:
      tags:
      - User
      summary: Find users by email starting with
      description: Find users by email starting with
      operationId: post-findusersbyemailstartingwith
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindUsersByEmailStartingWithQuery'
            example:
              email: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          text/json:
            schema:
              $ref: '#/components/schemas/FindUsersByEmailStartingWithQuery'
            example:
              email: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindUsersByEmailStartingWithQuery'
            example:
              email: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultPagedResultOkResponse'
              example:
                success: true
                result:
                  pageResult:
                  - id: string
                    appyUserId: string
                    email: string
                    emailVerified: true
                    firstName: string
                    lastName: string
                    organisation: string
                    picture: string
                    createdOn: string
                    lastLogin: string
                    blocked: true
                    isTestUser: true
                    isLegacyUser: true
                    loginType: string
                    managedGroups:
                    - string
                    groups:
                    - string
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                  pagingInfo:
                    requestedPage: 0
                    totalCount: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /findUsersByNameStartingWith:
    post:
      tags:
      - User
      summary: Find users by name starting with
      description: Find users by name starting with
      operationId: post-findusersbynamestartingwith
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindUsersByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          text/json:
            schema:
              $ref: '#/components/schemas/FindUsersByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindUsersByNameStartingWithQuery'
            example:
              name: string
              organisationId: string
              pagingFilter:
                page: 0
                perPage: 0
                includeTotals: true
              includeGroups: true
              includeRoles: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResultPagedResultOkResponse'
              example:
                success: true
                result:
                  pageResult:
                  - id: string
                    appyUserId: string
                    email: string
                    emailVerified: true
                    firstName: string
                    lastName: string
                    organisation: string
                    picture: string
                    createdOn: string
                    lastLogin: string
                    blocked: true
                    isTestUser: true
                    isLegacyUser: true
                    loginType: string
                    managedGroups:
                    - string
                    groups:
                    - string
                    roles:
                    - roleId: string
                      resourceAssignments:
                      - resourceTypeId: string
                        resourceIds:
                        - string
                  pagingInfo:
                    requestedPage: 0
                    totalCount: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /permission/token:
    get:
      tags:
      - LegacyPermissions
      summary: Takes a token without permissions and embeds the permissions in the returned token
      description: Takes a token without permissions and embeds the permissions in the returned token
      operationId: get-permission-token
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: 
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /resendVerificationEmail:
    post:
      tags:
      - User
      summary: Resends verification email
      description: Resends verification email
      operationId: post-resendverificationemail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailCommand'
            example:
              email: string
          text/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailCommand'
            example:
              email: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailCommand'
            example:
              email: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /resetUserPassword:
    post:
      tags:
      - User
      summary: Request user password reset
      description: Request user password reset
      operationId: post-resetuserpassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetUserPasswordCommand'
            example:
              redirectUrl: string
              userId: string
              createAsSignup: true
          text/json:
            schema:
              $ref: '#/components/schemas/ResetUserPasswordCommand'
            example:
              redirectUrl: string
              userId: string
              createAsSignup: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetUserPasswordCommand'
            example:
              redirectUrl: string
              userId: string
              createAsSignup: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /unblockApiKey:
    post:
      tags:
      - ApiKey
      summary: Unblock API Key by cache Id
      description: Unblock API Key by cache Id
      operationId: post-unblockapikey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockApiKeyCommand'
            example:
              cacheId: string
          text/json:
            schema:
              $ref: '#/components/schemas/UnblockApiKeyCommand'
            example:
              cacheId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnblockApiKeyCommand'
            example:
              cacheId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                success: true
                message: string
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateApiKey:
    post:
      tags:
      - ApiKey
      summary: Update API Key
      description: Update API Key
      operationId: post-updateapikey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateApplication:
    post:
      tags:
      - Applications
      summary: Update application
      description: Update application
      operationId: post-updateapplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationCommand'
            example:
              name: string
              id: string
              description: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationCommand'
            example:
              name: string
              id: string
              description: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationCommand'
            example:
              name: string
              id: string
              description: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateGroup:
    post:
      tags:
      - Groups
      summary: Update group
      description: Update group
      operationId: post-updategroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              description: string
              organisationId: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              description: string
              organisationId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateGroupCommand'
            example:
              name: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
              description: string
              organisationId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateOrganisation:
    post:
      tags:
      - Organisation
      summary: Update an organisation
      description: Update an organisation
      operationId: post-updateorganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationCommand'
            example:
              code: string
              name: string
              internalNotes: string
              description: string
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updatePermission:
    post:
      tags:
      - Permissions
      summary: Update permission
      description: Update permission
      operationId: post-updatepermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionCommand'
            example:
              description: string
              name: string
              id: string
              applicationId: string
              resourceTypeId: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionCommand'
            example:
              description: string
              name: string
              id: string
              applicationId: string
              resourceTypeId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionCommand'
            example:
              description: string
              name: string
              id: string
              applicationId: string
              resourceTypeId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateResourceType:
    post:
      tags:
      - ResourceType
      summary: Update resource type
      description: Update resource type
      operationId: post-updateresourcetype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceTypeCommand'
            example:
              name: string
              id: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceTypeCommand'
            example:
              name: string
              id: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateResourceTypeCommand'
            example:
              name: string
              id: string
              resources:
              - id: string
                name: string
                value: string
                resourceTypeId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateRole:
    post:
      tags:
      - Role
      summary: Update role
      description: Update role
      operationId: post-updaterole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleCommand'
            example:
              name: string
              id: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleCommand'
            example:
              name: string
              id: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateRoleCommand'
            example:
              name: string
              id: string
              permissions:
              - string
              applicationId: string
              description: string
              isBuiltIn: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /updateUser:
    post:
      tags:
      - User
      summary: Update a user
      description: Update a user
      operationId: post-updateuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
            example:
              lastName: string
              firstName: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
            example:
              lastName: string
              firstName: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
            example:
              lastName: string
              firstName: string
              id: string
              roles:
              - roleId: string
                resourceAssignments:
                - resourceTypeId: string
                  resourceIds:
                  - string
              groups:
              - string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: true
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /webhooks/auth0:
    post:
      tags:
      - WebHooks
      summary: /webhooks/auth0 - POST
      operationId: post-webhooks-auth0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
            example:
              date: string
              type: string
              description: string
              connection: string
              connection_id: string
              client_id: string
              client_name: string
              ip: string
              hostname: string
              user_id: string
              user_name: string
              strategy: string
              StrategyType: string
              log_id: string
              _id: string
              isMobile: true
              user_agent: string
          text/json:
            schema:
              $ref: '#/components/schemas/Message'
            example:
              date: string
              type: string
              description: string
              connection: string
              connection_id: string
              client_id: string
              client_name: string
              ip: string
              hostname: string
              user_id: string
              user_name: string
              strategy: string
              StrategyType: string
              log_id: string
              _id: string
              isMobile: true
              user_agent: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/Message'
            example:
              date: string
              type: string
              description: string
              connection: string
              connection_id: string
              client_id: string
              client_name: string
              ip: string
              hostname: string
              user_id: string
              user_name: string
              strategy: string
              StrategyType: string
              log_id: string
              _id: string
              isMobile: true
              user_agent: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    AddGroupsToUserCommand:
      required:
      - groupIds
      - userId
      type: object
      properties:
        userId:
          minLength: 1
          type: string
        groupIds:
          minLength: 1
          type: array
          items:
            type: string
      additionalProperties: false
    ApiKey:
      type: object
      properties:
        id:
          type: string
          nullable: true
        organisation:
          type: string
          description: Organisation this belongs to.
          nullable: true
        blocked:
          type: boolean
          description: Currently blocked from logging in
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
        managedGroups:
          type: array
          items:
            type: string
          nullable: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
        cacheId:
          type: string
          description: The identifier to be used when performing operations on the API Key
          nullable: true
        name:
          type: string
          description: Display name of the API Key
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    ApiKeyIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ApiKey'
          nullable: true
      additionalProperties: false
    ApiKeyResult:
      type: object
      properties:
        id:
          type: string
          nullable: true
        cacheId:
          type: string
          description: The identifier to be used when performing operations on the API Key
          nullable: true
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        organisation:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
        blocked:
          type: boolean
          description: Currently blocked from logging in
          nullable: true
        managedGroups:
          type: array
          items:
            type: string
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
      additionalProperties: false
    ApiKeyResultIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ApiKeyResult'
          nullable: true
      additionalProperties: false
    ApiKeyResultPagedResult:
      type: object
      properties:
        pageResult:
          type: array
          items:
            $ref: '#/components/schemas/ApiKeyResult'
          nullable: true
        pagingInfo:
          $ref: '#/components/schemas/PagingInfo'
      additionalProperties: false
    ApiKeyResultPagedResultOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/ApiKeyResultPagedResult'
      additionalProperties: false
    Application:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    ApplicationIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Application'
          nullable: true
      additionalProperties: false
    ApplicationOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/Application'
      additionalProperties: false
    BadRequestResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          nullable: true
      additionalProperties: false
    BlockApiKeyCommand:
      required:
      - cacheId
      type: object
      properties:
        cacheId:
          minLength: 1
          type: string
      additionalProperties: false
    BulkNewUserCommand:
      required:
      - csvData
      - organisation
      - redirect
      type: object
      properties:
        csvData:
          minLength: 1
          type: string
        organisation:
          minLength: 1
          type: string
        redirect:
          minLength: 1
          type: string
        groups:
          type: array
          items:
            type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
      additionalProperties: false
    BulkNewUserResult:
      type: object
      properties:
        unsuccessfulInvitations:
          type: array
          items:
            $ref: '#/components/schemas/UnsuccessfulInvitation'
          nullable: true
        successfulInvitationsAsCsvData:
          type: string
          nullable: true
        hasErrors:
          type: boolean
      additionalProperties: false
    BulkNewUserResultOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/BulkNewUserResult'
      additionalProperties: false
    ChangeUserEmailCommand:
      required:
      - email
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
          format: email
      additionalProperties: false
    CreateApiKeyCommand:
      required:
      - name
      - organisation
      type: object
      properties:
        name:
          minLength: 1
          type: string
        organisation:
          minLength: 1
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CreateApplicationCommand:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
    CreatedApiKey:
      type: object
      properties:
        apiKey:
          $ref: '#/components/schemas/ApiKey'
        key:
          type: string
          description: Value to add in to the API-KEY header
          nullable: true
      additionalProperties: false
    CreatedApiKeyOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/CreatedApiKey'
      additionalProperties: false
    CreatedUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        passwordResetLink:
          type: string
          nullable: true
      additionalProperties: false
    CreatedUserOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/CreatedUser'
      additionalProperties: false
    CreateGroupCommand:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        id:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CreateOrganisationCommand:
      required:
      - code
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        id:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        internalNotes:
          type: string
          nullable: true
      additionalProperties: false
    CreatePermissionCommand:
      required:
      - description
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        resourceTypeId:
          type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    CreateResourceTypeCommand:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
      additionalProperties: false
    CreateRoleCommand:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        isBuiltIn:
          type: boolean
        permissions:
          type: array
          items:
            type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    CreateUserCommand:
      required:
      - redirect
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/CreateUserParams'
        redirect:
          minLength: 1
          type: string
          description: URL the user should be redirected to after his first login
      additionalProperties: false
    CreateUserParams:
      required:
      - email
      - firstName
      - lastName
      - organisation
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        firstName:
          minLength: 1
          type: string
        lastName:
          minLength: 1
          type: string
        organisation:
          minLength: 1
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DeleteApiKeyByCommand:
      required:
      - cacheId
      type: object
      properties:
        cacheId:
          minLength: 1
          type: string
      additionalProperties: false
    DeleteApplicationCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    DeleteGroupCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    DeletePermissionCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    DeleteResourceTypeCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    DeleteRoleCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    DeleteUserCommand:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
      additionalProperties: false
    Error:
      type: object
      properties:
        property:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    FetchAllApiKeysQuery:
      type: object
      additionalProperties: false
    FetchAllApplicationsQuery:
      type: object
      additionalProperties: false
    FetchAllGroupsQuery:
      type: object
      additionalProperties: false
    FetchAllOrganisationsQuery:
      type: object
      additionalProperties: false
    FetchAllResourceTypesQuery:
      type: object
      additionalProperties: false
    FetchAllRolesQuery:
      type: object
      additionalProperties: false
    FetchAllUsersQuery:
      type: object
      additionalProperties: false
    FetchApiKeysByIdsQuery:
      required:
      - ids
      type: object
      properties:
        ids:
          minLength: 1
          type: array
          items:
            type: string
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FetchUserByEmailQuery:
      required:
      - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FetchUsersByAppyUserIdsQuery:
      required:
      - appyUserIds
      type: object
      properties:
        appyUserIds:
          minLength: 1
          type: array
          items:
            type: string
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FetchUsersByEmailQuery:
      required:
      - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FetchUsersByIdsQuery:
      required:
      - ids
      type: object
      properties:
        ids:
          minLength: 1
          type: array
          items:
            type: string
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FindApiKeysByNameStartingWithQuery:
      type: object
      properties:
        name:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        pagingFilter:
          $ref: '#/components/schemas/PagingFilter'
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FindApiKeysByPrefixStartingWithQuery:
      type: object
      properties:
        prefix:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        pagingFilter:
          $ref: '#/components/schemas/PagingFilter'
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FindUsersByEmailStartingWithQuery:
      type: object
      properties:
        email:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        pagingFilter:
          $ref: '#/components/schemas/PagingFilter'
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    FindUsersByNameStartingWithQuery:
      type: object
      properties:
        name:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        pagingFilter:
          $ref: '#/components/schemas/PagingFilter'
        includeGroups:
          type: boolean
        includeRoles:
          type: boolean
      additionalProperties: false
    Group:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GroupIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          nullable: true
      additionalProperties: false
    GroupOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/Group'
      additionalProperties: false
    Message:
      type: object
      properties:
        date:
          type: string
          format: date-time
        type:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        connection:
          type: string
          nullable: true
        connection_id:
          type: string
          nullable: true
        client_id:
          type: string
          nullable: true
        client_name:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
        hostname:
          type: string
          nullable: true
        user_id:
          type: string
          nullable: true
        user_name:
          type: string
          nullable: true
        strategy:
          type: string
          nullable: true
        StrategyType:
          type: string
          nullable: true
        log_id:
          type: string
          nullable: true
        _id:
          type: string
          nullable: true
        isMobile:
          type: boolean
        user_agent:
          type: string
          nullable: true
      additionalProperties: false
    NotFoundResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    OkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
      additionalProperties: false
    Organisation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        internalNotes:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
          nullable: true
      additionalProperties: false
    OrganisationOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/Organisation'
      additionalProperties: false
    PagingFilter:
      type: object
      properties:
        page:
          type: integer
          description: Page number of the results to return. First page is 0.
          format: int32
        perPage:
          type: integer
          description: Number of results per page.
          format: int32
        includeTotals:
          type: boolean
          description: Return results with a total count information if set to true.
      additionalProperties: false
    PagingInfo:
      type: object
      properties:
        requestedPage:
          type: integer
          description: The requested page
          format: int32
        totalCount:
          type: integer
          description: Total number of items available. This value is included if IncludeTotals is set to true.
          format: int32
          nullable: true
      additionalProperties: false
    Permission:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        resourceTypeId:
          type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    PermissionIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          nullable: true
      additionalProperties: false
    PermissionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/Permission'
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ResendVerificationEmailCommand:
      required:
      - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
      additionalProperties: false
    ResetUserPasswordCommand:
      required:
      - redirectUrl
      - userId
      type: object
      properties:
        userId:
          minLength: 1
          type: string
        redirectUrl:
          minLength: 1
          type: string
        createAsSignup:
          type: boolean
      additionalProperties: false
    Resource:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        resourceTypeId:
          type: string
          nullable: true
      additionalProperties: false
    ResourceAssignment:
      type: object
      properties:
        resourceTypeId:
          type: string
          nullable: true
        resourceIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ResourceType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
      additionalProperties: false
    ResourceTypeIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          nullable: true
      additionalProperties: false
    ResourceTypeOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/ResourceType'
      additionalProperties: false
    Role:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isBuiltIn:
          type: boolean
        permissions:
          type: array
          items:
            type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    RoleAssignment:
      type: object
      properties:
        roleId:
          type: string
          nullable: true
        resourceAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAssignment'
          nullable: true
      additionalProperties: false
    RoleIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
      additionalProperties: false
    RoleOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
    UnblockApiKeyCommand:
      required:
      - cacheId
      type: object
      properties:
        cacheId:
          minLength: 1
          type: string
      additionalProperties: false
    UnsuccessfulInvitation:
      type: object
      properties:
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
      additionalProperties: false
    UpdateApiKeyCommand:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        groups:
          type: array
          items:
            type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
      additionalProperties: false
    UpdateApplicationCommand:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
    UpdateGroupCommand:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UpdateOrganisationCommand:
      required:
      - code
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        id:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        internalNotes:
          type: string
          nullable: true
      additionalProperties: false
    UpdatePermissionCommand:
      required:
      - description
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        resourceTypeId:
          type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateResourceTypeCommand:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
      additionalProperties: false
    UpdateRoleCommand:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        isBuiltIn:
          type: boolean
        permissions:
          type: array
          items:
            type: string
          nullable: true
        applicationId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateUserCommand:
      required:
      - firstName
      - id
      - lastName
      type: object
      properties:
        id:
          minLength: 1
          type: string
        firstName:
          minLength: 1
          type: string
        lastName:
          minLength: 1
          type: string
        groups:
          type: array
          items:
            type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        organisation:
          type: string
          description: Organisation this belongs to.
          nullable: true
        blocked:
          type: boolean
          description: Currently blocked from logging in
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
        managedGroups:
          type: array
          items:
            type: string
          nullable: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
        appyUserId:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        emailVerified:
          type: boolean
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        picture:
          type: string
          nullable: true
        isTestUser:
          type: boolean
          nullable: true
        isLegacyUser:
          type: boolean
          nullable: true
        isAuth0User:
          type: boolean
        createdOn:
          type: string
          format: date-time
          nullable: true
        loginType:
          type: string
          nullable: true
      additionalProperties: false
    UserIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
      additionalProperties: false
    UserResult:
      type: object
      properties:
        id:
          type: string
          nullable: true
        appyUserId:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        emailVerified:
          type: boolean
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        organisation:
          type: string
          nullable: true
        picture:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
        blocked:
          type: boolean
          description: Currently blocked from logging in
          nullable: true
        isTestUser:
          type: boolean
          nullable: true
        isLegacyUser:
          type: boolean
          nullable: true
        loginType:
          type: string
          description: Primary Login Type base on Identity Providers
          nullable: true
        managedGroups:
          type: array
          items:
            type: string
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          nullable: true
      additionalProperties: false
    UserResultIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/UserResult'
          nullable: true
      additionalProperties: false
    UserResultOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/UserResult'
      additionalProperties: false
    UserResultPagedResult:
      type: object
      properties:
        pageResult:
          type: array
          items:
            $ref: '#/components/schemas/UserResult'
          nullable: true
        pagingInfo:
          $ref: '#/components/schemas/PagingInfo'
      additionalProperties: false
    UserResultPagedResultOkResponse:
      type: object
      properties:
        success:
          type: boolean
          readOnly: true
        result:
          $ref: '#/components/schemas/UserResultPagedResult'
      additionalProperties: false
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

