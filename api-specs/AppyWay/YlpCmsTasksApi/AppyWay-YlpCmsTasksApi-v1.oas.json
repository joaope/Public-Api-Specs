{
  "openapi": "3.0.1",
  "info": {
    "title": "CMS Tasks",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.appyway.com/v1/traffic-tasks"
    }
  ],
  "paths": {
    "/index/carpark": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "/index/carpark - GET",
        "operationId": "get-index-carpark",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/index/onstreet": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "/index/onstreet - GET",
        "operationId": "get-index-onstreet",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/index/prefixes": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "/index/prefixes - GET",
        "operationId": "get-index-prefixes",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/add-centerlines": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/add-centerlines - POST",
        "operationId": "post-tasks-add-centerlines",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "authorityId": {
                    "type": "string"
                  },
                  "authorityName": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/add-kerbedge": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/add-kerbedge - POST",
        "operationId": "post-tasks-add-kerbedge",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "authorityId": {
                    "type": "string"
                  },
                  "authorityName": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/apply-order": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/apply-order - POST",
        "operationId": "post-tasks-apply-order",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyOrderToMaster"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyOrderToMaster"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyOrderToMaster"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyOrderToMaster"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/build-carpark-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/build-carpark-index - POST",
        "operationId": "post-tasks-build-carpark-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCarparkIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCarparkIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCarparkIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCarparkIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/build-onstreet-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/build-onstreet-index - POST",
        "operationId": "post-tasks-build-onstreet-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOnStreetIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOnStreetIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOnStreetIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOnStreetIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/calculate-coverage": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/calculate-coverage - POST",
        "operationId": "post-tasks-calculate-coverage",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCoverage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCoverage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCoverage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCoverage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/cancel/{taskId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/cancel/{taskId} - GET",
        "operationId": "get-tasks-cancel-taskid",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/clear-test-orders": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/clear-test-orders - POST",
        "operationId": "post-tasks-clear-test-orders",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearTestOrders"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearTestOrders"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearTestOrders"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClearTestOrders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/convert-to-basemap": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/convert-to-basemap - POST",
        "operationId": "post-tasks-convert-to-basemap",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToBaseMap"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToBaseMap"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToBaseMap"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToBaseMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/create-initial-order": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/create-initial-order - POST",
        "operationId": "post-tasks-create-initial-order",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialOrderForAuthority"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialOrderForAuthority"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialOrderForAuthority"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInitialOrderForAuthority"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/current": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/current - GET",
        "operationId": "get-tasks-current",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/delete-carpark-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/delete-carpark-index - POST",
        "operationId": "post-tasks-delete-carpark-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCarparkIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCarparkIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCarparkIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCarparkIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/delete-onstreet-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/delete-onstreet-index - POST",
        "operationId": "post-tasks-delete-onstreet-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOnstreetIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOnstreetIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOnstreetIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOnstreetIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/deploy-carpark-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/deploy-carpark-index - POST",
        "operationId": "post-tasks-deploy-carpark-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeployCarparkIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployCarparkIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployCarparkIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeployCarparkIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/deploy-onstreet-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/deploy-onstreet-index - POST",
        "operationId": "post-tasks-deploy-onstreet-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeployOnstreetIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployOnstreetIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployOnstreetIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeployOnstreetIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/execute-carpark-import": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/execute-carpark-import - POST",
        "operationId": "post-tasks-execute-carpark-import",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCarparkImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCarparkImport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCarparkImport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCarparkImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/execute-standard-import": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/execute-standard-import - POST",
        "operationId": "post-tasks-execute-standard-import",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "OrderId": {
                    "type": "string"
                  },
                  "AuthorityId": {
                    "type": "string"
                  },
                  "AuthorityName": {
                    "type": "string"
                  },
                  "Files": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/generate-moving-order-docs": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/generate-moving-order-docs - POST",
        "operationId": "post-tasks-generate-moving-order-docs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMovingOrderDocuments"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMovingOrderDocuments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMovingOrderDocuments"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMovingOrderDocuments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/generate-order-docs": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/generate-order-docs - POST",
        "operationId": "post-tasks-generate-order-docs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOrderDocuments"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOrderDocuments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOrderDocuments"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOrderDocuments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/history": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/history - GET",
        "operationId": "get-tasks-history",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/history/{taskId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/history/{taskId} - GET",
        "operationId": "get-tasks-history-taskid",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/import-elgin-suspensions": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/import-elgin-suspensions - POST",
        "operationId": "post-tasks-import-elgin-suspensions",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportElginSuspensions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportElginSuspensions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportElginSuspensions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportElginSuspensions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/make-orders": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/make-orders - POST",
        "operationId": "post-tasks-make-orders",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/mark-experimental-change-sets-as-made": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/mark-experimental-change-sets-as-made - POST",
        "operationId": "post-tasks-mark-experimental-change-sets-as-made",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkExperimentalChangeSetsAsMade"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkExperimentalChangeSetsAsMade"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkExperimentalChangeSetsAsMade"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkExperimentalChangeSetsAsMade"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/prepare-files": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/prepare-files - POST",
        "operationId": "post-tasks-prepare-files",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareFiles"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareFiles"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareFiles"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/propose-orders": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/propose-orders - POST",
        "operationId": "post-tasks-propose-orders",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/rebuild-search-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/rebuild-search-index - POST",
        "operationId": "post-tasks-rebuild-search-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RebuildSearchIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RebuildSearchIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RebuildSearchIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RebuildSearchIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/redeploy-master": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/redeploy-master - POST",
        "operationId": "post-tasks-redeploy-master",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildAndDeployMasterIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildAndDeployMasterIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildAndDeployMasterIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildAndDeployMasterIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/test-onstreet-index": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/test-onstreet-index - POST",
        "operationId": "post-tasks-test-onstreet-index",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestOnStreetIndex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestOnStreetIndex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestOnStreetIndex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestOnStreetIndex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/tasks/validate-order": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "/tasks/validate-order - POST",
        "operationId": "post-tasks-validate-order",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOrder"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOrder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/test/operating-hours": {
      "post": {
        "tags": [
          "Test"
        ],
        "summary": "/test/operating-hours - POST",
        "operationId": "post-test-operating-hours",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatingHoursTest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatingHoursTest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatingHoursTest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatingHoursTest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/testsets": {
      "get": {
        "tags": [
          "TestSet"
        ],
        "summary": "/testsets - GET",
        "operationId": "get-testsets",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "post": {
        "tags": [
          "TestSet"
        ],
        "summary": "/testsets - POST",
        "operationId": "post-testsets",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/testsets/{id}": {
      "get": {
        "tags": [
          "TestSet"
        ],
        "summary": "/testsets/{id} - GET",
        "operationId": "get-testsets-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "tags": [
          "TestSet"
        ],
        "summary": "/testsets/{id} - DELETE",
        "operationId": "delete-testsets-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/testsets/try": {
      "post": {
        "tags": [
          "TestSet"
        ],
        "summary": "/testsets/try - POST",
        "operationId": "post-testsets-try",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BuildAndDeployMasterIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RebuildSearchIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildOnStreetIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "authorityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteOnstreetIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeployOnstreetIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestOnStreetIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildCarparkIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "partitions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteCarparkIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeployCarparkIndex": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkExperimentalChangeSetsAsMade": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplyOrderToMaster": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConvertToBaseMap": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "authorityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PrepareFiles": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalculateCoverage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ExecuteCarparkImport": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInitialOrderForAuthority": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "authorityId": {
            "type": "string",
            "nullable": true
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateOrderDocuments": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GenerateMovingOrderDocuments": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrderValidationState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ValidateOrder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "validationState": {
            "$ref": "#/components/schemas/OrderValidationState"
          },
          "validationReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClearTestOrders": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportElginSuspensions": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatingHoursTest": {
        "type": "object",
        "properties": {
          "orderType": {
            "type": "string",
            "nullable": true
          },
          "operatingHours": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Test": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Test"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestRequest": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "apiKey": {
        "name": "API-KEY",
        "in": "header",
        "type": "apiKey"
      },
      "oAuth2": {
        "flows": {
          "authorizationCode": {
            "scopes": {},
            "authorizationUrl": "https://auth.appyway.com/authorize",
            "tokenUrl": "https://auth.appyway.com/oauth/token"
          }
        },
        "type": "oauth2"
      }
    },
    "responses": {
      "TooManyRequests": {
        "description": "Too many requests"
      },
      "Unauthorized": {
        "description": "Unauthorized"
      },
      "Forbidden": {
        "description": "Forbidden"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    },
    {
      "oAuth2": []
    }
  ]
}
