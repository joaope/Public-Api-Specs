openapi: 3.0.1
info:
  title: CMS Tasks
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/traffic-tasks
paths:
  /index/carpark:
    get:
      tags:
      - Index
      summary: /index/carpark - GET
      operationId: get-index-carpark
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /index/onstreet:
    get:
      tags:
      - Index
      summary: /index/onstreet - GET
      operationId: get-index-onstreet
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /index/prefixes:
    get:
      tags:
      - Index
      summary: /index/prefixes - GET
      operationId: get-index-prefixes
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/add-authority-logo:
    post:
      tags:
      - Tasks
      summary: /tasks/add-authority-logo - POST
      operationId: post-tasks-add-authority-logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                authorityId:
                  type: string
                authorityName:
                  type: string
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                Length:
                  type: integer
                Name:
                  type: string
                FileName:
                  type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/add-centerlines:
    post:
      tags:
      - Tasks
      summary: /tasks/add-centerlines - POST
      operationId: post-tasks-add-centerlines
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                authorityId:
                  type: string
                authorityName:
                  type: string
                reproject:
                  type: boolean
                files:
                  type: array
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/add-kerbedge:
    post:
      tags:
      - Tasks
      summary: /tasks/add-kerbedge - POST
      operationId: post-tasks-add-kerbedge
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                authorityId:
                  type: string
                authorityName:
                  type: string
                reproject:
                  type: boolean
                files:
                  type: array
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/apply-changesets:
    post:
      tags:
      - Tasks
      summary: /tasks/apply-changesets - POST
      operationId: post-tasks-apply-changesets
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplyChangeSets'
            example:
              name: string
              user: string
              orderId: string
              changeSetIds:
              - string
              dateOverride: string
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyChangeSets'
            example:
              name: string
              user: string
              orderId: string
              changeSetIds:
              - string
              dateOverride: string
          text/json:
            schema:
              $ref: '#/components/schemas/ApplyChangeSets'
            example:
              name: string
              user: string
              orderId: string
              changeSetIds:
              - string
              dateOverride: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplyChangeSets'
            example:
              name: string
              user: string
              orderId: string
              changeSetIds:
              - string
              dateOverride: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/apply-order:
    post:
      tags:
      - Tasks
      summary: /tasks/apply-order - POST
      operationId: post-tasks-apply-order
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplyOrderToMaster'
            example:
              name: string
              user: string
              orderId: string
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyOrderToMaster'
            example:
              name: string
              user: string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/ApplyOrderToMaster'
            example:
              name: string
              user: string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplyOrderToMaster'
            example:
              name: string
              user: string
              orderId: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/build-carpark-index:
    post:
      tags:
      - Tasks
      summary: /tasks/build-carpark-index - POST
      operationId: post-tasks-build-carpark-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BuildCarparkIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              partitions:
              - string
          application/json:
            schema:
              $ref: '#/components/schemas/BuildCarparkIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              partitions:
              - string
          text/json:
            schema:
              $ref: '#/components/schemas/BuildCarparkIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              partitions:
              - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BuildCarparkIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              partitions:
              - string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/build-onstreet-index:
    post:
      tags:
      - Tasks
      summary: /tasks/build-onstreet-index - POST
      operationId: post-tasks-build-onstreet-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BuildOnStreetIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              authorityIds:
              - string
              zoneIds:
              - string
              orderId: string
          application/json:
            schema:
              $ref: '#/components/schemas/BuildOnStreetIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              authorityIds:
              - string
              zoneIds:
              - string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/BuildOnStreetIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              authorityIds:
              - string
              zoneIds:
              - string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BuildOnStreetIndex'
            example:
              name: string
              prefix: string
              from: string
              to: string
              user: string
              authorityIds:
              - string
              zoneIds:
              - string
              orderId: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/calculate-coverage:
    post:
      tags:
      - Tasks
      summary: /tasks/calculate-coverage - POST
      operationId: post-tasks-calculate-coverage
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CalculateCoverage'
            example:
              name: string
              user: string
              date: string
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateCoverage'
            example:
              name: string
              user: string
              date: string
          text/json:
            schema:
              $ref: '#/components/schemas/CalculateCoverage'
            example:
              name: string
              user: string
              date: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CalculateCoverage'
            example:
              name: string
              user: string
              date: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/cancel/{taskId}:
    get:
      tags:
      - Tasks
      summary: /tasks/cancel/{taskId} - GET
      operationId: get-tasks-cancel-taskid
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/clear-test-orders:
    post:
      tags:
      - Tasks
      summary: /tasks/clear-test-orders - POST
      operationId: post-tasks-clear-test-orders
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClearTestOrders'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/ClearTestOrders'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/ClearTestOrders'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearTestOrders'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/convert-to-basemap:
    post:
      tags:
      - Tasks
      summary: /tasks/convert-to-basemap - POST
      operationId: post-tasks-convert-to-basemap
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConvertToBaseMap'
            example:
              name: string
              authorityIds:
              - string
              user: string
              branch: string
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertToBaseMap'
            example:
              name: string
              authorityIds:
              - string
              user: string
              branch: string
          text/json:
            schema:
              $ref: '#/components/schemas/ConvertToBaseMap'
            example:
              name: string
              authorityIds:
              - string
              user: string
              branch: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConvertToBaseMap'
            example:
              name: string
              authorityIds:
              - string
              user: string
              branch: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/create-initial-order:
    post:
      tags:
      - Tasks
      summary: /tasks/create-initial-order - POST
      operationId: post-tasks-create-initial-order
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateInitialOrderForAuthority'
            example:
              name: string
              authorityId: string
              orderName: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInitialOrderForAuthority'
            example:
              name: string
              authorityId: string
              orderName: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateInitialOrderForAuthority'
            example:
              name: string
              authorityId: string
              orderName: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateInitialOrderForAuthority'
            example:
              name: string
              authorityId: string
              orderName: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/current:
    get:
      tags:
      - Tasks
      summary: /tasks/current - GET
      operationId: get-tasks-current
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/delete-carpark-index:
    post:
      tags:
      - Tasks
      summary: /tasks/delete-carpark-index - POST
      operationId: post-tasks-delete-carpark-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/delete-onstreet-index:
    post:
      tags:
      - Tasks
      summary: /tasks/delete-onstreet-index - POST
      operationId: post-tasks-delete-onstreet-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/deploy-carpark-index:
    post:
      tags:
      - Tasks
      summary: /tasks/deploy-carpark-index - POST
      operationId: post-tasks-deploy-carpark-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeployCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          application/json:
            schema:
              $ref: '#/components/schemas/DeployCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeployCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeployCarparkIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/deploy-onstreet-index:
    post:
      tags:
      - Tasks
      summary: /tasks/deploy-onstreet-index - POST
      operationId: post-tasks-deploy-onstreet-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeployOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          application/json:
            schema:
              $ref: '#/components/schemas/DeployOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeployOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeployOnstreetIndex'
            example:
              name: string
              prefix: string
              user: string
              target: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/execute-carpark-import:
    post:
      tags:
      - Tasks
      summary: /tasks/execute-carpark-import - POST
      operationId: post-tasks-execute-carpark-import
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExecuteCarparkImport'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteCarparkImport'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/ExecuteCarparkImport'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExecuteCarparkImport'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/execute-standard-import:
    post:
      tags:
      - Tasks
      summary: /tasks/execute-standard-import - POST
      operationId: post-tasks-execute-standard-import
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                OrderId:
                  type: string
                AuthorityId:
                  type: string
                AuthorityName:
                  type: string
                Reproject:
                  type: boolean
                Files:
                  type: array
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/generate-moving-order-docs:
    post:
      tags:
      - Tasks
      summary: /tasks/generate-moving-order-docs - POST
      operationId: post-tasks-generate-moving-order-docs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GenerateMovingOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMovingOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateMovingOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenerateMovingOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/generate-order-docs:
    post:
      tags:
      - Tasks
      summary: /tasks/generate-order-docs - POST
      operationId: post-tasks-generate-order-docs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GenerateOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
              force: true
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
              force: true
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
              force: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenerateOrderDocuments'
            example:
              name: string
              user: string
              orderId: string
              force: true
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/history:
    get:
      tags:
      - Tasks
      summary: /tasks/history - GET
      operationId: get-tasks-history
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/history/{taskId}:
    get:
      tags:
      - Tasks
      summary: /tasks/history/{taskId} - GET
      operationId: get-tasks-history-taskid
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      - name: continuationToken
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/import-elgin-suspensions:
    post:
      tags:
      - Tasks
      summary: /tasks/import-elgin-suspensions - POST
      operationId: post-tasks-import-elgin-suspensions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ImportElginSuspensions'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/ImportElginSuspensions'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/ImportElginSuspensions'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ImportElginSuspensions'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/link-osps:
    post:
      tags:
      - Tasks
      summary: /tasks/link-osps - POST
      operationId: post-tasks-link-osps
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkOverlappingOsps'
            example:
              name: string
              user: string
              authorityId: string
          application/json:
            schema:
              $ref: '#/components/schemas/LinkOverlappingOsps'
            example:
              name: string
              user: string
              authorityId: string
          text/json:
            schema:
              $ref: '#/components/schemas/LinkOverlappingOsps'
            example:
              name: string
              user: string
              authorityId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkOverlappingOsps'
            example:
              name: string
              user: string
              authorityId: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/make-orders:
    post:
      tags:
      - Tasks
      summary: /tasks/make-orders - POST
      operationId: post-tasks-make-orders
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/prepare-files:
    post:
      tags:
      - Tasks
      summary: /tasks/prepare-files - POST
      operationId: post-tasks-prepare-files
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrepareFiles'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareFiles'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/PrepareFiles'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrepareFiles'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/propose-moving-order:
    post:
      tags:
      - Tasks
      summary: /tasks/propose-moving-order - POST
      operationId: post-tasks-propose-moving-order
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProposeMovingOrder'
            example:
              name: string
              orderId: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/ProposeMovingOrder'
            example:
              name: string
              orderId: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/ProposeMovingOrder'
            example:
              name: string
              orderId: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProposeMovingOrder'
            example:
              name: string
              orderId: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/propose-orders:
    post:
      tags:
      - Tasks
      summary: /tasks/propose-orders - POST
      operationId: post-tasks-propose-orders
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/rebuild-search-index:
    post:
      tags:
      - Tasks
      summary: /tasks/rebuild-search-index - POST
      operationId: post-tasks-rebuild-search-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RebuildSearchIndex'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/RebuildSearchIndex'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/RebuildSearchIndex'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/RebuildSearchIndex'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/redeploy-master:
    post:
      tags:
      - Tasks
      summary: /tasks/redeploy-master - POST
      operationId: post-tasks-redeploy-master
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BuildAndDeployMasterIndex'
            example:
              name: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/BuildAndDeployMasterIndex'
            example:
              name: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/BuildAndDeployMasterIndex'
            example:
              name: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BuildAndDeployMasterIndex'
            example:
              name: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /tasks/test-onstreet-index:
    post:
      tags:
      - Tasks
      summary: /tasks/test-onstreet-index - POST
      operationId: post-tasks-test-onstreet-index
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TestOnStreetIndex'
            example:
              name: string
              indexName: string
              user: string
          application/json:
            schema:
              $ref: '#/components/schemas/TestOnStreetIndex'
            example:
              name: string
              indexName: string
              user: string
          text/json:
            schema:
              $ref: '#/components/schemas/TestOnStreetIndex'
            example:
              name: string
              indexName: string
              user: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/TestOnStreetIndex'
            example:
              name: string
              indexName: string
              user: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /test/operating-hours:
    post:
      tags:
      - Test
      summary: /test/operating-hours - POST
      operationId: post-test-operating-hours
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperatingHoursTest'
            example:
              orderType: string
              operatingHours: string
          application/json:
            schema:
              $ref: '#/components/schemas/OperatingHoursTest'
            example:
              orderType: string
              operatingHours: string
          text/json:
            schema:
              $ref: '#/components/schemas/OperatingHoursTest'
            example:
              orderType: string
              operatingHours: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperatingHoursTest'
            example:
              orderType: string
              operatingHours: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /testsets:
    get:
      tags:
      - TestSet
      summary: /testsets - GET
      operationId: get-testsets
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
      - TestSet
      summary: /testsets - POST
      operationId: post-testsets
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TestSet'
            example:
              id: string
              name: string
              tests:
              - expression: string
          application/json:
            schema:
              $ref: '#/components/schemas/TestSet'
            example:
              id: string
              name: string
              tests:
              - expression: string
          text/json:
            schema:
              $ref: '#/components/schemas/TestSet'
            example:
              id: string
              name: string
              tests:
              - expression: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/TestSet'
            example:
              id: string
              name: string
              tests:
              - expression: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /testsets/{id}:
    get:
      tags:
      - TestSet
      summary: /testsets/{id} - GET
      operationId: get-testsets-id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
    delete:
      tags:
      - TestSet
      summary: /testsets/{id} - DELETE
      operationId: delete-testsets-id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /testsets/try:
    post:
      tags:
      - TestSet
      summary: /testsets/try - POST
      operationId: post-testsets-try
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TestRequest'
            example:
              expression: string
              indexName: string
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
            example:
              expression: string
              indexName: string
          text/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
            example:
              expression: string
              indexName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/TestRequest'
            example:
              expression: string
              indexName: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    ApplyChangeSets:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        changeSetIds:
          type: array
          items:
            type: string
          nullable: true
        dateOverride:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ApplyOrderToMaster:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
      additionalProperties: false
    BuildAndDeployMasterIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    BuildCarparkIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        user:
          type: string
          nullable: true
        partitions:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    BuildOnStreetIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        user:
          type: string
          nullable: true
        authorityIds:
          type: array
          items:
            type: string
          nullable: true
        zoneIds:
          type: array
          items:
            type: string
          nullable: true
        orderId:
          type: string
          nullable: true
      additionalProperties: false
    CalculateCoverage:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    ClearTestOrders:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    ConvertToBaseMap:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        authorityIds:
          type: array
          items:
            type: string
          nullable: true
        user:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    CreateInitialOrderForAuthority:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        authorityId:
          type: string
          nullable: true
        orderName:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    DeleteCarparkIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    DeleteOnstreetIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    DeployCarparkIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
      additionalProperties: false
    DeployOnstreetIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        prefix:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
      additionalProperties: false
    ExecuteCarparkImport:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    GenerateMovingOrderDocuments:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        orderId:
          type: string
          format: uuid
      additionalProperties: false
    GenerateOrderDocuments:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        orderId:
          type: string
          format: uuid
        force:
          type: boolean
      additionalProperties: false
    ImportElginSuspensions:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    LinkOverlappingOsps:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
        authorityId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    OperatingHoursTest:
      type: object
      properties:
        orderType:
          type: string
          nullable: true
        operatingHours:
          type: string
          nullable: true
      additionalProperties: false
    PrepareFiles:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    ProposeMovingOrder:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        orderId:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    RebuildSearchIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    Test:
      type: object
      properties:
        expression:
          type: string
          nullable: true
      additionalProperties: false
    TestOnStreetIndex:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        indexName:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
      additionalProperties: false
    TestRequest:
      type: object
      properties:
        expression:
          type: string
          nullable: true
        indexName:
          type: string
          nullable: true
      additionalProperties: false
    TestSet:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
          nullable: true
      additionalProperties: false
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

