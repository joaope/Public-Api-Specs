openapi: 3.0.1
info:
  title: Availability RealTime API
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/availability-realtime
paths:
  /ping:
    get:
      tags:
      - Status
      summary: Ping
      description: Returns Status (pong) of the Availability Occupancy API service
      operationId: get-ping
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/fetchAvailabilityByEntityIds:
    post:
      tags:
      - Availability
      summary: Fetch realtime availability by entity Ids
      description: Returns the availability for the list of given entity Ids.
      operationId: post-queries-fetchavailabilitybyentityids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByEntityIdsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByEntityIdsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByEntityIdsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingAvailabilityIReadOnlyCollectionOkResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/fetchAvailabilityByGroupAndEntityIds:
    post:
      tags:
      - Availability
      summary: Fetch realtime availability aggregated groups by keys formed by the group id and entity id
      description: |-
        Returns the availability for the list of given keys formed by group id and entity id.
        If the group is not provided, it will return the availability for the entity.
      operationId: post-queries-fetchavailabilitybygroupandentityids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByGroupAndEntityIdsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByGroupAndEntityIdsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityByGroupAndEntityIdsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingAvailabilityIReadOnlyCollectionOkResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/fetchAvailabilityForAllSourceTypesByEntityIds:
    post:
      tags:
      - Availability
      summary: Fetch realtime availability for all available data source types (sensor, camera, barrier, etc) by entity Ids
      description: Returns the availability for all available source types and the list of given entity Ids.
      operationId: post-queries-fetchavailabilityforallsourcetypesbyentityids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByEntityIdsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByEntityIdsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByEntityIdsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingAvailabilityIReadOnlyCollectionOkResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/fetchAvailabilityForAllSourceTypesByGroupAndEntityIds:
    post:
      tags:
      - Availability
      summary: Fetch realtime availability aggregated groups for all available data source types (sensor, camera, barrier, etc) by keys formed by the group id and entity id
      description: |-
        Returns the availability for all available source types and the list of given keys formed by group id and entity id.
        If the group is not provided, it will return the availability for the entity.
      operationId: post-queries-fetchavailabilityforallsourcetypesbygroupandentityids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByGroupAndEntityIdsQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByGroupAndEntityIdsQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAvailabilityForAllSourceTypesByGroupAndEntityIdsQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingAvailabilityIReadOnlyCollectionOkResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/fetchH3AvailabilityByCentreAndViewportSize:
    post:
      tags:
      - Availability
      summary: Fetch realtime availability aggregated groups by keys formed by the group id and entity id
      description: |-
        Returns the availability for the list of given keys formed by group id and entity id.
        If the group is not provided, it will return the availability for the entity.
      operationId: post-queries-fetchh3availabilitybycentreandviewportsize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchH3AvailabilityByCentreAndViewportSizeQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchH3AvailabilityByCentreAndViewportSizeQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchH3AvailabilityByCentreAndViewportSizeQuery'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H3AvailabilityIReadOnlyCollectionOkResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    FetchAvailabilityByEntityIdsQuery:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    EntityType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      format: int32
    DataSourceType:
      enum:
      - 0
      - 1
      - 2
      - 4
      type: integer
      format: int32
    ParkingAvailability:
      type: object
      properties:
        entityId:
          type: string
          nullable: true
        entityType:
          $ref: '#/components/schemas/EntityType'
        dataSourceType:
          $ref: '#/components/schemas/DataSourceType'
        groupId:
          type: string
          nullable: true
        totalSpaces:
          type: integer
          format: int32
        availableSpaces:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ParkingAvailabilityIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ParkingAvailability'
          description: Payload of the response
          nullable: true
      additionalProperties: false
      description: A successful response
    Error:
      type: object
      properties:
        property:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    BadRequestResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
          readOnly: true
          example: false
        message:
          type: string
          description: Human-readable message for this response
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: Collection of validation errors caused by the request
          nullable: true
      additionalProperties: false
      description: A response indicating the request was invalid
    AvailabilityGroupKey:
      type: object
      properties:
        entityId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
      additionalProperties: false
    FetchAvailabilityByGroupAndEntityIdsQuery:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityGroupKey'
          nullable: true
        ? type: array
          items:
            $ref: '#/components/schemas/AvailabilityGroupKey'
          nullable: true
        : 
      additionalProperties: false
    FetchAvailabilityForAllSourceTypesByEntityIdsQuery:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    FetchAvailabilityForAllSourceTypesByGroupAndEntityIdsQuery:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityGroupKey'
          nullable: true
        ? type: array
          items:
            $ref: '#/components/schemas/AvailabilityGroupKey'
          nullable: true
        : 
      additionalProperties: false
    LatLng:
      type: object
      properties:
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
      additionalProperties: false
    FetchH3AvailabilityByCentreAndViewportSizeQuery:
      type: object
      properties:
        viewportCenter:
          $ref: '#/components/schemas/LatLng'
        viewportSize:
          type: integer
          format: int32
        h3Resolution:
          type: integer
          format: int32
      additionalProperties: false
    H3Availability:
      type: object
      properties:
        h3Index:
          type: string
          nullable: true
        availabilityRatio:
          type: number
          format: float
        normalizedRatio:
          type: number
          format: float
      additionalProperties: false
    H3AvailabilityIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/H3Availability'
          description: Payload of the response
          nullable: true
      additionalProperties: false
      description: A successful response
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

