openapi: 3.0.1
info:
  title: Occupancy Authentication API
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/occupancy-authentication
paths:
  /commands/changeRegistrationDetails:
    post:
      tags:
      - Occupancy
      summary: /commands/changeRegistrationDetails - POST
      operationId: post-commands-changeregistrationdetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRegistrationDetailsCommand'
            example:
              id: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeRegistrationDetailsCommand'
            example:
              id: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeRegistrationDetailsCommand'
            example:
              id: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
      responses:
        "202":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /commands/deleteRegistration:
    post:
      tags:
      - Occupancy
      summary: /commands/deleteRegistration - POST
      operationId: post-commands-deleteregistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRegistrationCommand'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRegistrationCommand'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRegistrationCommand'
            example:
              id: string
      responses:
        "202":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /commands/endRegistration:
    post:
      tags:
      - Occupancy
      summary: /commands/endRegistration - POST
      operationId: post-commands-endregistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndRegistrationCommand'
            example:
              id: string
              endUtc: string
              override: true
          text/json:
            schema:
              $ref: '#/components/schemas/EndRegistrationCommand'
            example:
              id: string
              endUtc: string
              override: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/EndRegistrationCommand'
            example:
              id: string
              endUtc: string
              override: true
      responses:
        "202":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /commands/registerAutomaticOccupancy:
    post:
      tags:
      - Commands
      summary: /commands/registerAutomaticOccupancy - POST
      operationId: post-commands-registerautomaticoccupancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAutomaticOccupancyCommand'
            example:
              occupancySessionId: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterAutomaticOccupancyCommand'
            example:
              occupancySessionId: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterAutomaticOccupancyCommand'
            example:
              occupancySessionId: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
      responses:
        "202":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /commands/registerManualOccupancy:
    post:
      tags:
      - Occupancy
      summary: /commands/registerManualOccupancy - POST
      operationId: post-commands-registermanualoccupancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterManualOccupancyCommand'
            example:
              parkingAssetId: string
              bayId: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterManualOccupancyCommand'
            example:
              parkingAssetId: string
              bayId: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterManualOccupancyCommand'
            example:
              parkingAssetId: string
              bayId: string
              startUtc: string
              endUtc: string
              vehicleRegistrationMark: string
              fullName: string
              visitedName: string
      responses:
        "202":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /monitor:
    get:
      tags:
      - Monitor
      summary: Monitor
      description: Returns information on the health of the OccupancyAuthentication API service
      operationId: get-monitor
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/getActiveRegistrations:
    post:
      tags:
      - Occupancy
      summary: /queries/getActiveRegistrations - POST
      operationId: post-queries-getactiveregistrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveRegistrationsQuery'
            example:
              parkingAssetId: string
          text/json:
            schema:
              $ref: '#/components/schemas/GetActiveRegistrationsQuery'
            example:
              parkingAssetId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetActiveRegistrationsQuery'
            example:
              parkingAssetId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveRegistrationsQueryResultItemIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  parkingAssetId: string
                  bayId: string
                  createdOnUtc: string
                  startUtc: string
                  endUtc: string
                  vehicleRegistrationMark: string
                  fullName: string
                  visitedName: string
                  occupancySessionId: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: false
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/getParkingAssetFloors:
    post:
      tags:
      - Occupancy
      summary: /queries/getParkingAssetFloors - POST
      operationId: post-queries-getparkingassetfloors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetFloorsQuery'
            example:
              parkingAssetId: string
          text/json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetFloorsQuery'
            example:
              parkingAssetId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetFloorsQuery'
            example:
              parkingAssetId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParkingAssetFloorsQueryResultOkResponse'
              example:
                success: true
                result:
                  floors:
                  - id: string
                    name: string
                    ordinal: 0
                    bays:
                    - id: string
                      name: string
                      bayType: string
                      ordinal: 0
                      gracePeriod: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: false
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/getParkingAssetHeaders:
    post:
      tags:
      - Occupancy
      summary: /queries/getParkingAssetHeaders - POST
      operationId: post-queries-getparkingassetheaders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetHeadersQuery'
            example:
              parkingAssetIds:
              - string
          text/json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetHeadersQuery'
            example:
              parkingAssetIds:
              - string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetParkingAssetHeadersQuery'
            example:
              parkingAssetIds:
              - string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParkingAssetHeadersQueryResultItemIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - id: string
                  name: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: false
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/getRecentlyOccupiedBays:
    post:
      tags:
      - Occupancy
      summary: /queries/getRecentlyOccupiedBays - POST
      operationId: post-queries-getrecentlyoccupiedbays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecentlyOccupiedBaysQuery'
            example:
              parkingAssetId: string
          text/json:
            schema:
              $ref: '#/components/schemas/GetRecentlyOccupiedBaysQuery'
            example:
              parkingAssetId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetRecentlyOccupiedBaysQuery'
            example:
              parkingAssetId: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecentlyOccupiedBaysQueryResultItemIReadOnlyCollectionOkResponse'
              example:
                success: true
                result:
                - bayId: string
                  occupancySessionId: string
                  occupancyStartTimeUtc: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: false
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /queries/getRegistration:
    post:
      tags:
      - Occupancy
      summary: /queries/getRegistration - POST
      operationId: post-queries-getregistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegistrationQuery'
            example:
              id: string
          text/json:
            schema:
              $ref: '#/components/schemas/GetRegistrationQuery'
            example:
              id: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetRegistrationQuery'
            example:
              id: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistrationQueryResultItemOkResponse'
              example:
                success: true
                result:
                  id: string
                  parkingAssetId: string
                  bayId: string
                  createdOnUtc: string
                  startUtc: string
                  endUtc: string
                  vehicleRegistrationMark: string
                  fullName: string
                  visitedName: string
                  occupancySessionId: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              example:
                success: false
                message: string
                errors:
                - property: string
                  code: string
                  message: string
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    RegisterAutomaticOccupancyCommand:
      type: object
      properties:
        occupancySessionId:
          type: string
          nullable: true
        vehicleRegistrationMark:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        visitedName:
          type: string
          nullable: true
      additionalProperties: false
    RegisterManualOccupancyCommand:
      type: object
      properties:
        parkingAssetId:
          type: string
          nullable: true
        bayId:
          type: string
          nullable: true
        startUtc:
          type: string
          format: date-time
        endUtc:
          type: string
          format: date-time
          nullable: true
        vehicleRegistrationMark:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        visitedName:
          type: string
          nullable: true
      additionalProperties: false
    ChangeRegistrationDetailsCommand:
      type: object
      properties:
        id:
          type: string
          nullable: true
        startUtc:
          type: string
          format: date-time
        endUtc:
          type: string
          format: date-time
          nullable: true
        vehicleRegistrationMark:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        visitedName:
          type: string
          nullable: true
      additionalProperties: false
    DeleteRegistrationCommand:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
    EndRegistrationCommand:
      type: object
      properties:
        id:
          type: string
          nullable: true
        endUtc:
          type: string
          format: date-time
        override:
          type: boolean
      additionalProperties: false
    GetRegistrationQuery:
      required:
      - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    GetRegistrationQueryResultItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parkingAssetId:
          type: string
          nullable: true
        bayId:
          type: string
          nullable: true
        createdOnUtc:
          type: string
          format: date-time
        startUtc:
          type: string
          format: date-time
        endUtc:
          type: string
          format: date-time
          nullable: true
        vehicleRegistrationMark:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        visitedName:
          type: string
          nullable: true
        occupancySessionId:
          type: string
          nullable: true
      additionalProperties: false
    GetRegistrationQueryResultItemOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          $ref: '#/components/schemas/GetRegistrationQueryResultItem'
      additionalProperties: false
      description: A successful response
    Error:
      type: object
      properties:
        property:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    BadRequestResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
          readOnly: true
          example: false
        message:
          type: string
          description: Human-readable message for this response
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: Collection of validation errors caused by the request
          nullable: true
      additionalProperties: false
      description: A response indicating the request was invalid
    GetActiveRegistrationsQuery:
      required:
      - parkingAssetId
      type: object
      properties:
        parkingAssetId:
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    GetActiveRegistrationsQueryResultItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parkingAssetId:
          type: string
          nullable: true
        bayId:
          type: string
          nullable: true
        createdOnUtc:
          type: string
          format: date-time
        startUtc:
          type: string
          format: date-time
        endUtc:
          type: string
          format: date-time
          nullable: true
        vehicleRegistrationMark:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        visitedName:
          type: string
          nullable: true
        occupancySessionId:
          type: string
          nullable: true
      additionalProperties: false
    GetActiveRegistrationsQueryResultItemIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/GetActiveRegistrationsQueryResultItem'
          description: Payload of the response
          nullable: true
      additionalProperties: false
      description: A successful response
    GetParkingAssetHeadersQuery:
      required:
      - parkingAssetIds
      type: object
      properties:
        parkingAssetIds:
          minLength: 1
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GetParkingAssetHeadersQueryResultItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    GetParkingAssetHeadersQueryResultItemIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/GetParkingAssetHeadersQueryResultItem'
          description: Payload of the response
          nullable: true
      additionalProperties: false
      description: A successful response
    GetParkingAssetFloorsQuery:
      required:
      - parkingAssetId
      type: object
      properties:
        parkingAssetId:
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    ParkingAssetBay:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        bayType:
          type: string
          nullable: true
        ordinal:
          type: integer
          format: int32
        gracePeriod:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ParkingAssetFloor:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        ordinal:
          type: integer
          format: int32
        bays:
          type: array
          items:
            $ref: '#/components/schemas/ParkingAssetBay'
          nullable: true
      additionalProperties: false
    GetParkingAssetFloorsQueryResult:
      type: object
      properties:
        floors:
          type: array
          items:
            $ref: '#/components/schemas/ParkingAssetFloor'
          nullable: true
      additionalProperties: false
    GetParkingAssetFloorsQueryResultOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          $ref: '#/components/schemas/GetParkingAssetFloorsQueryResult'
      additionalProperties: false
      description: A successful response
    GetRecentlyOccupiedBaysQuery:
      required:
      - parkingAssetId
      type: object
      properties:
        parkingAssetId:
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    GetRecentlyOccupiedBaysQueryResultItem:
      type: object
      properties:
        bayId:
          type: string
          nullable: true
        occupancySessionId:
          type: string
          nullable: true
        occupancyStartTimeUtc:
          type: string
          format: date-time
      additionalProperties: false
    GetRecentlyOccupiedBaysQueryResultItemIReadOnlyCollectionOkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the response was successful
          readOnly: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/GetRecentlyOccupiedBaysQueryResultItem'
          description: Payload of the response
          nullable: true
      additionalProperties: false
      description: A successful response
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

