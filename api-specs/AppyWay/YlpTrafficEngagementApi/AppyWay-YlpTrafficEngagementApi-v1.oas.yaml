openapi: 3.0.1
info:
  title: Engagement
  version: "1.0"
servers:
- url: https://api.appyway.com/v1/traffic-engagement
paths:
  /feedback/attachFiles:
    post:
      tags:
      - EngagementFeedback
      summary: /feedback/attachFiles - POST
      operationId: post-feedback-attachfiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                FeedbackId:
                  type: string
                Files:
                  type: array
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /feedback/reply/{feedbackId}:
    post:
      tags:
      - EngagementFeedback
      summary: /feedback/reply/{feedbackId} - POST
      operationId: post-feedback-reply-feedbackid
      parameters:
      - name: feedbackId
        in: path
        description: Format - uuid.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicFeedbackReply'
            example:
              email: string
              message: string
          text/json:
            schema:
              $ref: '#/components/schemas/PublicFeedbackReply'
            example:
              email: string
              message: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/PublicFeedbackReply'
            example:
              email: string
              message: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /feedback/submit:
    post:
      tags:
      - EngagementFeedback
      summary: /feedback/submit - POST
      operationId: post-feedback-submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
            example:
              orderId: string
              orderSupport: 1
              feedbackCategory: 1
              responderType: 1
              firstName: string
              lastName: string
              email: string
              addressLine1: string
              addressLine2: string
              addressCity: string
              addressPostCode: string
              addressCountry: string
              feedbackText: string
              honeypot: string
              elapsedSeconds: 0
          text/json:
            schema:
              $ref: '#/components/schemas/Feedback'
            example:
              orderId: string
              orderSupport: 1
              feedbackCategory: 1
              responderType: 1
              firstName: string
              lastName: string
              email: string
              addressLine1: string
              addressLine2: string
              addressCity: string
              addressPostCode: string
              addressCountry: string
              feedbackText: string
              honeypot: string
              elapsedSeconds: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/Feedback'
            example:
              orderId: string
              orderSupport: 1
              feedbackCategory: 1
              responderType: 1
              firstName: string
              lastName: string
              email: string
              addressLine1: string
              addressLine2: string
              addressCity: string
              addressPostCode: string
              addressCountry: string
              feedbackText: string
              honeypot: string
              elapsedSeconds: 0
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /manage/anonymiseExpiredOrderFeedback:
    get:
      tags:
      - FeedbackManagement
      summary: /manage/anonymiseExpiredOrderFeedback - GET
      operationId: get-manage-anonymiseexpiredorderfeedback
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchActiveOrderResponseTotalsByAuthority:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchActiveOrderResponseTotalsByAuthority - GET
      operationId: get-report-fetchactiveorderresponsetotalsbyauthority
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthorityFeedbackSummary'
              example: 
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorityFeedbackSummary'
              example:
                totalActiveConsultations: 0
                totalReadThreads: 0
                totalUnreadThreads: 0
                totalRespondedThreads: 0
            text/json:
              schema:
                $ref: '#/components/schemas/AuthorityFeedbackSummary'
              example:
                totalActiveConsultations: 0
                totalReadThreads: 0
                totalUnreadThreads: 0
                totalRespondedThreads: 0
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchConsultationDetailsByAuthorityAndOrder:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchConsultationDetailsByAuthorityAndOrder - GET
      operationId: get-report-fetchconsultationdetailsbyauthorityandorder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchConsultationsByAuthorityId:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchConsultationsByAuthorityId - GET
      operationId: get-report-fetchconsultationsbyauthorityid
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: status
        in: query
        description: Format - int32.
        schema:
          enum:
          - 0
          - 1
          - 2
          type: integer
      - name: skip
        in: query
        description: Format - int32.
        schema:
          type: integer
          default: 0
      - name: take
        in: query
        description: Format - int32.
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderFeedbackSummaryWithCounts'
              example: 
            application/json:
              schema:
                $ref: '#/components/schemas/OrderFeedbackSummaryWithCounts'
              example:
                orderStatusCounts:
                - status: 0
                  count: 0
                orderFeedbackSummaries:
                - orderId: string
                  orderName: string
                  orderReason: string
                  activationDate: string
                  consultationStartDate: string
                  consultationEndDate: string
                  orderFeedbackStatus: 0
                  orderState: 0
                  feedbackScores:
                  - score: 0
                    count: 0
                  feedbackCount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/OrderFeedbackSummaryWithCounts'
              example:
                orderStatusCounts:
                - status: 0
                  count: 0
                orderFeedbackSummaries:
                - orderId: string
                  orderName: string
                  orderReason: string
                  activationDate: string
                  consultationStartDate: string
                  consultationEndDate: string
                  orderFeedbackStatus: 0
                  orderState: 0
                  feedbackScores:
                  - score: 0
                    count: 0
                  feedbackCount: 0
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchCsvFeedbackByAuthorityAndOrder:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchCsvFeedbackByAuthorityAndOrder - GET
      operationId: get-report-fetchcsvfeedbackbyauthorityandorder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchFeedbackByAuthorityAndOrder:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchFeedbackByAuthorityAndOrder - GET
      operationId: get-report-fetchfeedbackbyauthorityandorder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: status
        in: query
        description: Format - int32.
        schema:
          enum:
          - 1
          - 2
          type: integer
      - name: skip
        in: query
        description: Format - int32.
        schema:
          type: integer
          default: 0
      - name: take
        in: query
        description: Format - int32.
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchFeedbackHistory:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchFeedbackHistory - GET
      operationId: get-report-fetchfeedbackhistory
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: feedbackId
        in: query
        description: Format - uuid.
        schema:
          type: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/fetchFeedbackTotalsByAuthorityAndOrder:
    get:
      tags:
      - EngagementReport
      summary: /report/fetchFeedbackTotalsByAuthorityAndOrder - GET
      operationId: get-report-fetchfeedbacktotalsbyauthorityandorder
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedbackRating'
              example: 
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackRating'
              example:
                feedbackRatings:
                - score: 0
                  count: 0
                feedbackCount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/FeedbackRating'
              example:
                feedbackRatings:
                - score: 0
                  count: 0
                feedbackCount: 0
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/replyToFeedback:
    post:
      tags:
      - EngagementReport
      summary: /report/replyToFeedback - POST
      operationId: post-report-replytofeedback
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: feedbackId
        in: query
        description: Format - uuid.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouncilFeedbackReply'
            example:
              message: string
          text/json:
            schema:
              $ref: '#/components/schemas/CouncilFeedbackReply'
            example:
              message: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CouncilFeedbackReply'
            example:
              message: string
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
  /report/setThreadState:
    post:
      tags:
      - EngagementReport
      summary: /report/setThreadState - POST
      operationId: post-report-setthreadstate
      parameters:
      - name: authorityId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: orderId
        in: query
        description: Format - uuid.
        schema:
          type: string
      - name: feedbackId
        in: query
        description: Format - uuid.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeThreadStateRequest'
            example:
              from: 1
              to: 1
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeThreadStateRequest'
            example:
              from: 1
              to: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeThreadStateRequest'
            example:
              from: 1
              to: 1
      responses:
        "200":
          description: Success
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "429":
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    AuthorityFeedbackSummary:
      type: object
      properties:
        totalActiveConsultations:
          type: integer
          format: int32
        totalReadThreads:
          type: integer
          format: int32
        totalUnreadThreads:
          type: integer
          format: int32
        totalRespondedThreads:
          type: integer
          format: int32
      additionalProperties: false
    ChangeThreadStateRequest:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/ThreadStatus'
        to:
          $ref: '#/components/schemas/ThreadStatus'
      additionalProperties: false
    CouncilFeedbackReply:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
    Feedback:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        orderSupport:
          $ref: '#/components/schemas/OrderSupport'
        feedbackCategory:
          $ref: '#/components/schemas/FeedbackCategory'
        responderType:
          $ref: '#/components/schemas/ResponderType'
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        addressLine1:
          type: string
          nullable: true
        addressLine2:
          type: string
          nullable: true
        addressCity:
          type: string
          nullable: true
        addressPostCode:
          type: string
          nullable: true
        addressCountry:
          type: string
          nullable: true
        feedbackText:
          type: string
          nullable: true
        honeypot:
          type: string
          nullable: true
        elapsedSeconds:
          type: integer
          format: int32
      additionalProperties: false
    FeedbackCategory:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      type: integer
      format: int32
    FeedbackRating:
      type: object
      properties:
        feedbackRatings:
          type: array
          items:
            $ref: '#/components/schemas/Rating'
          nullable: true
        feedbackCount:
          type: integer
          format: int32
      additionalProperties: false
    FeedbackStatus:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    OrderFeedbackStatus:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    OrderFeedbackSummary:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        orderName:
          type: string
          nullable: true
        orderReason:
          type: string
          nullable: true
        activationDate:
          type: string
          format: date-time
          nullable: true
        consultationStartDate:
          type: string
          format: date-time
          nullable: true
        consultationEndDate:
          type: string
          format: date-time
          nullable: true
        orderFeedbackStatus:
          $ref: '#/components/schemas/OrderFeedbackStatus'
        orderState:
          $ref: '#/components/schemas/OrderState'
        feedbackScores:
          type: array
          items:
            $ref: '#/components/schemas/Rating'
          nullable: true
        feedbackCount:
          type: integer
          format: int32
      additionalProperties: false
    OrderFeedbackSummaryWithCounts:
      type: object
      properties:
        orderStatusCounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderStatusCounts'
          nullable: true
        orderFeedbackSummaries:
          type: array
          items:
            $ref: '#/components/schemas/OrderFeedbackSummary'
          nullable: true
      additionalProperties: false
    OrderState:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      type: integer
      format: int32
    OrderStatusCounts:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/OrderFeedbackStatus'
        count:
          type: integer
          format: int32
      additionalProperties: false
    OrderSupport:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      format: int32
    PublicFeedbackReply:
      type: object
      properties:
        email:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    Rating:
      type: object
      properties:
        score:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
      additionalProperties: false
    ResponderType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      format: int32
    ThreadStatus:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  responses:
    TooManyRequests:
      description: Too many requests
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
security:
- apiKey: []
- oAuth2: []

