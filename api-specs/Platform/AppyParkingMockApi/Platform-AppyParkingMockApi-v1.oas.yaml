info:
  title: AppyParking Mock Api
  description: TODO This API version has been deprecated.
  version: "1.0"
servers:
- url: https://api.appyway.com/appyparkingmockapi/v1
security:
- apiKey: []
- oAuth2: []
openapi: 3.0.1
components:
  securitySchemes:
    apiKey:
      name: API-KEY
      in: header
      type: apiKey
    oAuth2:
      flows:
        authorizationCode:
          scopes: {}
          authorizationUrl: https://auth.appyway.com/authorize
          tokenUrl: https://auth.appyway.com/oauth/token
      type: oauth2
  schemas:
    Person:
      description: Represents a person.
      type: object
      additionalProperties: false
      properties:
        id:
          format: int32
          description: Gets or sets the unique identifier for a person.
          type: integer
        firstName:
          maxLength: 25
          description: Gets or sets the first name of a person.
          type: string
          minLength: 0
        lastName:
          maxLength: 25
          description: Gets or sets the last name of a person.
          type: string
          minLength: 0
      required:
      - firstName
      - lastName
    ProblemDetails:
      additionalProperties:
        additionalProperties: false
        type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          format: int32
          type: integer
          nullable: true
      type: object
    Order:
      description: Represents an order.
      type: object
      additionalProperties: false
      properties:
        createdDate:
          format: date-time
          description: Gets or sets the date and time when the order was created.
          type: string
        customer:
          description: Gets or sets the name of the ordering customer.
          type: string
        id:
          format: int32
          description: Gets or sets the unique identifier for the order.
          type: integer
      required:
      - customer
paths:
  /Orders/{id}:
    get:
      parameters:
      - name: id
        description: Format - int32. The requested order identifier.
        in: path
        schema:
          type: integer
        required: true
      summary: Gets a single order.
      description: Gets a single order.
      tags:
      - Orders
      operationId: get-orders-id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: The order was successfully retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The order does not exist.
  /People/{id}:
    get:
      parameters:
      - name: id
        description: Format - int32. The requested person identifier.
        in: path
        schema:
          type: integer
        required: true
      summary: Gets a single person.
      description: Gets a single person.
      tags:
      - People
      operationId: get-people-id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: The person was successfully retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The person does not exist.

