{
  "openapi": "3.0.1",
  "info": {
    "title": "Security",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://api.appyway.com/security/v0.1"
    }
  ],
  "paths": {
    "/apiKey": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "summary": "All API Keys",
        "description": "All API Keys",
        "operationId": "get-apikey",
        "responses": {
          "200": {
            "description": "A list of API Keys",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Create API Key",
        "description": "Create API Key",
        "operationId": "post-apikey",
        "requestBody": {
          "description": "The API Key information to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the API Key",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Update API Key",
        "description": "Update API Key",
        "operationId": "put-apikey",
        "requestBody": {
          "description": "The API Key to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update succeeded",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Could not find API Key",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Delete API Key",
        "description": "Delete API Key",
        "operationId": "delete-apikey",
        "requestBody": {
          "description": "The hash of the API Key to delete",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is deleted"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/apiKey/block": {
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Blocks API Key",
        "description": "Blocks API Key",
        "operationId": "post-apikey-block",
        "requestBody": {
          "description": "The hash of the API to block",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is blocked"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/apiKey/unblock": {
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Unblock API Key",
        "description": "Unblock API Key",
        "operationId": "post-apikey-unblock",
        "requestBody": {
          "description": "The hash of the API Key to unblock",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is unblocked"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/application": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "All Applications",
        "description": "All Applications",
        "operationId": "get-application",
        "responses": {
          "200": {
            "description": "A list of Applications",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create application",
        "description": "Create application",
        "operationId": "post-application",
        "requestBody": {
          "description": "The application to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created application",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update application",
        "description": "Update application",
        "operationId": "put-application",
        "requestBody": {
          "description": "The application to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/application/{id}": {
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete application",
        "description": "Delete application",
        "operationId": "delete-application-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "All groups",
        "description": "All groups",
        "operationId": "get-group",
        "responses": {
          "200": {
            "description": "A list of groups",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create group",
        "description": "Create group",
        "operationId": "post-group",
        "requestBody": {
          "description": "The group to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created group",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update group",
        "description": "Update group",
        "operationId": "put-group",
        "requestBody": {
          "description": "The group to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/group/{id}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete group",
        "description": "Delete group",
        "operationId": "delete-group-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/organisation": {
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Create new organisation",
        "description": "Create new organisation",
        "operationId": "post-organisation",
        "requestBody": {
          "description": "The organisation to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the organisation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update an organisation",
        "description": "Update an organisation",
        "operationId": "put-organisation",
        "requestBody": {
          "description": "The organisation to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update is correct"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "All Organisations",
        "description": "All Organisations",
        "operationId": "get-organisation",
        "responses": {
          "200": {
            "description": "A list of Organisations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/organisation/{id}": {
      "delete": {
        "tags": [
          "Organisation"
        ],
        "summary": "Removes an organisation",
        "description": "Removes an organisation",
        "operationId": "delete-organisation-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The organisation to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "organisation is deleted"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/permission": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "All Permissions",
        "description": "All Permissions",
        "operationId": "get-permission",
        "responses": {
          "200": {
            "description": "A list of Permissions",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Create permission",
        "description": "Create permission",
        "operationId": "post-permission",
        "requestBody": {
          "description": "The permission to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created permission",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Update permission",
        "description": "Update permission",
        "operationId": "put-permission",
        "requestBody": {
          "description": "The permission to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/permission/{id}": {
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Delete permission",
        "description": "Delete permission",
        "operationId": "delete-permission-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/permission/token": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Takes a token without permissions and embeds the permissions in the returned token",
        "description": "Takes a token without permissions and embeds the permissions in the returned token",
        "operationId": "get-permission-token",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/resourceType": {
      "get": {
        "tags": [
          "ResourceType"
        ],
        "summary": "All resource types",
        "description": "All resource types",
        "operationId": "get-resourcetype",
        "responses": {
          "200": {
            "description": "A list of resource types",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTypeGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTypeGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTypeGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Create resource type",
        "description": "Create resource type",
        "operationId": "post-resourcetype",
        "requestBody": {
          "description": "The resource type to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created resource type",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Update resource type",
        "description": "Update resource type",
        "operationId": "put-resourcetype",
        "requestBody": {
          "description": "The resource type to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/resourceType/{id}": {
      "delete": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Delete resourcetype",
        "description": "Delete resourcetype",
        "operationId": "delete-resourcetype-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the resource type to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource type is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "All roles",
        "description": "All roles",
        "operationId": "get-role",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create role",
        "description": "Create role",
        "operationId": "post-role",
        "requestBody": {
          "description": "The role to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Update role",
        "description": "Update role",
        "operationId": "put-role",
        "requestBody": {
          "description": "The role to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/role/{id}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete role",
        "description": "Delete role",
        "operationId": "delete-role-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "description": "Create new user",
        "operationId": "post-user",
        "requestBody": {
          "description": "The user information to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the user and the password reset link",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "description": "Update a user",
        "operationId": "put-user",
        "requestBody": {
          "description": "The user to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update is correct"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "All Users",
        "description": "All Users",
        "operationId": "get-user",
        "responses": {
          "200": {
            "description": "A list of Users",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet200TextPlainResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet200ApplicationJsonResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet200TextJsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Removes a user",
        "description": "Removes a user",
        "operationId": "delete-user-userid",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/webhooks/auth0": {
      "post": {
        "tags": [
          "WebHooks"
        ],
        "summary": "/webhooks/auth0 - POST",
        "operationId": "post-webhooks-auth0",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResourceAssignment": {
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleAssignment": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "resourceAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAssignment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionAssignment": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKey": {
        "required": [
          "organisation"
        ],
        "type": "object",
        "properties": {
          "organisation": {
            "minLength": 1,
            "type": "string",
            "description": "Organisation this belongs to.",
            "nullable": true
          },
          "cacheId": {
            "type": "string",
            "description": "The identifier to be used when performing operations on the API Key",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Display name of the API Key",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "description": "Currently blocked from logging in",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionAssignment"
            },
            "nullable": true
          },
          "managedGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedApiKey": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKey"
          },
          "key": {
            "type": "string",
            "description": "Value to add in to the API-KEY header",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ApiIdentifier": {
        "required": [
          "cacheId"
        ],
        "type": "object",
        "properties": {
          "cacheId": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "childGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organisation": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isBuiltIn": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "organisation"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "pattern": "^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-||_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+([a-z]+|\\d|-|\\.{0,1}|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])?([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$",
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "minLength": 1,
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "minLength": 1,
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "organisation": {
            "minLength": 1,
            "type": "string",
            "description": "Organisation this belongs to.",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "isAuth0User": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "description": "Currently blocked from logging in",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionAssignment"
            },
            "nullable": true
          },
          "managedGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewUserRequest": {
        "required": [
          "redirect",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "redirect": {
            "minLength": 1,
            "type": "string",
            "description": "URL the user should be redirected to after his first login",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedUser": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "passwordResetLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "connection": {
            "type": "string",
            "nullable": true
          },
          "connection_id": {
            "type": "string",
            "nullable": true
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "client_name": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "user_name": {
            "type": "string",
            "nullable": true
          },
          "strategy": {
            "type": "string",
            "nullable": true
          },
          "StrategyType": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "string",
            "nullable": true
          },
          "_id": {
            "type": "string",
            "nullable": true
          },
          "isMobile": {
            "type": "boolean"
          },
          "user_agent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiKey"
        }
      },
      "ApiKeyGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiKey"
        }
      },
      "ApiKeyGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiKey"
        }
      },
      "ApplicationGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Application"
        }
      },
      "ApplicationGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Application"
        }
      },
      "ApplicationGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Application"
        }
      },
      "GroupGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Group"
        }
      },
      "GroupGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Group"
        }
      },
      "GroupGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Group"
        }
      },
      "OrganisationGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Organisation"
        }
      },
      "OrganisationGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Organisation"
        }
      },
      "OrganisationGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Organisation"
        }
      },
      "PermissionGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Permission"
        }
      },
      "PermissionGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Permission"
        }
      },
      "PermissionGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Permission"
        }
      },
      "ResourceTypeGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceType"
        }
      },
      "ResourceTypeGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceType"
        }
      },
      "ResourceTypeGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceType"
        }
      },
      "RoleGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Role"
        }
      },
      "RoleGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Role"
        }
      },
      "RoleGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Role"
        }
      },
      "UserGet200TextPlainResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserGet200TextJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "name": "API-KEY",
        "in": "header",
        "type": "apiKey"
      },
      "oAuth2": {
        "flows": {
          "authorizationCode": {
            "scopes": {},
            "authorizationUrl": "https://auth.appyway.com/authorize",
            "tokenUrl": "https://auth.appyway.com/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    },
    {
      "oAuth2": []
    }
  ]
}
